--- core/src/Matrix.h	2023-02-24 14:46:06.244773735 +0000
+++ core/src/Matrix.h	2023-02-24 14:46:12.619482571 +0000
@@ -34,9 +34,6 @@
 public:
 	Matrix() = default;
 
-#ifdef __GNUC__
-	__attribute__((no_sanitize("signed-integer-overflow")))
-#endif
 	Matrix(int width, int height, value_t val = {}) : _width(width), _height(height), _data(_width * _height, val) {
 		if (width != 0 && Size(_data) / width != height)
 			throw std::invalid_argument("invalid size: width * height is too big");
--- core/src/BitMatrix.h	2023-02-24 15:56:00.813976749 +0000
+++ core/src/BitMatrix.h	2023-02-24 15:56:18.740156420 +0000
@@ -57,9 +57,6 @@
 public:
 	BitMatrix() = default;
 
-#ifdef __GNUC__
-	__attribute__((no_sanitize("signed-integer-overflow")))
-#endif
 	BitMatrix(int width, int height) : _width(width), _height(height), _bits(width * height, UNSET_V)
 	{
 		if (width != 0 && Size(_bits) / width != height)
