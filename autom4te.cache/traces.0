m4trace:/usr/share/aclocal/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:/usr/share/aclocal/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $2])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
        AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
                $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else
                $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
        # Put the nasty error message in config.log where it belongs
        echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

        m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
        AC_MSG_RESULT([no])
        m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
        $1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
        $1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
        $3
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:/usr/share/aclocal/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:/usr/share/aclocal/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:/usr/share/aclocal/pkg.m4:285: -1- AC_DEFUN([PKG_WITH_MODULES], [
m4_pushdef([with_arg], m4_tolower([$1]))

m4_pushdef([description],
           [m4_default([$5], [build with ]with_arg[ support])])

m4_pushdef([def_arg], [m4_default([$6], [auto])])
m4_pushdef([def_action_if_found], [AS_TR_SH([with_]with_arg)=yes])
m4_pushdef([def_action_if_not_found], [AS_TR_SH([with_]with_arg)=no])

m4_case(def_arg,
            [yes],[m4_pushdef([with_without], [--without-]with_arg)],
            [m4_pushdef([with_without],[--with-]with_arg)])

AC_ARG_WITH(with_arg,
     AS_HELP_STRING(with_without, description[ @<:@default=]def_arg[@:>@]),,
    [AS_TR_SH([with_]with_arg)=def_arg])

AS_CASE([$AS_TR_SH([with_]with_arg)],
            [yes],[PKG_CHECK_MODULES([$1],[$2],$3,$4)],
            [auto],[PKG_CHECK_MODULES([$1],[$2],
                                        [m4_n([def_action_if_found]) $3],
                                        [m4_n([def_action_if_not_found]) $4])])

m4_popdef([with_arg])
m4_popdef([description])
m4_popdef([def_arg])

])
m4trace:/usr/share/aclocal/pkg.m4:322: -1- AC_DEFUN([PKG_HAVE_WITH_MODULES], [
PKG_WITH_MODULES([$1],[$2],,,[$3],[$4])

AM_CONDITIONAL([HAVE_][$1],
               [test "$AS_TR_SH([with_]m4_tolower([$1]))" = "yes"])
])
m4trace:/usr/share/aclocal/pkg.m4:337: -1- AC_DEFUN([PKG_HAVE_DEFINE_WITH_MODULES], [
PKG_HAVE_WITH_MODULES([$1],[$2],[$3],[$4])

AS_IF([test "$AS_TR_SH([with_]m4_tolower([$1]))" = "yes"],
        [AC_DEFINE([HAVE_][$1], 1, [Enable ]m4_tolower([$1])[ support])])
])
m4trace:/usr/share/aclocal-1.16/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.16/python.m4:35: -1- AC_DEFUN([AM_PATH_PYTHON], [
  dnl Find a Python interpreter.  Python versions prior to 2.0 are not
  dnl supported. (2.0 was released on October 16, 2000).
  m4_define_default([_AM_PYTHON_INTERPRETER_LIST],
[python python2 python3 dnl
 python3.11 python3.10 dnl
 python3.9 python3.8 python3.7 python3.6 python3.5 python3.4 python3.3 dnl
 python3.2 python3.1 python3.0 dnl
 python2.7 python2.6 python2.5 python2.4 python2.3 python2.2 python2.1 dnl
 python2.0])

  AC_ARG_VAR([PYTHON], [the Python interpreter])

  m4_if([$1],[],[
    dnl No version check is needed.
    # Find any Python interpreter.
    if test -z "$PYTHON"; then
      AC_PATH_PROGS([PYTHON], _AM_PYTHON_INTERPRETER_LIST, :)
    fi
    am_display_PYTHON=python
  ], [
    dnl A version check is needed.
    if test -n "$PYTHON"; then
      # If the user set $PYTHON, use it and don't search something else.
      AC_MSG_CHECKING([whether $PYTHON version is >= $1])
      AM_PYTHON_CHECK_VERSION([$PYTHON], [$1],
			      [AC_MSG_RESULT([yes])],
			      [AC_MSG_RESULT([no])
			       AC_MSG_ERROR([Python interpreter is too old])])
      am_display_PYTHON=$PYTHON
    else
      # Otherwise, try each interpreter until we find one that satisfies
      # VERSION.
      AC_CACHE_CHECK([for a Python interpreter with version >= $1],
	[am_cv_pathless_PYTHON],[
	for am_cv_pathless_PYTHON in _AM_PYTHON_INTERPRETER_LIST none; do
	  test "$am_cv_pathless_PYTHON" = none && break
	  AM_PYTHON_CHECK_VERSION([$am_cv_pathless_PYTHON], [$1], [break])
	done])
      # Set $PYTHON to the absolute path of $am_cv_pathless_PYTHON.
      if test "$am_cv_pathless_PYTHON" = none; then
	PYTHON=:
      else
        AC_PATH_PROG([PYTHON], [$am_cv_pathless_PYTHON])
      fi
      am_display_PYTHON=$am_cv_pathless_PYTHON
    fi
  ])

  if test "$PYTHON" = :; then
    dnl Run any user-specified action, or abort.
    m4_default([$3], [AC_MSG_ERROR([no suitable Python interpreter found])])
  else

  dnl Query Python for its version number.  Although site.py simply uses
  dnl sys.version[:3], printing that failed with Python 3.10, since the
  dnl trailing zero was eliminated. So now we output just the major
  dnl and minor version numbers, as numbers. Apparently the tertiary
  dnl version is not of interest.
  dnl
  AC_CACHE_CHECK([for $am_display_PYTHON version], [am_cv_python_version],
    [am_cv_python_version=`$PYTHON -c "import sys; print ('%u.%u' % sys.version_info[[:2]])"`])
  AC_SUBST([PYTHON_VERSION], [$am_cv_python_version])

  dnl At times, e.g., when building shared libraries, you may want
  dnl to know which OS platform Python thinks this is.
  dnl
  AC_CACHE_CHECK([for $am_display_PYTHON platform], [am_cv_python_platform],
    [am_cv_python_platform=`$PYTHON -c "import sys; sys.stdout.write(sys.platform)"`])
  AC_SUBST([PYTHON_PLATFORM], [$am_cv_python_platform])

  dnl emacs-page
  dnl If --with-python-sys-prefix is given, use the values of sys.prefix
  dnl and sys.exec_prefix for the corresponding values of PYTHON_PREFIX
  dnl and PYTHON_EXEC_PREFIX. Otherwise, use the GNU ${prefix} and
  dnl ${exec_prefix} variables.
  dnl
  dnl The two are made distinct variables so they can be overridden if
  dnl need be, although general consensus is that you shouldn't need
  dnl this separation.
  dnl
  dnl Also allow directly setting the prefixes via configure options,
  dnl overriding any default.
  dnl
  if test "x$prefix" = xNONE; then
    am__usable_prefix=$ac_default_prefix
  else
    am__usable_prefix=$prefix
  fi

  # Allow user to request using sys.* values from Python,
  # instead of the GNU $prefix values.
  AC_ARG_WITH([python-sys-prefix],
  [AS_HELP_STRING([--with-python-sys-prefix],
                  [use Python's sys.prefix and sys.exec_prefix values])],
  [am_use_python_sys=:],
  [am_use_python_sys=false])

  # Allow user to override whatever the default Python prefix is.
  AC_ARG_WITH([python_prefix],
  [AS_HELP_STRING([--with-python_prefix],
                  [override the default PYTHON_PREFIX])],
  [am_python_prefix_subst=$withval
   am_cv_python_prefix=$withval
   AC_MSG_CHECKING([for explicit $am_display_PYTHON prefix])
   AC_MSG_RESULT([$am_cv_python_prefix])],
  [
   if $am_use_python_sys; then
     # using python sys.prefix value, not GNU
     AC_CACHE_CHECK([for python default $am_display_PYTHON prefix],
     [am_cv_python_prefix],
     [am_cv_python_prefix=`$PYTHON -c "import sys; sys.stdout.write(sys.prefix)"`])

     dnl If sys.prefix is a subdir of $prefix, replace the literal value of
     dnl $prefix with a variable reference so it can be overridden.
     case $am_cv_python_prefix in
     $am__usable_prefix*)
       am__strip_prefix=`echo "$am__usable_prefix" | sed 's|.|.|g'`
       am_python_prefix_subst=`echo "$am_cv_python_prefix" | sed "s,^$am__strip_prefix,\\${prefix},"`
       ;;
     *)
       am_python_prefix_subst=$am_cv_python_prefix
       ;;
     esac
   else # using GNU prefix value, not python sys.prefix
     am_python_prefix_subst='${prefix}'
     am_python_prefix=$am_python_prefix_subst
     AC_MSG_CHECKING([for GNU default $am_display_PYTHON prefix])
     AC_MSG_RESULT([$am_python_prefix])
   fi])
  # Substituting python_prefix_subst value.
  AC_SUBST([PYTHON_PREFIX], [$am_python_prefix_subst])

  # emacs-page Now do it all over again for Python exec_prefix, but with yet
  # another conditional: fall back to regular prefix if that was specified.
  AC_ARG_WITH([python_exec_prefix],
  [AS_HELP_STRING([--with-python_exec_prefix],
                  [override the default PYTHON_EXEC_PREFIX])],
  [am_python_exec_prefix_subst=$withval
   am_cv_python_exec_prefix=$withval
   AC_MSG_CHECKING([for explicit $am_display_PYTHON exec_prefix])
   AC_MSG_RESULT([$am_cv_python_exec_prefix])],
  [
   # no explicit --with-python_exec_prefix, but if
   # --with-python_prefix was given, use its value for python_exec_prefix too.
   AS_IF([test -n "$with_python_prefix"],
   [am_python_exec_prefix_subst=$with_python_prefix
    am_cv_python_exec_prefix=$with_python_prefix
    AC_MSG_CHECKING([for python_prefix-given $am_display_PYTHON exec_prefix])
    AC_MSG_RESULT([$am_cv_python_exec_prefix])],
   [
    # Set am__usable_exec_prefix whether using GNU or Python values,
    # since we use that variable for pyexecdir.
    if test "x$exec_prefix" = xNONE; then
      am__usable_exec_prefix=$am__usable_prefix
    else
      am__usable_exec_prefix=$exec_prefix
    fi
    #
    if $am_use_python_sys; then # using python sys.exec_prefix, not GNU
      AC_CACHE_CHECK([for python default $am_display_PYTHON exec_prefix],
      [am_cv_python_exec_prefix],
      [am_cv_python_exec_prefix=`$PYTHON -c "import sys; sys.stdout.write(sys.exec_prefix)"`])
      dnl If sys.exec_prefix is a subdir of $exec_prefix, replace the
      dnl literal value of $exec_prefix with a variable reference so it can
      dnl be overridden.
      case $am_cv_python_exec_prefix in
      $am__usable_exec_prefix*)
        am__strip_prefix=`echo "$am__usable_exec_prefix" | sed 's|.|.|g'`
        am_python_exec_prefix_subst=`echo "$am_cv_python_exec_prefix" | sed "s,^$am__strip_prefix,\\${exec_prefix},"`
        ;;
      *)
        am_python_exec_prefix_subst=$am_cv_python_exec_prefix
        ;;
     esac
   else # using GNU $exec_prefix, not python sys.exec_prefix
     am_python_exec_prefix_subst='${exec_prefix}'
     am_python_exec_prefix=$am_python_exec_prefix_subst
     AC_MSG_CHECKING([for GNU default $am_display_PYTHON exec_prefix])
     AC_MSG_RESULT([$am_python_exec_prefix])
   fi])])
  # Substituting python_exec_prefix_subst.
  AC_SUBST([PYTHON_EXEC_PREFIX], [$am_python_exec_prefix_subst])

  # Factor out some code duplication into this shell variable.
  am_python_setup_sysconfig="\
import sys
# Prefer sysconfig over distutils.sysconfig, for better compatibility
# with python 3.x.  See automake bug#10227.
try:
    import sysconfig
except ImportError:
    can_use_sysconfig = 0
else:
    can_use_sysconfig = 1
# Can't use sysconfig in CPython 2.7, since it's broken in virtualenvs:
# <https://github.com/pypa/virtualenv/issues/118>
try:
    from platform import python_implementation
    if python_implementation() == 'CPython' and sys.version[[:3]] == '2.7':
        can_use_sysconfig = 0
except ImportError:
    pass"

  dnl emacs-page Set up 4 directories:

  dnl 1. pythondir: where to install python scripts.  This is the
  dnl    site-packages directory, not the python standard library
  dnl    directory like in previous automake betas.  This behavior
  dnl    is more consistent with lispdir.m4 for example.
  dnl Query distutils for this directory.
  dnl
  AC_CACHE_CHECK([for $am_display_PYTHON script directory (pythondir)],
  [am_cv_python_pythondir],
  [if test "x$am_cv_python_prefix" = x; then
     am_py_prefix=$am__usable_prefix
   else
     am_py_prefix=$am_cv_python_prefix
   fi
   am_cv_python_pythondir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
  if hasattr(sysconfig, 'get_default_scheme'):
    scheme = sysconfig.get_default_scheme()
  else:
    scheme = sysconfig._get_default_scheme()
  if scheme == 'posix_local':
    # Debian's default scheme installs to /usr/local/ but we want to find headers in /usr/
    scheme = 'posix_prefix'
  sitedir = sysconfig.get_path('purelib', scheme, vars={'base':'$am_py_prefix'})
else:
  from distutils import sysconfig
  sitedir = sysconfig.get_python_lib(0, 0, prefix='$am_py_prefix')
sys.stdout.write(sitedir)"`
   #
   case $am_cv_python_pythondir in
   $am_py_prefix*)
     am__strip_prefix=`echo "$am_py_prefix" | sed 's|.|.|g'`
     am_cv_python_pythondir=`echo "$am_cv_python_pythondir" | sed "s,^$am__strip_prefix,\\${PYTHON_PREFIX},"`
     ;;
   *)
     case $am_py_prefix in
       /usr|/System*) ;;
       *) am_cv_python_pythondir="\${PYTHON_PREFIX}/lib/python$PYTHON_VERSION/site-packages"
          ;;
     esac
     ;;
   esac
  ])
  AC_SUBST([pythondir], [$am_cv_python_pythondir])

  dnl 2. pkgpythondir: $PACKAGE directory under pythondir.  Was
  dnl    PYTHON_SITE_PACKAGE in previous betas, but this naming is
  dnl    more consistent with the rest of automake.
  dnl
  AC_SUBST([pkgpythondir], [\${pythondir}/$PACKAGE])

  dnl 3. pyexecdir: directory for installing python extension modules
  dnl    (shared libraries).
  dnl Query distutils for this directory.
  dnl
  AC_CACHE_CHECK([for $am_display_PYTHON extension module directory (pyexecdir)],
  [am_cv_python_pyexecdir],
  [if test "x$am_cv_python_exec_prefix" = x; then
     am_py_exec_prefix=$am__usable_exec_prefix
   else
     am_py_exec_prefix=$am_cv_python_exec_prefix
   fi
   am_cv_python_pyexecdir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
  if hasattr(sysconfig, 'get_default_scheme'):
    scheme = sysconfig.get_default_scheme()
  else:
    scheme = sysconfig._get_default_scheme()
  if scheme == 'posix_local':
    # Debian's default scheme installs to /usr/local/ but we want to find headers in /usr/
    scheme = 'posix_prefix'
  sitedir = sysconfig.get_path('platlib', scheme, vars={'platbase':'$am_py_exec_prefix'})
else:
  from distutils import sysconfig
  sitedir = sysconfig.get_python_lib(1, 0, prefix='$am_py_exec_prefix')
sys.stdout.write(sitedir)"`
   #
   case $am_cv_python_pyexecdir in
   $am_py_exec_prefix*)
     am__strip_prefix=`echo "$am_py_exec_prefix" | sed 's|.|.|g'`
     am_cv_python_pyexecdir=`echo "$am_cv_python_pyexecdir" | sed "s,^$am__strip_prefix,\\${PYTHON_EXEC_PREFIX},"`
     ;;
   *)
     case $am_py_exec_prefix in
       /usr|/System*) ;;
       *) am_cv_python_pyexecdir="\${PYTHON_EXEC_PREFIX}/lib/python$PYTHON_VERSION/site-packages"
          ;;
     esac
     ;;
   esac
  ])
  AC_SUBST([pyexecdir], [$am_cv_python_pyexecdir])

  dnl 4. pkgpyexecdir: $(pyexecdir)/$(PACKAGE)
  dnl
  AC_SUBST([pkgpyexecdir], [\${pyexecdir}/$PACKAGE])

  dnl Run any user-specified action.
  $2
  fi
])
m4trace:/usr/share/aclocal-1.16/python.m4:353: -1- AC_DEFUN([AM_PYTHON_CHECK_VERSION], [prog="import sys
# split strings by '.' and convert to numeric.  Append some zeros
# because we need at least 4 digits for the hex conversion.
# map returns an iterator in Python 3.0 and a list in 2.x
minver = list(map(int, '$2'.split('.'))) + [[0, 0, 0]]
minverhex = 0
# xrange is not present in Python 3.0 and range returns an iterator
for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[[i]]
sys.exit(sys.hexversion < minverhex)"
  AS_IF([AM_RUN_LOG([$1 -c "$prog"])], [$3], [$4])])
m4trace:/usr/share/aclocal-1.16/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/home/checker-software/Documents/libreoffice/m4/ax_boost_base.m4:38: -1- AC_DEFUN([AX_BOOST_BASE], [
AC_ARG_WITH([boost],
  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],
    [use Boost library from a standard location (ARG=yes),
     from the specified location (ARG=<path>),
     or disable it (ARG=no)
     @<:@ARG=yes@:>@ ])],
    [
    if test "$withval" = "no"; then
        want_boost="no"
    elif test "$withval" = "yes"; then
        want_boost="yes"
        ac_boost_path=""
    else
        want_boost="yes"
        ac_boost_path="$withval"
    fi
    ],
    [want_boost="yes"])


AC_ARG_WITH([boost-libdir],
        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],
        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),
        [
        if test -d "$withval"
        then
                ac_boost_lib_path="$withval"
        else
                AC_MSG_ERROR(--with-boost-libdir expected directory name)
        fi
        ],
        [ac_boost_lib_path=""]
)

if test "x$want_boost" = "xyes"; then
    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)
    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\([[0-9]]*\.[[0-9]]*\)'`
    boost_lib_version_req_major=`expr $boost_lib_version_req : '\([[0-9]]*\)'`
    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\.\([[0-9]]*\)'`
    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\.[[0-9]]*\.\([[0-9]]*\)'`
    if test "x$boost_lib_version_req_sub_minor" = "x" ; then
        boost_lib_version_req_sub_minor="0"
        fi
    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \* 100000 \+  $boost_lib_version_req_minor \* 100 \+ $boost_lib_version_req_sub_minor`
    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)
    succeeded=no

    dnl On 64-bit systems check for system libraries in both lib64 and lib.
    dnl The former is specified by FHS, but e.g. Debian does not adhere to
    dnl this (as it rises problems for generic multi-arch support).
    dnl The last entry in the list is chosen by default when no libraries
    dnl are found, e.g. when only header-only libraries are installed!
    libsubdirs="lib"
    ax_arch=`uname -m`
    if test $ax_arch = x86_64 -o $ax_arch = ppc64 -o $ax_arch = ppc64le -o $ax_arch = s390x -o $ax_arch = sparc64 -o $ax_arch = aarch64 -o $ax_arch = riscv64; then
        libsubdirs="lib64 lib lib64"
    fi

    dnl first we check the system location for boost libraries
    dnl this location is chosen if boost libraries are installed with the --layout=system option
    dnl or if you install boost with RPM
    if test "$ac_boost_path" != ""; then
        BOOST_CPPFLAGS="-I$ac_boost_path/include"
        for ac_boost_path_tmp in $libsubdirs; do
                if test -d "$ac_boost_path"/"$ac_boost_path_tmp" ; then
                        BOOST_LDFLAGS="-L$ac_boost_path/$ac_boost_path_tmp"
                        break
                fi
        done
    else
        if test "$cross_compiling" != yes; then
            ac_boost_paths='/usr /usr/local /opt /opt/local'
        else
            ac_boost_paths="/usr/$host/sys-root/mingw"
        fi
        for ac_boost_path_tmp in $ac_boost_paths ; do
            if test -d "$ac_boost_path_tmp/include/boost" && test -r "$ac_boost_path_tmp/include/boost"; then
                for libsubdir in $libsubdirs ; do
                    if ls "$ac_boost_path_tmp/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                BOOST_LDFLAGS="-L$ac_boost_path_tmp/$libsubdir"
                BOOST_CPPFLAGS="-I$ac_boost_path_tmp/include"
                break;
            fi
        done
    fi

    dnl overwrite ld flags if we have required special directory with
    dnl --with-boost-libdir parameter
    if test "$ac_boost_lib_path" != ""; then
       BOOST_LDFLAGS="-L$ac_boost_lib_path"
    fi

    CPPFLAGS_SAVED="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
    export CPPFLAGS

    LDFLAGS_SAVED="$LDFLAGS"
    LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
    export LDFLAGS

    AC_REQUIRE([AC_PROG_CXX])
    AC_LANG_PUSH(C++)
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    @%:@include <boost/version.hpp>
    ]], [[
    #if BOOST_VERSION >= $WANT_BOOST_VERSION
    // Everything is okay
    #else
    #  error Boost version is too old
    #endif
    ]])],[
        AC_MSG_RESULT(yes)
    succeeded=yes
    found_system=yes
        ],[
        ])
    AC_LANG_POP([C++])



    dnl if we found no boost with system layout we search for boost libraries
    dnl built and installed without the --layout=system option or for a staged(not installed) version
    if test "x$succeeded" != "xyes"; then
        _version=0
        if test "$ac_boost_path" != ""; then
            if test -d "$ac_boost_path" && test -r "$ac_boost_path"; then
                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do
                    _version_tmp=`echo $i | sed "s#$ac_boost_path##" | sed 's/\/include\/boost-//' | sed 's/_/./'`
                    V_CHECK=`expr $_version_tmp \> $_version`
                    if test "$V_CHECK" = "1" ; then
                        _version=$_version_tmp
                    fi
                    VERSION_UNDERSCORE=`echo $_version | sed 's/\./_/'`
                    BOOST_CPPFLAGS="-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE"
                done
            fi
        else
            if test "$cross_compiling" != yes; then
                ac_boost_paths='/usr /usr/local /opt /opt/local'
            else
                ac_boost_paths="/usr/$host/sys-root/mingw"
            fi
            for ac_boost_path in $ac_boost_paths ; do
                if test -d "$ac_boost_path" && test -r "$ac_boost_path"; then
                    for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do
                        _version_tmp=`echo $i | sed "s#$ac_boost_path##" | sed 's/\/include\/boost-//' | sed 's/_/./'`
                        V_CHECK=`expr $_version_tmp \> $_version`
                        if test "$V_CHECK" = "1" ; then
                            _version=$_version_tmp
                            best_path=$ac_boost_path
                        fi
                    done
                fi
            done

            VERSION_UNDERSCORE=`echo $_version | sed 's/\./_/'`
            BOOST_CPPFLAGS="-I$best_path/include/boost-$VERSION_UNDERSCORE"
            if test "$ac_boost_lib_path" = ""; then
                for libsubdir in $libsubdirs ; do
                    if ls "$best_path/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                BOOST_LDFLAGS="-L$best_path/$libsubdir"
            fi

            if test "x$BOOST_ROOT" != "x"; then
                for libsubdir in $libsubdirs ; do
                    if ls "$BOOST_ROOT/stage/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                if test -d "$BOOST_ROOT" && test -r "$BOOST_ROOT" && test -d "$BOOST_ROOT/stage/$libsubdir" && test -r "$BOOST_ROOT/stage/$libsubdir"; then
                    version_dir=`expr //$BOOST_ROOT : '.*/\(.*\)'`
                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`
                        stage_version_shorten=`expr $stage_version : '\([[0-9]]*\.[[0-9]]*\)'`
                    V_CHECK=`expr $stage_version_shorten \>\= $_version`
                    if test "$V_CHECK" = "1" -a "$ac_boost_lib_path" = "" ; then
                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)
                        BOOST_CPPFLAGS="-I$BOOST_ROOT"
                        BOOST_LDFLAGS="-L$BOOST_ROOT/stage/$libsubdir"
                    fi
                fi
            fi
        fi

        CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
        export CPPFLAGS
        LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
        export LDFLAGS

        AC_LANG_PUSH(C++)
            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        @%:@include <boost/version.hpp>
        ]], [[
        #if BOOST_VERSION >= $WANT_BOOST_VERSION
        // Everything is okay
        #else
        #  error Boost version is too old
        #endif
        ]])],[
            AC_MSG_RESULT(yes)
        succeeded=yes
        found_system=yes
            ],[
            ])
        AC_LANG_POP([C++])
    fi

    if test "$succeeded" != "yes" ; then
        if test "$_version" = "0" ; then
            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])
        else
            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])
        fi
        # execute ACTION-IF-NOT-FOUND (if present):
        ifelse([$3], , :, [$3])
    else
        AC_SUBST(BOOST_CPPFLAGS)
        AC_SUBST(BOOST_LDFLAGS)
        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])
        # execute ACTION-IF-FOUND (if present):
        ifelse([$2], , :, [$2])
    fi

    CPPFLAGS="$CPPFLAGS_SAVED"
    LDFLAGS="$LDFLAGS_SAVED"
fi

])
m4trace:/home/checker-software/Documents/libreoffice/m4/ax_boost_date_time.m4:35: -1- AC_DEFUN([AX_BOOST_DATE_TIME], [
	AC_ARG_WITH([boost-date-time],
	AS_HELP_STRING([--with-boost-date-time@<:@=special-lib@:>@],
                   [use the Date_Time library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-date-time=boost_date_time-gcc-mt-d-1_33_1 ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_date_time_lib=""
        else
		    want_boost="yes"
		ax_boost_user_date_time_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::Date_Time library is available,
					   ax_cv_boost_date_time,
        [AC_LANG_PUSH([C++])
		 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/date_time/gregorian/gregorian_types.hpp>]],
                                   [[using namespace boost::gregorian; date d(2002,Jan,10);
                                     return 0;
                                   ]])],
         ax_cv_boost_date_time=yes, ax_cv_boost_date_time=no)
         AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_date_time" = "xyes"; then
			AC_DEFINE(HAVE_BOOST_DATE_TIME,,[define if the Boost::Date_Time library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`
            if test "x$ax_boost_user_date_time_lib" = "x"; then
                for libextension in `ls $BOOSTLIBDIR/libboost_date_time*.so* $BOOSTLIBDIR/libboost_date_time*.dylib* $BOOSTLIBDIR/libboost_date_time*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\(boost_date_time.*\)\.so.*$;\1;' -e 's;^lib\(boost_date_time.*\)\.dylib.*$;\1;' -e 's;^lib\(boost_date_time.*\)\.a*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_DATE_TIME_LIB="-l$ax_lib"; AC_SUBST(BOOST_DATE_TIME_LIB) link_date_time="yes"; break],
                                 [link_date_time="no"])
				done
                if test "x$link_date_time" != "xyes"; then
                for libextension in `ls $BOOSTLIBDIR/boost_date_time*.dll* $BOOSTLIBDIR/boost_date_time*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\(boost_date_time.*\)\.dll.*$;\1;' -e 's;^\(boost_date_time.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_DATE_TIME_LIB="-l$ax_lib"; AC_SUBST(BOOST_DATE_TIME_LIB) link_date_time="yes"; break],
                                 [link_date_time="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_date_time_lib boost_date_time-$ax_boost_user_date_time_lib; do
				      AC_CHECK_LIB($ax_lib, main,
                                   [BOOST_DATE_TIME_LIB="-l$ax_lib"; AC_SUBST(BOOST_DATE_TIME_LIB) link_date_time="yes"; break],
                                   [link_date_time="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost date_time library!)
            fi
			if test "x$link_date_time" != "xyes"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:/home/checker-software/Documents/libreoffice/m4/ax_boost_filesystem.m4:36: -1- AC_DEFUN([AX_BOOST_FILESYSTEM], [
	AC_ARG_WITH([boost-filesystem],
	AS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],
                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_filesystem_lib=""
        else
		    want_boost="yes"
		ax_boost_user_filesystem_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

		LIBS_SAVED=$LIBS
		LIBS="$LIBS $BOOST_SYSTEM_LIB"
		export LIBS

        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,
					   ax_cv_boost_filesystem,
        [AC_LANG_PUSH([C++])
         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],
                                   [[using namespace boost::filesystem;
                                   path my_path( "foo/bar/data.txt" );
                                   return 0;]])],
					       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)
         AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_filesystem" = "xyes"; then
			AC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`
            if test "x$ax_boost_user_filesystem_lib" = "x"; then
                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_FILESYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem="yes"; break],
                                 [link_filesystem="no"])
				done
                if test "x$link_filesystem" != "xyes"; then
                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_FILESYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem="yes"; break],
                                 [link_filesystem="no"])
				done
		    fi
            else
               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_FILESYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem="yes"; break],
                                   [link_filesystem="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost filesystem library!)
            fi
			if test "x$link_filesystem" != "xyes"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
		LDFLAGS="$LDFLAGS_SAVED"
		LIBS="$LIBS_SAVED"
	fi
])
m4trace:/home/checker-software/Documents/libreoffice/m4/ax_boost_iostreams.m4:34: -1- AC_DEFUN([AX_BOOST_IOSTREAMS], [
	AC_ARG_WITH([boost-iostreams],
	AS_HELP_STRING([--with-boost-iostreams@<:@=special-lib@:>@],
                   [use the IOStreams library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-iostreams=boost_iostreams-gcc-mt-d-1_33_1 ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_iostreams_lib=""
        else
		    want_boost="yes"
		ax_boost_user_iostreams_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::IOStreams library is available,
					   ax_cv_boost_iostreams,
        [AC_LANG_PUSH([C++])
		 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/iostreams/filtering_stream.hpp>
											 @%:@include <boost/range/iterator_range.hpp>
											]],
                                  [[std::string  input = "Hello World!";
								 namespace io = boost::iostreams;
									 io::filtering_istream  in(boost::make_iterator_range(input));
									 return 0;
                                   ]])],
                             ax_cv_boost_iostreams=yes, ax_cv_boost_iostreams=no)
         AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_iostreams" = "xyes"; then
			AC_DEFINE(HAVE_BOOST_IOSTREAMS,,[define if the Boost::IOStreams library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`
            if test "x$ax_boost_user_iostreams_lib" = "x"; then
                for libextension in `ls $BOOSTLIBDIR/libboost_iostreams*.so* $BOOSTLIBDIR/libboost_iostream*.dylib* $BOOSTLIBDIR/libboost_iostreams*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\(boost_iostreams.*\)\.so.*$;\1;' -e 's;^lib\(boost_iostream.*\)\.dylib.*$;\1;' -e 's;^lib\(boost_iostreams.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_IOSTREAMS_LIB="-l$ax_lib"; AC_SUBST(BOOST_IOSTREAMS_LIB) link_iostreams="yes"; break],
                                 [link_iostreams="no"])
				done
                if test "x$link_iostreams" != "xyes"; then
                for libextension in `ls $BOOSTLIBDIR/boost_iostreams*.dll* $BOOSTLIBDIR/boost_iostreams*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\(boost_iostreams.*\)\.dll.*$;\1;' -e 's;^\(boost_iostreams.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_IOSTREAMS_LIB="-l$ax_lib"; AC_SUBST(BOOST_IOSTREAMS_LIB) link_iostreams="yes"; break],
                                 [link_iostreams="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_iostreams_lib boost_iostreams-$ax_boost_user_iostreams_lib; do
				      AC_CHECK_LIB($ax_lib, main,
                                   [BOOST_IOSTREAMS_LIB="-l$ax_lib"; AC_SUBST(BOOST_IOSTREAMS_LIB) link_iostreams="yes"; break],
                                   [link_iostreams="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost iostreams library!)
            fi
			if test "x$link_iostreams" != "xyes"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:/home/checker-software/Documents/libreoffice/m4/ax_boost_locale.m4:34: -1- AC_DEFUN([AX_BOOST_LOCALE], [
	AC_ARG_WITH([boost-locale],
	AS_HELP_STRING([--with-boost-locale@<:@=special-lib@:>@],
                   [use the Locale library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-locale=boost_locale-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_locale_lib=""
        else
		    want_boost="yes"
		ax_boost_user_locale_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
        AC_REQUIRE([AC_CANONICAL_BUILD])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::Locale library is available,
					   ax_cv_boost_locale,
        [AC_LANG_PUSH([C++])
			 CXXFLAGS_SAVE=$CXXFLAGS

			 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/locale.hpp>]],
                                   [[boost::locale::generator gen;
                                   std::locale::global(gen(""));]])],
                   ax_cv_boost_locale=yes, ax_cv_boost_locale=no)
			 CXXFLAGS=$CXXFLAGS_SAVE
             AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_locale" = "xyes"; then
			AC_SUBST(BOOST_CPPFLAGS)

			AC_DEFINE(HAVE_BOOST_LOCALE,,[define if the Boost::Locale library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`

			LDFLAGS_SAVE=$LDFLAGS
            if test "x$ax_boost_user_locale_lib" = "x"; then
                for libextension in `ls $BOOSTLIBDIR/libboost_locale*.so* $BOOSTLIBDIR/libboost_locale*.dylib* $BOOSTLIBDIR/libboost_locale*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\(boost_locale.*\)\.so.*$;\1;' -e 's;^lib\(boost_locale.*\)\.dylib.*$;\1;' -e 's;^lib\(boost_locale.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_LOCALE_LIB="-l$ax_lib"; AC_SUBST(BOOST_LOCALE_LIB) link_locale="yes"; break],
                                 [link_locale="no"])
				done
                if test "x$link_locale" != "xyes"; then
                for libextension in `ls $BOOSTLIBDIR/boost_locale*.dll* $BOOSTLIBDIR/boost_locale*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\(boost_locale.*\)\.dll.*$;\1;' -e 's;^\(boost_locale.*\)\.a.*$;\1;'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_LOCALE_LIB="-l$ax_lib"; AC_SUBST(BOOST_LOCALE_LIB) link_locale="yes"; break],
                                 [link_locale="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_locale_lib boost_locale-$ax_boost_user_locale_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_LOCALE_LIB="-l$ax_lib"; AC_SUBST(BOOST_LOCALE_LIB) link_locale="yes"; break],
                                   [link_locale="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the library!)
            fi
			if test "x$link_locale" = "xno"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:/home/checker-software/Documents/libreoffice/m4/ax_boost_system.m4:36: -1- AC_DEFUN([AX_BOOST_SYSTEM], [
	AC_ARG_WITH([boost-system],
	AS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],
                   [use the System library from boost - it is possible to specify a certain library for the linker
                        e.g. --with-boost-system=boost_system-gcc-mt ]),
        [
        if test "$withval" = "no"; then
			want_boost="no"
        elif test "$withval" = "yes"; then
            want_boost="yes"
            ax_boost_user_system_lib=""
        else
		    want_boost="yes"
		ax_boost_user_system_lib="$withval"
		fi
        ],
        [want_boost="yes"]
	)

	if test "x$want_boost" = "xyes"; then
        AC_REQUIRE([AC_PROG_CC])
        AC_REQUIRE([AC_CANONICAL_BUILD])
		CPPFLAGS_SAVED="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
		export CPPFLAGS

		LDFLAGS_SAVED="$LDFLAGS"
		LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
		export LDFLAGS

        AC_CACHE_CHECK(whether the Boost::System library is available,
					   ax_cv_boost_system,
        [AC_LANG_PUSH([C++])
			 CXXFLAGS_SAVE=$CXXFLAGS
			 CXXFLAGS=

			 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],
				    [[boost::system::error_category *a = 0;]])],
                   ax_cv_boost_system=yes, ax_cv_boost_system=no)
			 CXXFLAGS=$CXXFLAGS_SAVE
             AC_LANG_POP([C++])
		])
		if test "x$ax_cv_boost_system" = "xyes"; then
			AC_SUBST(BOOST_CPPFLAGS)

			AC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])
            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\/@:>@*//'`

			LDFLAGS_SAVE=$LDFLAGS
            if test "x$ax_boost_user_system_lib" = "x"; then
                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_SYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_SYSTEM_LIB) link_system="yes"; break],
                                 [link_system="no"])
				done
                if test "x$link_system" != "xyes"; then
                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\..*,,'` ; do
                     ax_lib=${libextension}
				    AC_CHECK_LIB($ax_lib, exit,
                                 [BOOST_SYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_SYSTEM_LIB) link_system="yes"; break],
                                 [link_system="no"])
				done
                fi

            else
               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do
				      AC_CHECK_LIB($ax_lib, exit,
                                   [BOOST_SYSTEM_LIB="-l$ax_lib"; AC_SUBST(BOOST_SYSTEM_LIB) link_system="yes"; break],
                                   [link_system="no"])
                  done

            fi
            if test "x$ax_lib" = "x"; then
                AC_MSG_ERROR(Could not find a version of the boost system library!)
            fi
			if test "x$link_system" = "xno"; then
				AC_MSG_ERROR(Could not link against $ax_lib !)
			fi
		fi

		CPPFLAGS="$CPPFLAGS_SAVED"
	LDFLAGS="$LDFLAGS_SAVED"
	fi
])
m4trace:/home/checker-software/Documents/libreoffice/m4/introspection.m4:82: -1- AC_DEFUN([GOBJECT_INTROSPECTION_CHECK], [
  _GOBJECT_INTROSPECTION_CHECK_INTERNAL([$1])
])
m4trace:/home/checker-software/Documents/libreoffice/m4/introspection.m4:91: -1- AC_DEFUN([GOBJECT_INTROSPECTION_REQUIRE], [
  _GOBJECT_INTROSPECTION_CHECK_INTERNAL([$1], [require])
])
m4trace:/home/checker-software/Documents/libreoffice/m4/l_atomic.m4:19: -1- AC_DEFUN([CHECK_L_ATOMIC], [

  AC_LANG_PUSH(C++)

  AC_MSG_CHECKING([whether std::atomic can be used without link library])

  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_L_ATOMIC_testbody])],[
      AC_MSG_RESULT([yes])
    ],[
      AC_MSG_RESULT([no])
      LIBS="$LIBS -latomic"
      AC_MSG_CHECKING([whether std::atomic needs -latomic])
      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_L_ATOMIC_testbody])],[
          AC_MSG_RESULT([yes])
          ATOMIC_LIB=-latomic
        ],[
          AC_MSG_RESULT([no])
          AC_MSG_FAILURE([cannot figure our how to use std::atomic])
        ])
    ])

  AC_LANG_POP
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_check_extension.m4:9: -1- AC_DEFUN([libo_CHECK_EXTENSION], [
AC_ARG_ENABLE(ext-$4,
    AS_HELP_STRING([--enable-ext-$4],
        [Enable the $1 extension])
)
AC_MSG_CHECKING([for building the $1 extension])
$2_EXTENSION_PACK=
if test "x$enable_ext_$3" = "xyes" -a "x$enable_extension_integration" != "xno"; then
    SCPDEFS="$SCPDEFS -DWITH_EXTENSION_$2"
    $2_EXTENSION_PACK="$5"
    BUILD_TYPE="$BUILD_TYPE $2"
    WITH_EXTRA_EXTENSIONS=TRUE
    AC_MSG_RESULT([yes])
else
    AC_MSG_RESULT([no])
fi
AC_SUBST($2_EXTENSION_PACK)
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_enable_vclplug.m4:9: -1- AC_DEFUN([libo_ENABLE_VCLPLUG], [
dnl The $1 of enable_var is taken from the libo_ENABLE_VCLPLUG, so concat
dnl needs extra quoting and enable_var has no "magic" argument.
m4_pushdef([concat],[$][1][$][2])
m4_pushdef([enable_var],[concat(ENABLE_,m4_toupper($1))])

enable_var=
if test "$test_$1" != no -a "$enable_$1" = yes; then
    enable_var=TRUE
    AC_DEFINE(enable_var)
    R="$R $1"
fi
AC_SUBST(enable_var)

m4_popdef([enable_var])
m4_popdef([concat])
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_externals.m4:43: -1- AC_DEFUN([libo_CHECK_SYSTEM_MODULE], [
# validate arguments as possible
csm_check_required([1],[$1],m4_tolower([$1]),[lowercase])
csm_check_required([2],[$2],m4_toupper([$2]),[uppercase])
m4_ifblank([$3],[m4_fatal([$][3 is the pkg-config query and must not be blank])])
m4_if([$6],[TRUE],[],[m4_ifnblank([$6],[m4_fatal([$][6 must be TRUE or blank])])])
m4_if(
    [$4],[enabled],[
        AC_ARG_ENABLE([$1],
            AS_HELP_STRING([--disable-$1],[Disable $1 support.]),
        ,[enable_$1="yes"])
    ],[$4],[disabled],[
        AC_ARG_ENABLE([$1],
            AS_HELP_STRING([--enable-$1],[Enable $1 support.]),
        ,[enable_$1="no"])
    ],[
        m4_if([$4],[fixed],,[m4_ifnblank([$4],
              [m4_fatal([$$4 ($4) must be "enabled", "disabled", "fixed" or empty (=fixed)])])])
        enable_$1="yes";
])
m4_if(
    [$5],[system],[
        AC_ARG_WITH(system-$1,
            AS_HELP_STRING([--without-system-$1],[Build and bundle the internal $1.]),
        ,[csm_default_with($1,yes,$6)])
    ],[$5],[test-system],[
        with_system_$1="$test_system_$1"
    ],[$5],[fixed-system],[
        with_system_$1=yes
    ],[$5],[fixed-internal],[
        with_system_$1=no
    ],[$5],[system-if-linux],[
        AC_ARG_WITH(system-$1,
            AS_HELP_STRING([--with-system-$1],[Use $1 from the operating system.]),
        ,[case "$_os" in
            Linux)
                with_system_nss=yes
            ;;
            *)
                with_system_nss=no
            ;;
          esac])
    ],[
        m4_if([$5],[internal],,[m4_ifnblank([$5],
              [m4_fatal([$$5 ($5) must be "(fixed-|test-)system", "(fixed-)internal", "system-if-linux" or empty (=internal)])])])
        AC_ARG_WITH(system-$1,
            AS_HELP_STRING([--with-system-$1],[Use $1 from the operating system.]),
        ,[csm_default_with($1,no,$6)])
])

AC_MSG_CHECKING([which $1 to use])
if test "$test_$1" != no -a "$found_$1" != yes -a "$enable_$1" != no; then
    ENABLE_$2=TRUE
    if test "$with_system_$1" = yes -a "$test_system_$1" != no; then
        AC_MSG_RESULT([external])
        SYSTEM_$2=TRUE
        PKG_CHECK_MODULES([$2], [$3])
        $2_CFLAGS=$(printf '%s' "${$2_CFLAGS}" | sed -e "s/-I/${ISYSTEM?}/g")
        FilterLibs "${$2_LIBS}"
        $2_LIBS="$filteredlibs"
    else
        AC_MSG_RESULT([internal])
        SYSTEM_$2=
        $2_CFLAGS="${$2_CFLAGS_internal}"
        $2_LIBS="${$2_LIBS_internal}"
        BUILD_TYPE="$BUILD_TYPE $2"
    fi
else
    if test "$found_$1" = yes -a "$enable_$1" != no -a "$with_system_$1" = yes; then
        AC_MSG_RESULT([external])
        ENABLE_$2=TRUE
        SYSTEM_$2=TRUE
    else
        ENABLE_$2=
        SYSTEM_$2=
        $2_CFLAGS=
        $2_LIBS=
        if test "$test_$1" != no -a "$enable_$1" = no; then
            AC_MSG_RESULT([disabled])
        else
            AC_MSG_RESULT([not tested])
        fi
    fi
fi
AC_SUBST([ENABLE_$2])
AC_SUBST([SYSTEM_$2])
AC_SUBST([$2_CFLAGS])
AC_SUBST([$2_LIBS])
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_fuzz_configury.m4:9: -1- AC_DEFUN([libo_FUZZ_ARG_WITH], [
    AC_ARG_WITH([$1],
        [$2],
        [$3],
        if test "$enable_fuzz_options" = yes; then
            if test `expr $RANDOM % 2` = 1; then
                m4_translit([with-$1], [-+.], [___])=yes
            else
                m4_translit([with-$1], [-+.], [___])=no
            fi
            AC_MSG_NOTICE([Randomly set --with-$1=$m4_translit([with-$1], [-+.], [___])])
            libo_fuzzed_[]m4_translit([with-$1], [-+.], [___])=yes
            libo_fuzz_list="$libo_fuzz_list --with-$1="'$m4_translit([with-$1], [-+.], [___])'
        fi
        [$4]
        )
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_fuzz_configury.m4:27: -1- AC_DEFUN([libo_FUZZ_ARG_ENABLE], [
    AC_ARG_ENABLE([$1],
        [$2],
        [$3],
        if test "$enable_fuzz_options" = yes; then
            if test `expr $RANDOM % 2` = 1; then
                m4_translit([enable-$1], [-+.], [___])=yes
            else
                m4_translit([enable-$1], [-+.], [___])=no
            fi
            AC_MSG_NOTICE([Randomly set --enable-$1=$m4_translit([enable-$1], [-+.], [___])])
            libo_fuzzed_[]m4_translit([enable-$1], [-+.], [___])=yes
            libo_fuzz_list="$libo_fuzz_list --enable-$1="'$m4_translit([enable-$1], [-+.], [___])'
        fi
        [$4])
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_fuzz_configury.m4:44: -1- AC_DEFUN([libo_FUZZ_SUMMARY], [
    if test -n "$libo_fuzz_list"; then
        tmps=`eval echo $libo_fuzz_list`
        AC_MSG_NOTICE([Summary of fuzzing: $tmps])
    fi
])
m4trace:/home/checker-software/Documents/libreoffice/m4/libo_pkg_version.m4:28: -1- AC_DEFUN([libo_PKG_VERSION], [
    AS_IF([test -n "$SYSTEM_$1"], [
        AC_REQUIRE([PKG_PROG_PKG_CONFIG])
        AC_MSG_CHECKING([for $1 version])
        AS_IF([test -n "$PKG_CONFIG"], [
            ver=`$PKG_CONFIG --modversion "$2"`
            AS_IF([test -n "$ver"], [
                AC_MSG_RESULT([$ver])
                _libo_define_pkg_version([$1], [$ver])
            ], [
                AC_MSG_ERROR([not found])
            ])
        ], [
            AC_MSG_ERROR([not found])
        ])
    ], [
        _libo_define_pkg_version_direct([$1], m4_translit([$3], [.], [,]))
    ])
])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:12: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:12: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:12: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:429: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:458: -1- m4_pattern_allow([^PRODUCTNAME$])
m4trace:configure.ac:460: -1- m4_pattern_allow([^PRODUCTNAME_WITHOUT_SPACES$])
m4trace:configure.ac:508: -1- m4_pattern_allow([^LIBO_VERSION_MAJOR$])
m4trace:configure.ac:509: -1- m4_pattern_allow([^LIBO_VERSION_MINOR$])
m4trace:configure.ac:510: -1- m4_pattern_allow([^LIBO_VERSION_MICRO$])
m4trace:configure.ac:511: -1- m4_pattern_allow([^LIBO_VERSION_PATCH$])
m4trace:configure.ac:512: -1- m4_pattern_allow([^LIBO_VERSION_SUFFIX$])
m4trace:configure.ac:513: -1- m4_pattern_allow([^LIBO_VERSION_SUFFIX_SUFFIX$])
m4trace:configure.ac:514: -1- m4_pattern_allow([^MACOSX_BUNDLE_SHORTVERSION$])
m4trace:configure.ac:515: -1- m4_pattern_allow([^MACOSX_BUNDLE_VERSION$])
m4trace:configure.ac:517: -1- m4_pattern_allow([^LIBO_VERSION_MAJOR$])
m4trace:configure.ac:518: -1- m4_pattern_allow([^LIBO_VERSION_MINOR$])
m4trace:configure.ac:519: -1- m4_pattern_allow([^LIBO_VERSION_MICRO$])
m4trace:configure.ac:520: -1- m4_pattern_allow([^LIBO_VERSION_PATCH$])
m4trace:configure.ac:523: -1- m4_pattern_allow([^LIBO_THIS_YEAR$])
m4trace:configure.ac:527: -1- m4_pattern_allow([^BUILDCONFIG$])
m4trace:configure.ac:535: -1- m4_pattern_allow([^PRODUCTVERSION$])
m4trace:configure.ac:537: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:537: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:539: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:619: -1- m4_pattern_allow([^SRC_ROOT$])
m4trace:configure.ac:620: -1- m4_pattern_allow([^BUILDDIR$])
m4trace:configure.ac:621: -1- m4_pattern_allow([^x_Cygwin$])
m4trace:configure.ac:622: -1- m4_pattern_allow([^SRCDIR$])
m4trace:configure.ac:623: -1- m4_pattern_allow([^SRC_ROOT$])
m4trace:configure.ac:624: -1- m4_pattern_allow([^BUILDDIR$])
m4trace:configure.ac:631: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:646: -1- m4_pattern_allow([^ENABLE_LTO$])
m4trace:configure.ac:815: -1- m4_pattern_allow([^ANDROID_NDK_DIR$])
m4trace:configure.ac:816: -1- m4_pattern_allow([^ANDROID_API_LEVEL$])
m4trace:configure.ac:817: -1- m4_pattern_allow([^ANDROID_APP_ABI$])
m4trace:configure.ac:818: -1- m4_pattern_allow([^ANDROID_GCC_TOOLCHAIN_VERSION$])
m4trace:configure.ac:819: -1- m4_pattern_allow([^ANDROID_SYSROOT_PLATFORM$])
m4trace:configure.ac:820: -1- m4_pattern_allow([^ANDROID_TOOLCHAIN$])
m4trace:configure.ac:833: -1- m4_pattern_allow([^ANDROID_SDK_DIR$])
m4trace:configure.ac:846: -1- m4_pattern_allow([^HAVE_FEATURE_ANDROID_LOK$])
m4trace:configure.ac:852: -1- m4_pattern_allow([^ENABLE_ANDROID_LOK$])
m4trace:configure.ac:854: -1- libo_FUZZ_ARG_ENABLE([android-editing], [  --enable-android-editing 
                          Enable the experimental editing feature on Android.
])
m4trace:configure.ac:862: -1- m4_pattern_allow([^ENABLE_ANDROID_EDITING$])
m4trace:configure.ac:1175: -1- m4_pattern_allow([^HOST_PLATFORM$])
m4trace:configure.ac:1229: -1- m4_pattern_allow([^USE_HEADLESS_CODE$])
m4trace:configure.ac:1232: -1- m4_pattern_allow([^ENABLE_HEADLESS$])
m4trace:configure.ac:1240: -1- m4_pattern_allow([^ENABLE_HEADLESS$])
m4trace:configure.ac:1241: -1- m4_pattern_allow([^USE_HEADLESS_CODE$])
m4trace:configure.ac:1269: -1- m4_pattern_allow([^SDKDIRNAME$])
m4trace:configure.ac:1271: -1- m4_pattern_allow([^PTHREAD_CFLAGS$])
m4trace:configure.ac:1272: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:1325: -1- m4_pattern_allow([^AFLAGS$])
m4trace:configure.ac:1326: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:1327: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:1328: -1- m4_pattern_allow([^OBJCFLAGS$])
m4trace:configure.ac:1329: -1- m4_pattern_allow([^OBJCXXFLAGS$])
m4trace:configure.ac:1330: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:1331: -1- m4_pattern_allow([^x_AFLAGS$])
m4trace:configure.ac:1332: -1- m4_pattern_allow([^x_CFLAGS$])
m4trace:configure.ac:1333: -1- m4_pattern_allow([^x_CXXFLAGS$])
m4trace:configure.ac:1334: -1- m4_pattern_allow([^x_OBJCFLAGS$])
m4trace:configure.ac:1335: -1- m4_pattern_allow([^x_OBJCXXFLAGS$])
m4trace:configure.ac:1336: -1- m4_pattern_allow([^x_LDFLAGS$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:1349: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_stdio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdio.h ]AS_TR_SH([stdio.h]) AS_TR_CPP([HAVE_stdio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_stdlib_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdlib.h ]AS_TR_SH([stdlib.h]) AS_TR_CPP([HAVE_stdlib.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_string_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" string.h ]AS_TR_SH([string.h]) AS_TR_CPP([HAVE_string.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_strings_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" strings.h ]AS_TR_SH([strings.h]) AS_TR_CPP([HAVE_strings.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:1357: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:1357: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:1361: -1- m4_pattern_allow([^ENDIANNESS$])
m4trace:configure.ac:1364: -1- m4_pattern_allow([^HAVE_DLAPI$])
m4trace:configure.ac:1371: -1- m4_pattern_allow([^HAVE_UNIX_DLAPI$])
m4trace:configure.ac:1374: -1- m4_pattern_allow([^UNIX_DLAPI_LIBS$])
m4trace:configure.ac:1377: -1- m4_pattern_allow([^BACKTRACE_CFLAGS$])
m4trace:configure.ac:1378: -1- m4_pattern_allow([^BACKTRACE_LIBS$])
m4trace:configure.ac:1379: -1- PKG_CHECK_MODULES([BACKTRACE], [libexecinfo], [ac_cv_search_backtrace=], [:])
m4trace:configure.ac:1379: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:1379: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^BACKTRACE_CFLAGS$])
m4trace:configure.ac:1379: -1- m4_pattern_allow([^BACKTRACE_LIBS$])
m4trace:configure.ac:1379: -1- PKG_CHECK_EXISTS([libexecinfo], [pkg_cv_[]BACKTRACE_CFLAGS=`$PKG_CONFIG --[]cflags "libexecinfo" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1379: -1- PKG_CHECK_EXISTS([libexecinfo], [pkg_cv_[]BACKTRACE_LIBS=`$PKG_CONFIG --[]libs "libexecinfo" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1379: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1386: -1- m4_pattern_allow([^HAVE_FEATURE_BACKTRACE$])
m4trace:configure.ac:1442: -1- m4_pattern_allow([^EMSDK_FILE_PACKAGER$])
m4trace:configure.ac:1462: -1- libo_FUZZ_ARG_ENABLE([extension-integration], [  --disable-extension-integration 
                          Disable integration of the built extensions in the
                          installer of the product. Use this switch to disable
                          the integration.
])
m4trace:configure.ac:1482: -1- libo_FUZZ_ARG_ENABLE([extensions], [  --disable-extensions    Disable all add-on extension functionality. Work in
                          progress, use only if you are hacking on it.
])
m4trace:configure.ac:1500: -1- libo_FUZZ_ARG_ENABLE([report-builder], [  --disable-report-builder 
                          Disable the Report Builder.
])
m4trace:configure.ac:1505: -1- libo_FUZZ_ARG_ENABLE([ext-wiki-publisher], [  --enable-ext-wiki-publisher 
                          Enable the Wiki Publisher extension.
])
m4trace:configure.ac:1510: -1- libo_FUZZ_ARG_ENABLE([lpsolve], [  --disable-lpsolve       Disable compilation of the lp solve solver
])
m4trace:configure.ac:1514: -1- libo_FUZZ_ARG_ENABLE([coinmp], [  --disable-coinmp        Disable compilation of the CoinMP solver
])
m4trace:configure.ac:1519: -1- libo_FUZZ_ARG_ENABLE([pdfimport], [  --disable-pdfimport     Disable building the PDF import feature.
])
m4trace:configure.ac:1524: -1- libo_FUZZ_ARG_ENABLE([pdfium], [  --disable-pdfium        Disable building PDFium. Results in unsecure PDF
                          signature verification.
])
m4trace:configure.ac:1529: -1- libo_FUZZ_ARG_ENABLE([skia], [  --disable-skia          Disable building Skia. Use --enable-skia=debug to
                          build without optimizations.
])
m4trace:configure.ac:1538: -1- libo_FUZZ_ARG_ENABLE([mergelibs], [  --enable-mergelibs      Merge several of the smaller libraries into one big,
                          "merged", one.
])
m4trace:configure.ac:1543: -1- libo_FUZZ_ARG_ENABLE([breakpad], [  --enable-breakpad       Enables breakpad for crash reporting.
])
m4trace:configure.ac:1548: -1- libo_FUZZ_ARG_ENABLE([crashdump], [  --disable-crashdump     Disable dump.ini and dump-file, when
                          --enable-breakpad
])
m4trace:configure.ac:1563: -1- libo_FUZZ_ARG_ENABLE([pch], [  --enable-pch=<yes/no/system/base/normal/full> 
                          Enables precompiled header support for C++. Forced
                          default on Windows/VC build. Using 'system' will
                          include only external headers, 'base' will add also
                          headers from base modules, 'normal' will also add
                          all headers except from the module built, 'full'
                          will use all suitable headers even from a module
                          itself.
])
m4trace:configure.ac:1571: -1- libo_FUZZ_ARG_ENABLE([epm], [  --enable-epm            LibreOffice includes self-packaging code, that
                          requires epm, however epm is useless for large scale
                          package building.
])
m4trace:configure.ac:1577: -1- libo_FUZZ_ARG_ENABLE([odk], [  --enable-odk            Enable building the Office Development Kit, the part
                          that extensions need to build against
])
m4trace:configure.ac:1587: -1- libo_FUZZ_ARG_ENABLE([evolution2], [  --enable-evolution2     Allows the built-in evolution 2 addressbook
                          connectivity build to be enabled.
])
m4trace:configure.ac:1598: -1- libo_FUZZ_ARG_ENABLE([werror], [  --enable-werror         Turn warnings to errors. (Has no effect in modules
                          where the treating of warnings as errors is disabled
                          explicitly.)], [], [])
m4trace:configure.ac:1604: -1- libo_FUZZ_ARG_ENABLE([assert-always-abort], [  --enable-assert-always-abort 
                          make assert() failures abort even when building
                          without --enable-debug or --enable-dbgutil.], [], [])
m4trace:configure.ac:1609: -1- libo_FUZZ_ARG_ENABLE([dbgutil], [  --enable-dbgutil        Provide debugging support from --enable-debug and
                          include additional debugging utilities such as
                          object counting or more expensive checks. This is
                          the recommended option for developers. Note that
                          this makes the build ABI incompatible, it is not
                          possible to mix object files or libraries from a
                          --enable-dbgutil and a --disable-dbgutil build.])
m4trace:configure.ac:1617: -1- libo_FUZZ_ARG_ENABLE([debug], [  --enable-debug          Include debugging information, disable compiler
                          optimization and inlining plus extra debugging code
                          like assertions. Extra large build! (enables -g
                          compiler flag).])
m4trace:configure.ac:1622: -1- libo_FUZZ_ARG_ENABLE([split-debug], [  --disable-split-debug   Disable using split debug information (-gsplit-dwarf
                          compile flag). Split debug information saves disk
                          space and build time, but requires tools that
                          support it (both build tools and debuggers).])
m4trace:configure.ac:1627: -1- libo_FUZZ_ARG_ENABLE([gdb-index], [  --disable-gdb-index     Disables creating debug information in the gdb index
                          format, which makes gdb start faster. The feature
                          requires a linker that supports the --gdb-index
                          option.])
m4trace:configure.ac:1632: -1- libo_FUZZ_ARG_ENABLE([sal-log], [  --enable-sal-log        Make SAL_INFO and SAL_WARN calls do something even
                          in a non-debug build.])
m4trace:configure.ac:1636: -1- libo_FUZZ_ARG_ENABLE([symbols], [  --enable-symbols        Generate debug information. By default, enabled for
                          --enable-debug and --enable-dbgutil, disabled
                          otherwise. It is possible to explicitly specify
                          gbuild build targets (where 'all' means everything,
                          '-' prepended means to not enable, '/' appended
                          means everything in the directory; there is no
                          ordering, more specific overrides more general, and
                          disabling takes precedence). Example:
                          --enable-symbols="all -sw/ -Library_sc".])
m4trace:configure.ac:1646: -1- libo_FUZZ_ARG_ENABLE([optimized], [  --enable-optimized=<yes/no/debug> 
                          Whether to compile with optimization flags. By
                          default, disabled for --enable-debug and
                          --enable-dbgutil, enabled otherwise. Using 'debug'
                          will try to use only optimizations that should not
                          interfere with debugging. For Emscripten we default
                          to optimized (-O1) debug build, as otherwise
                          binaries become too large.])
m4trace:configure.ac:1654: -1- libo_FUZZ_ARG_ENABLE([runtime-optimizations], [  --disable-runtime-optimizations 
                          Statically disable certain runtime optimizations
                          (like rtl/alloc.h or JVM JIT) that are known to
                          interact badly with certain dynamic analysis tools
                          (like -fsanitize=address or Valgrind). By default,
                          disabled iff CC contains "-fsanitize=*". (For
                          Valgrind, those runtime optimizations are typically
                          disabled dynamically via RUNNING_ON_VALGRIND.)])
m4trace:configure.ac:1666: -1- libo_FUZZ_ARG_ENABLE([compiler-plugins], [  --enable-compiler-plugins 
                          Enable compiler plugins that will perform additional
                          checks during building. Enabled automatically by
                          --enable-dbgutil. Use
                          --enable-compiler-plugins=debug to also enable debug
                          code in the plugins.])
m4trace:configure.ac:1677: -1- libo_FUZZ_ARG_ENABLE([compiler-plugins-analyzer-pch], [  --disable-compiler-plugins-analyzer-pch 
                          Disable use of precompiled headers when running the
                          Clang compiler plugin analyzer. Not relevant in the
                          --disable-compiler-plugins case.])
m4trace:configure.ac:1682: -1- libo_FUZZ_ARG_ENABLE([ooenv], [  --enable-ooenv          Enable ooenv for the instdir installation.])
m4trace:configure.ac:1702: -1- libo_FUZZ_ARG_ENABLE([gtk3], [  --disable-gtk3          Determines whether to use Gtk+ 3.0 vclplug on
                          platforms where Gtk+ 3.0 is available.], [], [test "${test_gtk3}" = no -o "${enable_gtk3+set}" = set || enable_gtk3=yes])
m4trace:configure.ac:1728: -1- libo_FUZZ_ARG_ENABLE([cairo-canvas], [  --disable-cairo-canvas  Determines whether to build the Cairo canvas on
                          platforms where Cairo is available.], [], [])
m4trace:configure.ac:1733: -1- libo_FUZZ_ARG_ENABLE([dbus], [  --disable-dbus          Determines whether to enable features that depend on
                          dbus. e.g. Presentation mode screensaver control,
                          bluetooth presentation control, automatic font
                          install], [], [test "${enable_dbus+set}" = set || enable_dbus=yes])
m4trace:configure.ac:1739: -1- libo_FUZZ_ARG_ENABLE([sdremote], [  --disable-sdremote      Determines whether to enable Impress remote control
                          (i.e. the server component).], [], [test "${enable_sdremote+set}" = set || enable_sdremote=yes])
m4trace:configure.ac:1744: -1- libo_FUZZ_ARG_ENABLE([sdremote-bluetooth], [  --disable-sdremote-bluetooth 
                          Determines whether to build sdremote with bluetooth
                          support. Requires dbus on Linux.])
m4trace:configure.ac:1749: -1- libo_FUZZ_ARG_ENABLE([gio], [  --disable-gio           Determines whether to use the GIO support.], [], [test "${enable_gio+set}" = set || enable_gio=yes])
m4trace:configure.ac:1789: -1- libo_FUZZ_ARG_ENABLE([randr], [  --disable-randr         Disable RandR support in the vcl project.], [], [test "${enable_randr+set}" = set || enable_randr=yes])
m4trace:configure.ac:1794: -1- libo_FUZZ_ARG_ENABLE([gstreamer-1-0], [  --disable-gstreamer-1-0 Disable building with the gstreamer 1.0 avmedia
                          backend.], [], [test "${enable_gstreamer_1_0+set}" = set || enable_gstreamer_1_0=yes])
m4trace:configure.ac:1799: -1- libo_FUZZ_ARG_ENABLE([eot], [AS_HELP_STRING([--enable-eot],
        [Enable support for Embedded OpenType fonts.])], [], [test "${enable_eot+set}" = set || enable_eot=no])
m4trace:configure.ac:1804: -1- libo_FUZZ_ARG_ENABLE([cve-tests], [  --disable-cve-tests     Prevent CVE tests to be executed], [], [])
m4trace:configure.ac:1839: -1- libo_FUZZ_ARG_ENABLE([cups], [  --disable-cups          Do not build cups support.
])
m4trace:configure.ac:1861: -1- libo_FUZZ_ARG_ENABLE([online-update], [  --enable-online-update  Enable the online update service that will check for
                          new versions of LibreOffice. Disabled by default.
                          Requires --with-privacy-policy-url to be set. If the
                          value is "mar", the experimental Mozilla-like update
                          will be enabled instead of the traditional update
                          mechanism.], [], [])
m4trace:configure.ac:1873: -1- libo_FUZZ_ARG_ENABLE([extension-update], [  --disable-extension-update 
                          Disable possibility to update installed extensions.], [], [])
m4trace:configure.ac:1878: -1- libo_FUZZ_ARG_ENABLE([release-build], [  --enable-release-build  Enable release build. Note that the "release build"
                          choice is orthogonal to whether symbols are present,
                          debug info is generated, or optimization is done.
                          See
                          https://wiki.documentfoundation.org/Development/DevBuild], [], [])
m4trace:configure.ac:1933: -1- libo_FUZZ_ARG_ENABLE([community-flavor], [  --disable-community-flavor 
                          Disable the Community branding.], [], [])
m4trace:configure.ac:1943: -1- libo_FUZZ_ARG_ENABLE([readonly-installset], [  --enable-readonly-installset 
                          Prevents any attempts by LibreOffice to write into
                          its installation. That means at least that no
                          "system-wide" extensions can be added. Partly
                          experimental work in progress, probably not fully
                          implemented. Always enabled for macOS.], [], [])
m4trace:configure.ac:1950: -1- libo_FUZZ_ARG_ENABLE([mariadb-sdbc], [  --disable-mariadb-sdbc  Disable the build of the MariaDB/MySQL-SDBC driver.
])
m4trace:configure.ac:1955: -1- libo_FUZZ_ARG_ENABLE([postgresql-sdbc], [  --disable-postgresql-sdbc 
                          Disable the build of the PostgreSQL-SDBC driver.
])
m4trace:configure.ac:1960: -1- libo_FUZZ_ARG_ENABLE([lotuswordpro], [  --disable-lotuswordpro  Disable the build of the Lotus Word Pro filter.], [], [test "${enable_lotuswordpro+set}" = set || enable_lotuswordpro=yes])
m4trace:configure.ac:1965: -1- libo_FUZZ_ARG_ENABLE([firebird-sdbc], [  --disable-firebird-sdbc Disable the build of the Firebird-SDBC driver if it
                          doesn't compile for you.], [], [test "${enable_firebird_sdbc+set}" = set || enable_firebird_sdbc=yes])
m4trace:configure.ac:1982: -1- libo_FUZZ_ARG_ENABLE([cipher-openssl-backend], [  --enable-cipher-openssl-backend 
                          Enable using OpenSSL as the actual implementation of
                          the rtl/cipher.h functionality. Requires
                          --enable-openssl.])
m4trace:configure.ac:2015: -1- libo_FUZZ_ARG_ENABLE([formula-logger], [  --enable-formula-logger Enable formula logger for logging formula
                          calculation flow in Calc.
])
m4trace:configure.ac:2032: -1- libo_FUZZ_ARG_ENABLE([librelogo], [  --disable-librelogo     Do not build LibreLogo.], [], [enable_librelogo=yes])
m4trace:configure.ac:2134: -1- libo_FUZZ_ARG_WITH([helppack-integration], [  --without-helppack-integration 
                          It will not integrate the helppacks to the installer
                          of the product. Please use this switch to use the
                          online help or separate help packages.], [], [])
m4trace:configure.ac:2141: -1- libo_FUZZ_ARG_WITH([fonts], [  --without-fonts         LibreOffice includes some third-party fonts to
                          provide a reliable basis for help content,
                          templates, samples, etc. When these fonts are
                          already known to be available on the system then you
                          should use this option.], [], [])
m4trace:configure.ac:2258: -1- libo_FUZZ_ARG_ENABLE([poppler], [  --disable-poppler       Disable building Poppler.
])
m4trace:configure.ac:2278: -1- libo_FUZZ_ARG_ENABLE([gpgmepp], [  --disable-gpgmepp       Disable building gpgmepp. Do not use in normal cases
                          unless you want to fix potential problems it causes.
])
m4trace:configure.ac:2330: -1- libo_FUZZ_ARG_ENABLE([scripting-beanshell], [  --disable-scripting-beanshell 
                          Disable support for scripts in BeanShell.], [], [])
m4trace:configure.ac:2346: -1- libo_FUZZ_ARG_ENABLE([scripting-javascript], [  --disable-scripting-javascript 
                          Disable support for scripts in JavaScript.], [], [])
m4trace:configure.ac:2465: -1- libo_FUZZ_ARG_ENABLE([zxing], [  --disable-zxing         Disable use of zxing external library.])
m4trace:configure.ac:2551: -1- libo_FUZZ_ARG_WITH([java], [  --with-java=<java command> 
                          Specify the name of the Java interpreter command.
                          Typically "java" which is the default. To build
                          without support for Java components, applets,
                          accessibility or the XML filters written in Java,
                          use --without-java or --with-java=no.], [ test -z "$with_java" -o "$with_java" = "yes" && with_java=java ], [ test -z "$with_java" -o "$with_java" = "yes" && with_java=java 
])
m4trace:configure.ac:2594: -1- libo_FUZZ_ARG_WITH([junit], [  --with-junit=<absolute path to JUnit 4 jar> 
                          Specifies the JUnit 4 jar file to use for
                          JUnit-based tests. --without-junit disables those
                          tests. Not relevant in the --without-java case.], [], [with_junit=yes])
m4trace:configure.ac:2613: -1- libo_FUZZ_ARG_WITH([doxygen], [  --with-doxygen=<absolute path to doxygen executable> 
                          Specifies the doxygen executable to use when
                          generating ODK C/C++ documentation.
                          --without-doxygen disables generation of ODK C/C++
                          documentation. Not relevant in the --disable-odk
                          case.], [], [with_doxygen=yes])
m4trace:configure.ac:2669: -1- libo_FUZZ_ARG_WITH([krb5], [  --with-krb5             Enable MIT Kerberos 5 support in modules that
                          support it. By default automatically enabled on
                          platforms where a good system Kerberos 5 is
                          available.], [], [])
m4trace:configure.ac:2676: -1- libo_FUZZ_ARG_WITH([gssapi], [  --with-gssapi           Enable GSSAPI support in modules that support it. By
                          default automatically enabled on platforms where a
                          good system GSSAPI is available.], [], [])
m4trace:configure.ac:2683: -1- libo_FUZZ_ARG_WITH([lxml], [  --without-lxml          gla11y will use python lxml when available,
                          potentially building a local copy if necessary.
                          --without-lxml tells it to not use python lxml at
                          all, which means that gla11y will only report widget
                          classes and ids.], [], [])
m4trace:configure.ac:2690: -1- libo_FUZZ_ARG_WITH([latest-c++], [  --with-latest-c++       Try to enable the latest features of the C++
                          compiler, even if they are not yet part of a
                          published standard. This option is ignored when
                          CXXFLAGS_CXX11 is set explicitly.], [], [with_latest_c__=no])
m4trace:configure.ac:2834: -1- m4_pattern_allow([^USE_LIBRARY_BIN_TAR$])
m4trace:configure.ac:2852: -1- m4_pattern_allow([^ENABLE_RELEASE_BUILD$])
m4trace:configure.ac:2853: -1- m4_pattern_allow([^GET_TASK_ALLOW_ENTITLEMENT$])
m4trace:configure.ac:2857: -1- m4_pattern_allow([^HAVE_FEATURE_COMMUNITY_FLAVOR$])
m4trace:configure.ac:2874: -1- m4_pattern_allow([^WINDOWS_BUILD_SIGNING$])
m4trace:configure.ac:2946: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:2947: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:2952: -1- m4_pattern_allow([^BASH$])
m4trace:configure.ac:2956: -1- m4_pattern_allow([^BASH$])
m4trace:configure.ac:2959: -1- m4_pattern_allow([^COMPRESSIONTOOL$])
m4trace:configure.ac:2961: -1- m4_pattern_allow([^COMPRESSIONTOOL$])
m4trace:configure.ac:2966: -1- m4_pattern_allow([^COMPRESSIONTOOL$])
m4trace:configure.ac:2980: -1- m4_pattern_allow([^GNUTAR$])
m4trace:configure.ac:2998: -1- m4_pattern_allow([^STRIP_COMPONENTS$])
m4trace:configure.ac:3012: -1- m4_pattern_allow([^HAVE_FEATURE_DESKTOP$])
m4trace:configure.ac:3014: -1- m4_pattern_allow([^HAVE_FEATURE_MULTIUSER_ENVIRONMENT$])
m4trace:configure.ac:3068: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_ACCESSIBILITY$])
m4trace:configure.ac:3069: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_WRITER$])
m4trace:configure.ac:3070: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_CALC$])
m4trace:configure.ac:3071: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_CANVAS$])
m4trace:configure.ac:3073: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_DBACCESS$])
m4trace:configure.ac:3074: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_EPUB$])
m4trace:configure.ac:3075: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_EXTRA$])
m4trace:configure.ac:3076: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_GUESSLANG$])
m4trace:configure.ac:3078: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_LANGUAGETOOL$])
m4trace:configure.ac:3079: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_PINGUSER$])
m4trace:configure.ac:3080: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_PREMULTIPLY$])
m4trace:configure.ac:3081: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_RECENT$])
m4trace:configure.ac:3082: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_RECOVERYUI$])
m4trace:configure.ac:3083: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_SPLASH$])
m4trace:configure.ac:3084: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_SWEXPORTS$])
m4trace:configure.ac:3085: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_SCEXPORTS$])
m4trace:configure.ac:3103: -1- m4_pattern_allow([^ENABLE_WASM_EXCEPTIONS$])
m4trace:configure.ac:3109: -1- m4_pattern_allow([^HAVE_FEATURE_AVMEDIA$])
m4trace:configure.ac:3117: -1- m4_pattern_allow([^HAVE_FEATURE_DBCONNECTIVITY$])
m4trace:configure.ac:3135: -1- m4_pattern_allow([^HAVE_FEATURE_SCRIPTING$])
m4trace:configure.ac:3163: -1- m4_pattern_allow([^DISABLE_DYNLOADING$])
m4trace:configure.ac:3172: -1- m4_pattern_allow([^ENABLE_CUSTOMTARGET_COMPONENTS$])
m4trace:configure.ac:3176: -1- m4_pattern_allow([^HAVE_FEATURE_EXTENSIONS$])
m4trace:configure.ac:3183: -1- m4_pattern_allow([^SYSBASE$])
m4trace:configure.ac:3210: -1- m4_pattern_allow([^WITH_GALLERY_BUILD$])
m4trace:configure.ac:3238: -1- m4_pattern_allow([^CCACHE$])
m4trace:configure.ac:3265: -1- m4_pattern_allow([^CCACHE$])
m4trace:configure.ac:3303: -1- m4_pattern_allow([^CCACHE_DEPEND_MODE$])
m4trace:configure.ac:3344: -1- m4_pattern_allow([^ENABLE_Z7_DEBUG$])
m4trace:configure.ac:3373: -1- m4_pattern_allow([^GCC_HOME$])
m4trace:configure.ac:3389: -1- m4_pattern_allow([^COMPATH$])
m4trace:configure.ac:3407: -1- m4_pattern_allow([^HAVE_FEATURE_JAVA$])
m4trace:configure.ac:3414: -1- m4_pattern_allow([^ENABLE_JAVA$])
m4trace:configure.ac:3594: -1- m4_pattern_allow([^HAVE_FEATURE_MACOSX_SANDBOX$])
m4trace:configure.ac:3616: -1- m4_pattern_allow([^MACOSX_SDK_PATH$])
m4trace:configure.ac:3617: -1- m4_pattern_allow([^MACOSX_DEPLOYMENT_TARGET$])
m4trace:configure.ac:3618: -1- m4_pattern_allow([^MAC_OS_X_VERSION_MIN_REQUIRED$])
m4trace:configure.ac:3619: -1- m4_pattern_allow([^INSTALL_NAME_TOOL$])
m4trace:configure.ac:3620: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:3621: -1- m4_pattern_allow([^MACOSX_CODESIGNING_IDENTITY$])
m4trace:configure.ac:3622: -1- m4_pattern_allow([^MACOSX_PACKAGE_SIGNING_IDENTITY$])
m4trace:configure.ac:3623: -1- m4_pattern_allow([^ENABLE_MACOSX_SANDBOX$])
m4trace:configure.ac:3624: -1- m4_pattern_allow([^MACOSX_BUNDLE_IDENTIFIER$])
m4trace:configure.ac:3625: -1- m4_pattern_allow([^MACOSX_PROVISIONING_INFO$])
m4trace:configure.ac:3626: -1- m4_pattern_allow([^MACOSX_PROVISIONING_PROFILE$])
m4trace:configure.ac:3627: -1- m4_pattern_allow([^MACOSX_SDK_BUILD_VERSION$])
m4trace:configure.ac:3628: -1- m4_pattern_allow([^MACOSX_XCODE_BUILD_VERSION$])
m4trace:configure.ac:3684: -1- m4_pattern_allow([^HAVE_FEATURE_READONLY_INSTALLSET$])
m4trace:configure.ac:3752: -1- m4_pattern_allow([^LIBO_BIN_FOLDER$])
m4trace:configure.ac:3753: -1- m4_pattern_allow([^LIBO_ETC_FOLDER$])
m4trace:configure.ac:3754: -1- m4_pattern_allow([^LIBO_LIBEXEC_FOLDER$])
m4trace:configure.ac:3755: -1- m4_pattern_allow([^LIBO_LIB_FOLDER$])
m4trace:configure.ac:3756: -1- m4_pattern_allow([^LIBO_LIB_PYUNO_FOLDER$])
m4trace:configure.ac:3757: -1- m4_pattern_allow([^LIBO_SHARE_FOLDER$])
m4trace:configure.ac:3758: -1- m4_pattern_allow([^LIBO_SHARE_HELP_FOLDER$])
m4trace:configure.ac:3759: -1- m4_pattern_allow([^LIBO_SHARE_JAVA_FOLDER$])
m4trace:configure.ac:3760: -1- m4_pattern_allow([^LIBO_SHARE_PRESETS_FOLDER$])
m4trace:configure.ac:3761: -1- m4_pattern_allow([^LIBO_SHARE_RESOURCE_FOLDER$])
m4trace:configure.ac:3762: -1- m4_pattern_allow([^LIBO_SHARE_SHELL_FOLDER$])
m4trace:configure.ac:3763: -1- m4_pattern_allow([^LIBO_URE_BIN_FOLDER$])
m4trace:configure.ac:3764: -1- m4_pattern_allow([^LIBO_URE_ETC_FOLDER$])
m4trace:configure.ac:3765: -1- m4_pattern_allow([^LIBO_URE_LIB_FOLDER$])
m4trace:configure.ac:3766: -1- m4_pattern_allow([^LIBO_URE_MISC_FOLDER$])
m4trace:configure.ac:3767: -1- m4_pattern_allow([^LIBO_URE_SHARE_JAVA_FOLDER$])
m4trace:configure.ac:3770: -1- m4_pattern_allow([^LIBO_BIN_FOLDER$])
m4trace:configure.ac:3771: -1- m4_pattern_allow([^LIBO_ETC_FOLDER$])
m4trace:configure.ac:3772: -1- m4_pattern_allow([^LIBO_LIB_FOLDER$])
m4trace:configure.ac:3773: -1- m4_pattern_allow([^LIBO_LIB_PYUNO_FOLDER$])
m4trace:configure.ac:3774: -1- m4_pattern_allow([^LIBO_SHARE_FOLDER$])
m4trace:configure.ac:3775: -1- m4_pattern_allow([^LIBO_SHARE_HELP_FOLDER$])
m4trace:configure.ac:3776: -1- m4_pattern_allow([^LIBO_SHARE_JAVA_FOLDER$])
m4trace:configure.ac:3777: -1- m4_pattern_allow([^LIBO_SHARE_PRESETS_FOLDER$])
m4trace:configure.ac:3778: -1- m4_pattern_allow([^LIBO_SHARE_READMES_FOLDER$])
m4trace:configure.ac:3779: -1- m4_pattern_allow([^LIBO_SHARE_RESOURCE_FOLDER$])
m4trace:configure.ac:3780: -1- m4_pattern_allow([^LIBO_URE_BIN_FOLDER$])
m4trace:configure.ac:3781: -1- m4_pattern_allow([^LIBO_URE_ETC_FOLDER$])
m4trace:configure.ac:3782: -1- m4_pattern_allow([^LIBO_URE_LIB_FOLDER$])
m4trace:configure.ac:3783: -1- m4_pattern_allow([^LIBO_URE_MISC_FOLDER$])
m4trace:configure.ac:3784: -1- m4_pattern_allow([^LIBO_URE_SHARE_JAVA_FOLDER$])
m4trace:configure.ac:3935: -1- m4_pattern_allow([^CROSS_COMPILING$])
m4trace:configure.ac:3936: -1- m4_pattern_allow([^ENABLE_WASM_STRIP$])
m4trace:configure.ac:3937: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_WRITER$])
m4trace:configure.ac:3938: -1- m4_pattern_allow([^ENABLE_WASM_STRIP_CALC$])
m4trace:configure.ac:3959: -1- m4_pattern_allow([^ISYSTEM$])
m4trace:configure.ac:4208: -1- m4_pattern_allow([^UCRTSDKDIR$])
m4trace:configure.ac:4209: -1- m4_pattern_allow([^UCRTVERSION$])
m4trace:configure.ac:4344: -1- m4_pattern_allow([^BUILD_X64$])
m4trace:configure.ac:4347: -1- m4_pattern_allow([^CXX_X64_BINARY$])
m4trace:configure.ac:4372: -1- m4_pattern_allow([^BUILD_X86$])
m4trace:configure.ac:4373: -1- m4_pattern_allow([^CXX_X86_BINARY$])
m4trace:configure.ac:4375: -1- m4_pattern_allow([^VCVER$])
m4trace:configure.ac:4376: -1- m4_pattern_allow([^VCTOOLSET$])
m4trace:configure.ac:4377: -1- m4_pattern_allow([^DEVENV$])
m4trace:configure.ac:4378: -1- m4_pattern_allow([^MSVC_CXX$])
m4trace:configure.ac:4391: -1- m4_pattern_allow([^COM_IS_CLANG$])
m4trace:configure.ac:4422: -1- m4_pattern_allow([^CLANG_VERSION$])
m4trace:configure.ac:4423: -1- m4_pattern_allow([^CLANG_FULL_VERSION$])
m4trace:configure.ac:4442: -1- m4_pattern_allow([^SHOWINCLUDES_PREFIX$])
m4trace:configure.ac:4506: -1- m4_pattern_allow([^HAVE_GCC_GGDB2$])
m4trace:configure.ac:4530: -1- m4_pattern_allow([^GCC_VERSION$])
m4trace:configure.ac:4593: -1- m4_pattern_allow([^ENABLE_DBGUTIL$])
m4trace:configure.ac:4594: -1- m4_pattern_allow([^MSVC_USE_DEBUG_RUNTIME$])
m4trace:configure.ac:4622: -1- m4_pattern_allow([^ENABLE_DEBUG$])
m4trace:configure.ac:4724: -1- m4_pattern_allow([^USE_LD$])
m4trace:configure.ac:4725: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:4744: -1- m4_pattern_allow([^HAVE_LD_BSYMBOLIC_FUNCTIONS$])
m4trace:configure.ac:4768: -1- m4_pattern_allow([^LD_GC_SECTIONS$])
m4trace:configure.ac:4807: -1- m4_pattern_allow([^HAVE_EXTERNAL_DWARF$])
m4trace:configure.ac:4820: -1- m4_pattern_allow([^HAVE_CLANG_DEBUG_INFO_KIND_CONSTRUCTOR$])
m4trace:configure.ac:4865: -1- m4_pattern_allow([^ENABLE_GDB_INDEX$])
m4trace:configure.ac:4873: -1- m4_pattern_allow([^ENABLE_SAL_LOG$])
m4trace:configure.ac:4896: -1- m4_pattern_allow([^ENABLE_SYMBOLS_FOR$])
m4trace:configure.ac:4945: -1- m4_pattern_allow([^ENABLE_OPTIMIZED$])
m4trace:configure.ac:4946: -1- m4_pattern_allow([^ENABLE_OPTIMIZED_DEBUG$])
m4trace:configure.ac:5397: -1- m4_pattern_allow([^HAVE_FEATURE_UI$])
m4trace:configure.ac:5399: -1- m4_pattern_allow([^DISABLE_GUI$])
m4trace:configure.ac:5411: -1- m4_pattern_allow([^USING_X11$])
m4trace:configure.ac:5428: -1- m4_pattern_allow([^COM$])
m4trace:configure.ac:5429: -1- m4_pattern_allow([^CPUNAME$])
m4trace:configure.ac:5430: -1- m4_pattern_allow([^RTL_OS$])
m4trace:configure.ac:5431: -1- m4_pattern_allow([^RTL_ARCH$])
m4trace:configure.ac:5432: -1- m4_pattern_allow([^EPM_FLAGS$])
m4trace:configure.ac:5433: -1- m4_pattern_allow([^USING_X11$])
m4trace:configure.ac:5434: -1- m4_pattern_allow([^INSTDIR$])
m4trace:configure.ac:5435: -1- m4_pattern_allow([^INSTROOT$])
m4trace:configure.ac:5436: -1- m4_pattern_allow([^INSTROOTBASE$])
m4trace:configure.ac:5437: -1- m4_pattern_allow([^OS$])
m4trace:configure.ac:5438: -1- m4_pattern_allow([^P_SEP$])
m4trace:configure.ac:5439: -1- m4_pattern_allow([^WORKDIR$])
m4trace:configure.ac:5440: -1- m4_pattern_allow([^PLATFORMID$])
m4trace:configure.ac:5441: -1- m4_pattern_allow([^WINDOWS_X64$])
m4trace:configure.ac:5442: -1- m4_pattern_allow([^SDKDIR$])
m4trace:configure.ac:5443: -1- m4_pattern_allow([^WORKDIR$])
m4trace:configure.ac:5457: -1- m4_pattern_allow([^CPPU_ENV$])
m4trace:configure.ac:5487: -1- m4_pattern_allow([^FAKEROOT$])
m4trace:configure.ac:5499: -1- m4_pattern_allow([^PKGFORMAT$])
m4trace:configure.ac:5575: -1- m4_pattern_allow([^HAVE_FEATURE_XMLHELP$])
m4trace:configure.ac:5593: -1- m4_pattern_allow([^ENABLE_HTMLHELP$])
m4trace:configure.ac:5594: -1- m4_pattern_allow([^HELP_OMINDEX_PAGE$])
m4trace:configure.ac:5595: -1- m4_pattern_allow([^HELP_ONLINE$])
m4trace:configure.ac:5603: -1- m4_pattern_allow([PKG_CONFIG_FOR_BUILD])
m4trace:configure.ac:5604: -1- m4_pattern_allow([PKG_CONFIG_LIBDIR])
m4trace:configure.ac:5898: -1- m4_pattern_allow([^OS_FOR_BUILD$])
m4trace:configure.ac:5899: -1- m4_pattern_allow([^INSTDIR_FOR_BUILD$])
m4trace:configure.ac:5900: -1- m4_pattern_allow([^INSTROOT_FOR_BUILD$])
m4trace:configure.ac:5901: -1- m4_pattern_allow([^LIBO_BIN_FOLDER_FOR_BUILD$])
m4trace:configure.ac:5902: -1- m4_pattern_allow([^LIBO_LIB_FOLDER_FOR_BUILD$])
m4trace:configure.ac:5903: -1- m4_pattern_allow([^LIBO_URE_LIB_FOLDER_FOR_BUILD$])
m4trace:configure.ac:5904: -1- m4_pattern_allow([^LIBO_URE_MISC_FOLDER_FOR_BUILD$])
m4trace:configure.ac:5905: -1- m4_pattern_allow([^SDKDIRNAME_FOR_BUILD$])
m4trace:configure.ac:5906: -1- m4_pattern_allow([^WORKDIR_FOR_BUILD$])
m4trace:configure.ac:5907: -1- m4_pattern_allow([^CC_FOR_BUILD$])
m4trace:configure.ac:5908: -1- m4_pattern_allow([^CXX_FOR_BUILD$])
m4trace:configure.ac:5909: -1- m4_pattern_allow([^CPPU_ENV_FOR_BUILD$])
m4trace:configure.ac:5921: -1- m4_pattern_allow([^LOCKFILE$])
m4trace:configure.ac:5941: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:5941: -1- m4_pattern_allow([^HAVE_PATHS_H$])
m4trace:configure.ac:5941: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:5942: -1- m4_pattern_allow([^HAVE_UTIME$])
m4trace:configure.ac:5942: -1- m4_pattern_allow([^HAVE_UTIMES$])
m4trace:configure.ac:5943: -1- m4_pattern_allow([^LOCKFILE$])
m4trace:configure.ac:5948: -2- m4_pattern_allow([^HAVE_SYSLOG_H$])
m4trace:configure.ac:5966: -1- m4_pattern_allow([^ENABLE_WERROR$])
m4trace:configure.ac:5967: -1- m4_pattern_allow([^PYTHONWARNINGS$])
m4trace:configure.ac:5986: -1- m4_pattern_allow([^ASSERT_ALWAYS_ABORT$])
m4trace:configure.ac:6006: -1- m4_pattern_allow([^ENABLE_OOENV$])
m4trace:configure.ac:6020: -1- m4_pattern_allow([^HAVE_FEATURE_PAGEIN$])
m4trace:configure.ac:6024: -1- m4_pattern_allow([^ENABLE_PAGEIN$])
m4trace:configure.ac:6037: -2- m4_pattern_allow([^HAVE_CUPS_H$])
m4trace:configure.ac:6045: -1- m4_pattern_allow([^ENABLE_CUPS$])
m4trace:configure.ac:6047: -1- libo_CHECK_SYSTEM_MODULE([fontconfig], [FONTCONFIG], [fontconfig >= 2.4.1], [], [system], [TRUE])
m4trace:configure.ac:6047: -1- PKG_CHECK_MODULES([FONTCONFIG], [fontconfig >= 2.4.1])
m4trace:configure.ac:6047: -1- m4_pattern_allow([^FONTCONFIG_CFLAGS$])
m4trace:configure.ac:6047: -1- m4_pattern_allow([^FONTCONFIG_LIBS$])
m4trace:configure.ac:6047: -1- PKG_CHECK_EXISTS([fontconfig >= 2.4.1], [pkg_cv_[]FONTCONFIG_CFLAGS=`$PKG_CONFIG --[]cflags "fontconfig >= 2.4.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:6047: -1- PKG_CHECK_EXISTS([fontconfig >= 2.4.1], [pkg_cv_[]FONTCONFIG_LIBS=`$PKG_CONFIG --[]libs "fontconfig >= 2.4.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:6047: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:6047: -1- m4_pattern_allow([^ENABLE_FONTCONFIG$])
m4trace:configure.ac:6047: -1- m4_pattern_allow([^SYSTEM_FONTCONFIG$])
m4trace:configure.ac:6047: -1- m4_pattern_allow([^FONTCONFIG_CFLAGS$])
m4trace:configure.ac:6047: -1- m4_pattern_allow([^FONTCONFIG_LIBS$])
m4trace:configure.ac:6069: -1- m4_pattern_allow([^TARFILE_LOCATION$])
m4trace:configure.ac:6084: -1- m4_pattern_allow([^DO_FETCH_TARBALLS$])
m4trace:configure.ac:6098: -1- m4_pattern_allow([^WITH_MYSPELL_DICTS$])
m4trace:configure.ac:6140: -1- m4_pattern_allow([^SYSTEM_DICTS$])
m4trace:configure.ac:6141: -1- m4_pattern_allow([^DICT_SYSTEM_DIR$])
m4trace:configure.ac:6142: -1- m4_pattern_allow([^HYPH_SYSTEM_DIR$])
m4trace:configure.ac:6143: -1- m4_pattern_allow([^THES_SYSTEM_DIR$])
m4trace:configure.ac:6197: -1- m4_pattern_allow([^ENABLE_PCH$])
m4trace:configure.ac:6200: -1- m4_pattern_allow([^CCACHE_BIN$])
m4trace:configure.ac:6229: -1- m4_pattern_allow([^PCH_INSTANTIATE_TEMPLATES$])
m4trace:configure.ac:6244: -1- m4_pattern_allow([^BUILDING_PCH_WITH_OBJ$])
m4trace:configure.ac:6269: -1- m4_pattern_allow([^PCH_CODEGEN$])
m4trace:configure.ac:6270: -1- m4_pattern_allow([^PCH_NO_CODEGEN$])
m4trace:configure.ac:6284: -1- m4_pattern_allow([^PCH_DEBUGINFO$])
m4trace:configure.ac:6344: -1- m4_pattern_allow([^HAVE_LD_HASH_STYLE$])
m4trace:configure.ac:6345: -1- m4_pattern_allow([^WITH_LINKER_HASH_STYLE$])
m4trace:configure.ac:6351: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:6424: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:6424: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:6424: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:6424: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:6424: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:6424: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:6424: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:6424: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:6426: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:6427: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:6428: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:6440: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:6440: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:6441: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:6441: -1- m4_pattern_allow([^ac_ct_NM$])
m4trace:configure.ac:6442: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:6442: -1- m4_pattern_allow([^ac_ct_RANLIB$])
m4trace:configure.ac:6443: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:6443: -1- m4_pattern_allow([^ac_ct_OBJDUMP$])
m4trace:configure.ac:6444: -1- m4_pattern_allow([^READELF$])
m4trace:configure.ac:6444: -1- m4_pattern_allow([^ac_ct_READELF$])
m4trace:configure.ac:6445: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:6445: -1- m4_pattern_allow([^ac_ct_STRIP$])
m4trace:configure.ac:6447: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:6448: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:6449: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:6450: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:6451: -1- m4_pattern_allow([^READELF$])
m4trace:configure.ac:6452: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:6777: -1- m4_pattern_allow([^WINDOWS_SDK_HOME$])
m4trace:configure.ac:6778: -1- m4_pattern_allow([^WINDOWS_SDK_LIB_SUBDIR$])
m4trace:configure.ac:6779: -1- m4_pattern_allow([^WINDOWS_SDK_VERSION$])
m4trace:configure.ac:6780: -1- m4_pattern_allow([^WINDOWS_SDK_WILANGID$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:6915: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:6938: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:6938: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:6938: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:6954: -1- m4_pattern_allow([^BOOST_CXXFLAGS$])
m4trace:configure.ac:6990: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:6990: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:6990: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:6993: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:6993: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:6993: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:7003: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:7004: -1- m4_pattern_allow([^SIZEOF_SHORT$])
m4trace:configure.ac:7005: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:7006: -1- m4_pattern_allow([^SIZEOF_LONG_LONG$])
m4trace:configure.ac:7007: -1- m4_pattern_allow([^SIZEOF_DOUBLE$])
m4trace:configure.ac:7008: -1- m4_pattern_allow([^SIZEOF_VOIDP$])
m4trace:configure.ac:7009: -1- m4_pattern_allow([^SIZEOF_SIZE_T$])
m4trace:configure.ac:7019: -1- m4_pattern_allow([AC_CHECK_ALIGNOF])
m4trace:configure.ac:7020: -1- m4_pattern_allow([^ALIGNOF_SHORT$])
m4trace:configure.ac:7020: -1- m4_pattern_allow([^ALIGNOF_INT$])
m4trace:configure.ac:7020: -1- m4_pattern_allow([^ALIGNOF_LONG$])
m4trace:configure.ac:7020: -1- m4_pattern_allow([^ALIGNOF_DOUBLE$])
m4trace:configure.ac:7063: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:7063: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:7088: -1- m4_pattern_allow([^LFS_CFLAGS$])
m4trace:configure.ac:7089: -1- m4_pattern_allow([^SIZEOF_SIZE_T$])
m4trace:configure.ac:7091: -1- m4_pattern_allow([^SAL_TYPES_SIZEOFSHORT$])
m4trace:configure.ac:7092: -1- m4_pattern_allow([^SAL_TYPES_SIZEOFINT$])
m4trace:configure.ac:7093: -1- m4_pattern_allow([^SAL_TYPES_SIZEOFLONG$])
m4trace:configure.ac:7094: -1- m4_pattern_allow([^SAL_TYPES_SIZEOFLONGLONG$])
m4trace:configure.ac:7095: -1- m4_pattern_allow([^SAL_TYPES_SIZEOFPOINTER$])
m4trace:configure.ac:7096: -1- m4_pattern_allow([^SAL_TYPES_ALIGNMENT2$])
m4trace:configure.ac:7097: -1- m4_pattern_allow([^SAL_TYPES_ALIGNMENT4$])
m4trace:configure.ac:7098: -1- m4_pattern_allow([^SAL_TYPES_ALIGNMENT8$])
m4trace:configure.ac:7106: -1- m4_pattern_allow([^HAVE_FEATURE_JUMBO_SHEETS$])
m4trace:configure.ac:7115: -1- m4_pattern_allow([^HAVE_FEATURE_JUMBO_SHEETS$])
m4trace:configure.ac:7120: -1- m4_pattern_allow([^ENABLE_JUMBO_SHEETS$])
m4trace:configure.ac:7139: -1- m4_pattern_allow([^ENABLE_RUNTIME_OPTIMIZATIONS$])
m4trace:configure.ac:7144: -1- m4_pattern_allow([^ENABLE_RUNTIME_OPTIMIZATIONS$])
m4trace:configure.ac:7159: -1- m4_pattern_allow([^ENABLE_VALGRIND$])
m4trace:configure.ac:7166: -1- m4_pattern_allow([^VALGRIND_CFLAGS$])
m4trace:configure.ac:7180: -1- m4_pattern_allow([^USE_SDT_PROBES$])
m4trace:configure.ac:7255: -1- m4_pattern_allow([^HAVE_GCC_BUILTIN_ATOMIC$])
m4trace:configure.ac:7262: -1- m4_pattern_allow([^HAVE_CXXABI_H_BASE_CLASS_TYPE_INFO$])
m4trace:configure.ac:7274: -1- m4_pattern_allow([^HAVE_CXXABI_H_CLASS_TYPE_INFO$])
m4trace:configure.ac:7286: -1- m4_pattern_allow([^HAVE_CXXABI_H_CXA_ALLOCATE_EXCEPTION$])
m4trace:configure.ac:7297: -1- m4_pattern_allow([^HAVE_CXXABI_H_CXA_EH_GLOBALS$])
m4trace:configure.ac:7309: -1- m4_pattern_allow([^HAVE_CXXABI_H_CXA_EXCEPTION$])
m4trace:configure.ac:7321: -1- m4_pattern_allow([^HAVE_CXXABI_H_CXA_GET_GLOBALS$])
m4trace:configure.ac:7332: -1- m4_pattern_allow([^HAVE_CXXABI_H_CXA_CURRENT_EXCEPTION_TYPE$])
m4trace:configure.ac:7343: -1- m4_pattern_allow([^HAVE_CXXABI_H_CXA_THROW$])
m4trace:configure.ac:7354: -1- m4_pattern_allow([^HAVE_CXXABI_H_SI_CLASS_TYPE_INFO$])
m4trace:configure.ac:7366: -1- m4_pattern_allow([^HAVE_CXXABI_H_VMI_CLASS_TYPE_INFO$])
m4trace:configure.ac:7377: -1- m4_pattern_allow([^HAVE_GCC_AVX$])
m4trace:configure.ac:7378: -1- m4_pattern_allow([^HAVE_GCC_BUILTIN_ATOMIC$])
m4trace:configure.ac:7379: -1- m4_pattern_allow([^HAVE_GCC_STACK_CLASH_PROTECTION$])
m4trace:configure.ac:7399: -2- m4_pattern_allow([^HAVE_LIBCPP$])
m4trace:configure.ac:7422: -1- m4_pattern_allow([^HAVE_LIBSTDCPP$])
m4trace:configure.ac:7423: -1- m4_pattern_allow([^HAVE_LIBCPP$])
m4trace:configure.ac:7451: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
configure.ac:7451: the top level])
m4trace:configure.ac:7476: -1- m4_pattern_allow([^LIBCPP_DEBUG$])
m4trace:configure.ac:7481: -1- m4_pattern_allow([^GPERF$])
m4trace:configure.ac:7497: -1- m4_pattern_allow([^GPERF$])
m4trace:configure.ac:7502: -1- libo_CHECK_SYSTEM_MODULE([libcmis], [LIBCMIS], [libcmis-0.5 >= 0.5.2], [enabled])
m4trace:configure.ac:7502: -1- PKG_CHECK_MODULES([LIBCMIS], [libcmis-0.5 >= 0.5.2])
m4trace:configure.ac:7502: -1- m4_pattern_allow([^LIBCMIS_CFLAGS$])
m4trace:configure.ac:7502: -1- m4_pattern_allow([^LIBCMIS_LIBS$])
m4trace:configure.ac:7502: -1- PKG_CHECK_EXISTS([libcmis-0.5 >= 0.5.2], [pkg_cv_[]LIBCMIS_CFLAGS=`$PKG_CONFIG --[]cflags "libcmis-0.5 >= 0.5.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:7502: -1- PKG_CHECK_EXISTS([libcmis-0.5 >= 0.5.2], [pkg_cv_[]LIBCMIS_LIBS=`$PKG_CONFIG --[]libs "libcmis-0.5 >= 0.5.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:7502: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:7502: -1- m4_pattern_allow([^ENABLE_LIBCMIS$])
m4trace:configure.ac:7502: -1- m4_pattern_allow([^SYSTEM_LIBCMIS$])
m4trace:configure.ac:7502: -1- m4_pattern_allow([^LIBCMIS_CFLAGS$])
m4trace:configure.ac:7502: -1- m4_pattern_allow([^LIBCMIS_LIBS$])
m4trace:configure.ac:7567: -1- m4_pattern_allow([^CXXFLAGS_CXX11$])
m4trace:configure.ac:7572: -1- CHECK_L_ATOMIC
m4trace:configure.ac:7574: -1- m4_pattern_allow([^ATOMIC_LIB$])
m4trace:configure.ac:7627: -1- m4_pattern_allow([^HAVE_GCC_FNO_SIZED_DEALLOCATION$])
m4trace:configure.ac:7633: -1- m4_pattern_allow([^HAVE_CPP_CONSTINIT_SORTED_VECTOR$])
m4trace:configure.ac:7655: -1- m4_pattern_allow([^HAVE_CPP_SPAN$])
m4trace:configure.ac:7671: -1- m4_pattern_allow([^HAVE_P1155R3$])
m4trace:configure.ac:7697: -1- m4_pattern_allow([^HAVE_CXX20_ATOMIC_REF$])
m4trace:configure.ac:7714: -1- m4_pattern_allow([^HAVE_WDEPRECATED_COPY_DTOR$])
m4trace:configure.ac:7771: -1- m4_pattern_allow([^HAVE_BROKEN_GCC_WMAYBE_UNINITIALIZED$])
m4trace:configure.ac:7820: -1- m4_pattern_allow([^HAVE_BROKEN_GCC_WSTRINGOP_OVERFLOW$])
m4trace:configure.ac:7835: -1- m4_pattern_allow([^HAVE_DLLEXPORTINLINES$])
m4trace:configure.ac:8081: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_SSE2$])
m4trace:configure.ac:8082: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_SSSE3$])
m4trace:configure.ac:8083: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_SSE41$])
m4trace:configure.ac:8084: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_SSE42$])
m4trace:configure.ac:8085: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_AVX$])
m4trace:configure.ac:8086: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_AVX2$])
m4trace:configure.ac:8087: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_AVX512$])
m4trace:configure.ac:8088: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_AVX512F$])
m4trace:configure.ac:8089: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_F16C$])
m4trace:configure.ac:8090: -1- m4_pattern_allow([^CXXFLAGS_INTRINSICS_FMA$])
m4trace:configure.ac:8211: -1- m4_pattern_allow([^HAVE_ASM_END_BRANCH_INS_SUPPORT$])
m4trace:configure.ac:8235: -1- m4_pattern_allow([^HAVE_GCC_FNO_ENFORCE_EH_SPECS$])
m4trace:configure.ac:8284: -1- m4_pattern_allow([^LLVM_CONFIG$])
m4trace:configure.ac:8388: -1- m4_pattern_allow([^COMPILER_PLUGINS_COM_IS_CLANG$])
m4trace:configure.ac:8399: -1- m4_pattern_allow([^COMPILER_PLUGINS$])
m4trace:configure.ac:8400: -1- m4_pattern_allow([^COMPILER_PLUGINS_ANALYZER_PCH$])
m4trace:configure.ac:8401: -1- m4_pattern_allow([^COMPILER_PLUGINS_COM_IS_CLANG$])
m4trace:configure.ac:8402: -1- m4_pattern_allow([^COMPILER_PLUGINS_CXX$])
m4trace:configure.ac:8403: -1- m4_pattern_allow([^COMPILER_PLUGINS_CXXFLAGS$])
m4trace:configure.ac:8404: -1- m4_pattern_allow([^COMPILER_PLUGINS_CXX_LINKFLAGS$])
m4trace:configure.ac:8405: -1- m4_pattern_allow([^COMPILER_PLUGINS_DEBUG$])
m4trace:configure.ac:8406: -1- m4_pattern_allow([^COMPILER_PLUGINS_TOOLING_ARGS$])
m4trace:configure.ac:8407: -1- m4_pattern_allow([^CLANGDIR$])
m4trace:configure.ac:8408: -1- m4_pattern_allow([^CLANGLIBDIR$])
m4trace:configure.ac:8409: -1- m4_pattern_allow([^CLANGTOOLLIBS$])
m4trace:configure.ac:8410: -1- m4_pattern_allow([^CLANGSYSINCLUDE$])
m4trace:configure.ac:8415: -1- m4_pattern_allow([^LD_PLUGIN$])
m4trace:configure.ac:8417: -1- m4_pattern_allow([^HAVE_POSIX_FALLOCATE$])
m4trace:configure.ac:8418: -1- m4_pattern_allow([^HAVE_POSIX_FALLOCATE$])
m4trace:configure.ac:8426: -1- m4_pattern_allow([^JITC_PROCESSOR_TYPE$])
m4trace:configure.ac:8492: -1- m4_pattern_allow([^UCRT_REDISTDIR$])
m4trace:configure.ac:8493: -1- m4_pattern_allow([^MSVC_DLL_PATH$])
m4trace:configure.ac:8494: -1- m4_pattern_allow([^MSVC_DLLS$])
m4trace:configure.ac:8495: -1- m4_pattern_allow([^MSM_PATH$])
m4trace:configure.ac:8533: -1- m4_pattern_allow([^JAVAINTERPRETER$])
m4trace:configure.ac:8653: -1- m4_pattern_allow([^JAVACOMPILER$])
m4trace:configure.ac:8677: -1- m4_pattern_allow([^JAVADOC$])
m4trace:configure.ac:8684: -1- m4_pattern_allow([^JAVADOC$])
m4trace:configure.ac:8701: -1- m4_pattern_allow([^JAVADOC$])
m4trace:configure.ac:8702: -1- m4_pattern_allow([^JAVADOCISGJDOC$])
m4trace:configure.ac:8848: -1- m4_pattern_allow([^JAVA_ARCH$])
m4trace:configure.ac:8852: -1- m4_pattern_allow([^JAWTLIB$])
m4trace:configure.ac:8923: -1- m4_pattern_allow([^JAVACFLAGS$])
m4trace:configure.ac:8924: -1- m4_pattern_allow([^JAVACOMPILER$])
m4trace:configure.ac:8925: -1- m4_pattern_allow([^JAVAINTERPRETER$])
m4trace:configure.ac:8926: -1- m4_pattern_allow([^JAVAIFLAGS$])
m4trace:configure.ac:8927: -1- m4_pattern_allow([^JAVAIFLAGS_FOR_BUILD$])
m4trace:configure.ac:8928: -1- m4_pattern_allow([^JAVA_CLASSPATH_NOT_SET$])
m4trace:configure.ac:8929: -1- m4_pattern_allow([^JAVA_HOME$])
m4trace:configure.ac:8930: -1- m4_pattern_allow([^JAVA_HOME_FOR_BUILD$])
m4trace:configure.ac:8931: -1- m4_pattern_allow([^JDK$])
m4trace:configure.ac:8932: -1- m4_pattern_allow([^JDK_FOR_BUILD$])
m4trace:configure.ac:8933: -1- m4_pattern_allow([^JDK_SECURITYMANAGER_DISALLOWED_FOR_BUILD$])
m4trace:configure.ac:8934: -1- m4_pattern_allow([^JAVA_SOURCE_VER$])
m4trace:configure.ac:8935: -1- m4_pattern_allow([^JAVA_TARGET_VER$])
m4trace:configure.ac:8957: -1- m4_pattern_allow([^HAVE_EXPORT_VALIDATION$])
m4trace:configure.ac:8959: -1- m4_pattern_allow([^ODFVALIDATOR$])
m4trace:configure.ac:8968: -1- m4_pattern_allow([^ODFVALIDATOR_JAR$])
m4trace:configure.ac:8983: -1- m4_pattern_allow([^ODFVALIDATOR$])
m4trace:configure.ac:8986: -1- m4_pattern_allow([^OFFICEOTRON$])
m4trace:configure.ac:8995: -1- m4_pattern_allow([^OFFICEOTRON_JAR$])
m4trace:configure.ac:9017: -1- m4_pattern_allow([^OFFICEOTRON$])
m4trace:configure.ac:9024: -1- m4_pattern_allow([^HAVE_BFFVALIDATOR$])
m4trace:configure.ac:9044: -1- m4_pattern_allow([^WINE$])
m4trace:configure.ac:9049: -1- m4_pattern_allow([^BFFVALIDATOR_EXE$])
m4trace:configure.ac:9054: -1- m4_pattern_allow([^BFFVALIDATOR$])
m4trace:configure.ac:9071: -1- m4_pattern_allow([^EPM$])
m4trace:configure.ac:9123: -1- m4_pattern_allow([^DPKG$])
m4trace:configure.ac:9155: -1- m4_pattern_allow([^PKGMK$])
m4trace:configure.ac:9160: -1- m4_pattern_allow([^RPM$])
m4trace:configure.ac:9161: -1- m4_pattern_allow([^DPKG$])
m4trace:configure.ac:9162: -1- m4_pattern_allow([^PKGMK$])
m4trace:configure.ac:9175: -1- m4_pattern_allow([^EPM$])
m4trace:configure.ac:9181: -1- m4_pattern_allow([^ENABLE_LWP$])
m4trace:configure.ac:9206: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:9229: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:9243: -1- m4_pattern_allow([^ENABLE_FUZZERS$])
m4trace:configure.ac:9244: -1- m4_pattern_allow([^VCL_FLOAT_DEVICE_PIXEL$])
m4trace:configure.ac:9247: -1- m4_pattern_allow([^LIB_FUZZING_ENGINE$])
m4trace:configure.ac:9290: -1- m4_pattern_allow([^ZLIB_CFLAGS$])
m4trace:configure.ac:9291: -1- m4_pattern_allow([^ZLIB_LIBS$])
m4trace:configure.ac:9292: -1- m4_pattern_allow([^SYSTEM_ZLIB$])
m4trace:configure.ac:9312: -1- m4_pattern_allow([^NASM$])
m4trace:configure.ac:9478: -1- m4_pattern_allow([^NASM$])
m4trace:configure.ac:9479: -1- m4_pattern_allow([^NAFLAGS$])
m4trace:configure.ac:9480: -1- m4_pattern_allow([^LIBJPEG_CFLAGS$])
m4trace:configure.ac:9481: -1- m4_pattern_allow([^LIBJPEG_LIBS$])
m4trace:configure.ac:9482: -1- m4_pattern_allow([^SYSTEM_LIBJPEG$])
m4trace:configure.ac:9487: -1- libo_CHECK_SYSTEM_MODULE([clucene], [CLUCENE], [libclucene-core])
m4trace:configure.ac:9487: -1- PKG_CHECK_MODULES([CLUCENE], [libclucene-core])
m4trace:configure.ac:9487: -1- m4_pattern_allow([^CLUCENE_CFLAGS$])
m4trace:configure.ac:9487: -1- m4_pattern_allow([^CLUCENE_LIBS$])
m4trace:configure.ac:9487: -1- PKG_CHECK_EXISTS([libclucene-core], [pkg_cv_[]CLUCENE_CFLAGS=`$PKG_CONFIG --[]cflags "libclucene-core" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9487: -1- PKG_CHECK_EXISTS([libclucene-core], [pkg_cv_[]CLUCENE_LIBS=`$PKG_CONFIG --[]libs "libclucene-core" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9487: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9487: -1- m4_pattern_allow([^ENABLE_CLUCENE$])
m4trace:configure.ac:9487: -1- m4_pattern_allow([^SYSTEM_CLUCENE$])
m4trace:configure.ac:9487: -1- m4_pattern_allow([^CLUCENE_CFLAGS$])
m4trace:configure.ac:9487: -1- m4_pattern_allow([^CLUCENE_LIBS$])
m4trace:configure.ac:9507: -1- libo_CHECK_SYSTEM_MODULE([expat], [EXPAT], [expat])
m4trace:configure.ac:9507: -1- PKG_CHECK_MODULES([EXPAT], [expat])
m4trace:configure.ac:9507: -1- m4_pattern_allow([^EXPAT_CFLAGS$])
m4trace:configure.ac:9507: -1- m4_pattern_allow([^EXPAT_LIBS$])
m4trace:configure.ac:9507: -1- PKG_CHECK_EXISTS([expat], [pkg_cv_[]EXPAT_CFLAGS=`$PKG_CONFIG --[]cflags "expat" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9507: -1- PKG_CHECK_EXISTS([expat], [pkg_cv_[]EXPAT_LIBS=`$PKG_CONFIG --[]libs "expat" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9507: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9507: -1- m4_pattern_allow([^ENABLE_EXPAT$])
m4trace:configure.ac:9507: -1- m4_pattern_allow([^SYSTEM_EXPAT$])
m4trace:configure.ac:9507: -1- m4_pattern_allow([^EXPAT_CFLAGS$])
m4trace:configure.ac:9507: -1- m4_pattern_allow([^EXPAT_LIBS$])
m4trace:configure.ac:9512: -1- libo_CHECK_SYSTEM_MODULE([xmlsec], [XMLSEC], [xmlsec1-nss >= 1.2.35])
m4trace:configure.ac:9512: -1- PKG_CHECK_MODULES([XMLSEC], [xmlsec1-nss >= 1.2.35])
m4trace:configure.ac:9512: -1- m4_pattern_allow([^XMLSEC_CFLAGS$])
m4trace:configure.ac:9512: -1- m4_pattern_allow([^XMLSEC_LIBS$])
m4trace:configure.ac:9512: -1- PKG_CHECK_EXISTS([xmlsec1-nss >= 1.2.35], [pkg_cv_[]XMLSEC_CFLAGS=`$PKG_CONFIG --[]cflags "xmlsec1-nss >= 1.2.35" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9512: -1- PKG_CHECK_EXISTS([xmlsec1-nss >= 1.2.35], [pkg_cv_[]XMLSEC_LIBS=`$PKG_CONFIG --[]libs "xmlsec1-nss >= 1.2.35" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9512: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9512: -1- m4_pattern_allow([^ENABLE_XMLSEC$])
m4trace:configure.ac:9512: -1- m4_pattern_allow([^SYSTEM_XMLSEC$])
m4trace:configure.ac:9512: -1- m4_pattern_allow([^XMLSEC_CFLAGS$])
m4trace:configure.ac:9512: -1- m4_pattern_allow([^XMLSEC_LIBS$])
m4trace:configure.ac:9517: -1- m4_pattern_allow([^ENABLE_EOT$])
m4trace:configure.ac:9520: -1- libo_CHECK_SYSTEM_MODULE([libeot], [LIBEOT], [libeot >= 0.01])
m4trace:configure.ac:9520: -1- PKG_CHECK_MODULES([LIBEOT], [libeot >= 0.01])
m4trace:configure.ac:9520: -1- m4_pattern_allow([^LIBEOT_CFLAGS$])
m4trace:configure.ac:9520: -1- m4_pattern_allow([^LIBEOT_LIBS$])
m4trace:configure.ac:9520: -1- PKG_CHECK_EXISTS([libeot >= 0.01], [pkg_cv_[]LIBEOT_CFLAGS=`$PKG_CONFIG --[]cflags "libeot >= 0.01" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9520: -1- PKG_CHECK_EXISTS([libeot >= 0.01], [pkg_cv_[]LIBEOT_LIBS=`$PKG_CONFIG --[]libs "libeot >= 0.01" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9520: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9520: -1- m4_pattern_allow([^ENABLE_LIBEOT$])
m4trace:configure.ac:9520: -1- m4_pattern_allow([^SYSTEM_LIBEOT$])
m4trace:configure.ac:9520: -1- m4_pattern_allow([^LIBEOT_CFLAGS$])
m4trace:configure.ac:9520: -1- m4_pattern_allow([^LIBEOT_LIBS$])
m4trace:configure.ac:9525: -1- m4_pattern_allow([^ENABLE_EOT$])
m4trace:configure.ac:9536: -1- libo_CHECK_SYSTEM_MODULE([librevenge], [REVENGE], [librevenge-0.0 >= 0.0.1])
m4trace:configure.ac:9536: -1- PKG_CHECK_MODULES([REVENGE], [librevenge-0.0 >= 0.0.1])
m4trace:configure.ac:9536: -1- m4_pattern_allow([^REVENGE_CFLAGS$])
m4trace:configure.ac:9536: -1- m4_pattern_allow([^REVENGE_LIBS$])
m4trace:configure.ac:9536: -1- PKG_CHECK_EXISTS([librevenge-0.0 >= 0.0.1], [pkg_cv_[]REVENGE_CFLAGS=`$PKG_CONFIG --[]cflags "librevenge-0.0 >= 0.0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9536: -1- PKG_CHECK_EXISTS([librevenge-0.0 >= 0.0.1], [pkg_cv_[]REVENGE_LIBS=`$PKG_CONFIG --[]libs "librevenge-0.0 >= 0.0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9536: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9536: -1- m4_pattern_allow([^ENABLE_REVENGE$])
m4trace:configure.ac:9536: -1- m4_pattern_allow([^SYSTEM_REVENGE$])
m4trace:configure.ac:9536: -1- m4_pattern_allow([^REVENGE_CFLAGS$])
m4trace:configure.ac:9536: -1- m4_pattern_allow([^REVENGE_LIBS$])
m4trace:configure.ac:9538: -1- libo_CHECK_SYSTEM_MODULE([libodfgen], [ODFGEN], [libodfgen-0.1])
m4trace:configure.ac:9538: -1- PKG_CHECK_MODULES([ODFGEN], [libodfgen-0.1])
m4trace:configure.ac:9538: -1- m4_pattern_allow([^ODFGEN_CFLAGS$])
m4trace:configure.ac:9538: -1- m4_pattern_allow([^ODFGEN_LIBS$])
m4trace:configure.ac:9538: -1- PKG_CHECK_EXISTS([libodfgen-0.1], [pkg_cv_[]ODFGEN_CFLAGS=`$PKG_CONFIG --[]cflags "libodfgen-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9538: -1- PKG_CHECK_EXISTS([libodfgen-0.1], [pkg_cv_[]ODFGEN_LIBS=`$PKG_CONFIG --[]libs "libodfgen-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9538: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9538: -1- m4_pattern_allow([^ENABLE_ODFGEN$])
m4trace:configure.ac:9538: -1- m4_pattern_allow([^SYSTEM_ODFGEN$])
m4trace:configure.ac:9538: -1- m4_pattern_allow([^ODFGEN_CFLAGS$])
m4trace:configure.ac:9538: -1- m4_pattern_allow([^ODFGEN_LIBS$])
m4trace:configure.ac:9540: -1- libo_CHECK_SYSTEM_MODULE([libepubgen], [EPUBGEN], [libepubgen-0.1])
m4trace:configure.ac:9540: -1- PKG_CHECK_MODULES([EPUBGEN], [libepubgen-0.1])
m4trace:configure.ac:9540: -1- m4_pattern_allow([^EPUBGEN_CFLAGS$])
m4trace:configure.ac:9540: -1- m4_pattern_allow([^EPUBGEN_LIBS$])
m4trace:configure.ac:9540: -1- PKG_CHECK_EXISTS([libepubgen-0.1], [pkg_cv_[]EPUBGEN_CFLAGS=`$PKG_CONFIG --[]cflags "libepubgen-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9540: -1- PKG_CHECK_EXISTS([libepubgen-0.1], [pkg_cv_[]EPUBGEN_LIBS=`$PKG_CONFIG --[]libs "libepubgen-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9540: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9540: -1- m4_pattern_allow([^ENABLE_EPUBGEN$])
m4trace:configure.ac:9540: -1- m4_pattern_allow([^SYSTEM_EPUBGEN$])
m4trace:configure.ac:9540: -1- m4_pattern_allow([^EPUBGEN_CFLAGS$])
m4trace:configure.ac:9540: -1- m4_pattern_allow([^EPUBGEN_LIBS$])
m4trace:configure.ac:9548: -1- libo_CHECK_SYSTEM_MODULE([libwpd], [WPD], [libwpd-0.10])
m4trace:configure.ac:9548: -1- PKG_CHECK_MODULES([WPD], [libwpd-0.10])
m4trace:configure.ac:9548: -1- m4_pattern_allow([^WPD_CFLAGS$])
m4trace:configure.ac:9548: -1- m4_pattern_allow([^WPD_LIBS$])
m4trace:configure.ac:9548: -1- PKG_CHECK_EXISTS([libwpd-0.10], [pkg_cv_[]WPD_CFLAGS=`$PKG_CONFIG --[]cflags "libwpd-0.10" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9548: -1- PKG_CHECK_EXISTS([libwpd-0.10], [pkg_cv_[]WPD_LIBS=`$PKG_CONFIG --[]libs "libwpd-0.10" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9548: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9548: -1- m4_pattern_allow([^ENABLE_WPD$])
m4trace:configure.ac:9548: -1- m4_pattern_allow([^SYSTEM_WPD$])
m4trace:configure.ac:9548: -1- m4_pattern_allow([^WPD_CFLAGS$])
m4trace:configure.ac:9548: -1- m4_pattern_allow([^WPD_LIBS$])
m4trace:configure.ac:9550: -1- libo_CHECK_SYSTEM_MODULE([libwpg], [WPG], [libwpg-0.3])
m4trace:configure.ac:9550: -1- PKG_CHECK_MODULES([WPG], [libwpg-0.3])
m4trace:configure.ac:9550: -1- m4_pattern_allow([^WPG_CFLAGS$])
m4trace:configure.ac:9550: -1- m4_pattern_allow([^WPG_LIBS$])
m4trace:configure.ac:9550: -1- PKG_CHECK_EXISTS([libwpg-0.3], [pkg_cv_[]WPG_CFLAGS=`$PKG_CONFIG --[]cflags "libwpg-0.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9550: -1- PKG_CHECK_EXISTS([libwpg-0.3], [pkg_cv_[]WPG_LIBS=`$PKG_CONFIG --[]libs "libwpg-0.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9550: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9550: -1- m4_pattern_allow([^ENABLE_WPG$])
m4trace:configure.ac:9550: -1- m4_pattern_allow([^SYSTEM_WPG$])
m4trace:configure.ac:9550: -1- m4_pattern_allow([^WPG_CFLAGS$])
m4trace:configure.ac:9550: -1- m4_pattern_allow([^WPG_LIBS$])
m4trace:configure.ac:9552: -1- libo_CHECK_SYSTEM_MODULE([libwps], [WPS], [libwps-0.4])
m4trace:configure.ac:9552: -1- PKG_CHECK_MODULES([WPS], [libwps-0.4])
m4trace:configure.ac:9552: -1- m4_pattern_allow([^WPS_CFLAGS$])
m4trace:configure.ac:9552: -1- m4_pattern_allow([^WPS_LIBS$])
m4trace:configure.ac:9552: -1- PKG_CHECK_EXISTS([libwps-0.4], [pkg_cv_[]WPS_CFLAGS=`$PKG_CONFIG --[]cflags "libwps-0.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9552: -1- PKG_CHECK_EXISTS([libwps-0.4], [pkg_cv_[]WPS_LIBS=`$PKG_CONFIG --[]libs "libwps-0.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9552: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9552: -1- m4_pattern_allow([^ENABLE_WPS$])
m4trace:configure.ac:9552: -1- m4_pattern_allow([^SYSTEM_WPS$])
m4trace:configure.ac:9552: -1- m4_pattern_allow([^WPS_CFLAGS$])
m4trace:configure.ac:9552: -1- m4_pattern_allow([^WPS_LIBS$])
m4trace:configure.ac:9553: -1- libo_PKG_VERSION([WPS], [libwps-0.4], [0.4.12])
m4trace:configure.ac:9553: -1- m4_pattern_allow([^WPS_VERSION_MAJOR$])
m4trace:configure.ac:9553: -1- m4_pattern_allow([^WPS_VERSION_MINOR$])
m4trace:configure.ac:9553: -1- m4_pattern_allow([^WPS_VERSION_MICRO$])
m4trace:configure.ac:9553: -1- m4_pattern_allow([^WPS_VERSION_MAJOR$])
m4trace:configure.ac:9553: -1- m4_pattern_allow([^WPS_VERSION_MINOR$])
m4trace:configure.ac:9553: -1- m4_pattern_allow([^WPS_VERSION_MICRO$])
m4trace:configure.ac:9555: -1- libo_CHECK_SYSTEM_MODULE([libvisio], [VISIO], [libvisio-0.1])
m4trace:configure.ac:9555: -1- PKG_CHECK_MODULES([VISIO], [libvisio-0.1])
m4trace:configure.ac:9555: -1- m4_pattern_allow([^VISIO_CFLAGS$])
m4trace:configure.ac:9555: -1- m4_pattern_allow([^VISIO_LIBS$])
m4trace:configure.ac:9555: -1- PKG_CHECK_EXISTS([libvisio-0.1], [pkg_cv_[]VISIO_CFLAGS=`$PKG_CONFIG --[]cflags "libvisio-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9555: -1- PKG_CHECK_EXISTS([libvisio-0.1], [pkg_cv_[]VISIO_LIBS=`$PKG_CONFIG --[]libs "libvisio-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9555: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9555: -1- m4_pattern_allow([^ENABLE_VISIO$])
m4trace:configure.ac:9555: -1- m4_pattern_allow([^SYSTEM_VISIO$])
m4trace:configure.ac:9555: -1- m4_pattern_allow([^VISIO_CFLAGS$])
m4trace:configure.ac:9555: -1- m4_pattern_allow([^VISIO_LIBS$])
m4trace:configure.ac:9557: -1- libo_CHECK_SYSTEM_MODULE([libcdr], [CDR], [libcdr-0.1])
m4trace:configure.ac:9557: -1- PKG_CHECK_MODULES([CDR], [libcdr-0.1])
m4trace:configure.ac:9557: -1- m4_pattern_allow([^CDR_CFLAGS$])
m4trace:configure.ac:9557: -1- m4_pattern_allow([^CDR_LIBS$])
m4trace:configure.ac:9557: -1- PKG_CHECK_EXISTS([libcdr-0.1], [pkg_cv_[]CDR_CFLAGS=`$PKG_CONFIG --[]cflags "libcdr-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9557: -1- PKG_CHECK_EXISTS([libcdr-0.1], [pkg_cv_[]CDR_LIBS=`$PKG_CONFIG --[]libs "libcdr-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9557: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9557: -1- m4_pattern_allow([^ENABLE_CDR$])
m4trace:configure.ac:9557: -1- m4_pattern_allow([^SYSTEM_CDR$])
m4trace:configure.ac:9557: -1- m4_pattern_allow([^CDR_CFLAGS$])
m4trace:configure.ac:9557: -1- m4_pattern_allow([^CDR_LIBS$])
m4trace:configure.ac:9559: -1- libo_CHECK_SYSTEM_MODULE([libmspub], [MSPUB], [libmspub-0.1])
m4trace:configure.ac:9559: -1- PKG_CHECK_MODULES([MSPUB], [libmspub-0.1])
m4trace:configure.ac:9559: -1- m4_pattern_allow([^MSPUB_CFLAGS$])
m4trace:configure.ac:9559: -1- m4_pattern_allow([^MSPUB_LIBS$])
m4trace:configure.ac:9559: -1- PKG_CHECK_EXISTS([libmspub-0.1], [pkg_cv_[]MSPUB_CFLAGS=`$PKG_CONFIG --[]cflags "libmspub-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9559: -1- PKG_CHECK_EXISTS([libmspub-0.1], [pkg_cv_[]MSPUB_LIBS=`$PKG_CONFIG --[]libs "libmspub-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9559: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9559: -1- m4_pattern_allow([^ENABLE_MSPUB$])
m4trace:configure.ac:9559: -1- m4_pattern_allow([^SYSTEM_MSPUB$])
m4trace:configure.ac:9559: -1- m4_pattern_allow([^MSPUB_CFLAGS$])
m4trace:configure.ac:9559: -1- m4_pattern_allow([^MSPUB_LIBS$])
m4trace:configure.ac:9561: -1- libo_CHECK_SYSTEM_MODULE([libmwaw], [MWAW], [libmwaw-0.3 >= 0.3.21])
m4trace:configure.ac:9561: -1- PKG_CHECK_MODULES([MWAW], [libmwaw-0.3 >= 0.3.21])
m4trace:configure.ac:9561: -1- m4_pattern_allow([^MWAW_CFLAGS$])
m4trace:configure.ac:9561: -1- m4_pattern_allow([^MWAW_LIBS$])
m4trace:configure.ac:9561: -1- PKG_CHECK_EXISTS([libmwaw-0.3 >= 0.3.21], [pkg_cv_[]MWAW_CFLAGS=`$PKG_CONFIG --[]cflags "libmwaw-0.3 >= 0.3.21" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9561: -1- PKG_CHECK_EXISTS([libmwaw-0.3 >= 0.3.21], [pkg_cv_[]MWAW_LIBS=`$PKG_CONFIG --[]libs "libmwaw-0.3 >= 0.3.21" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9561: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9561: -1- m4_pattern_allow([^ENABLE_MWAW$])
m4trace:configure.ac:9561: -1- m4_pattern_allow([^SYSTEM_MWAW$])
m4trace:configure.ac:9561: -1- m4_pattern_allow([^MWAW_CFLAGS$])
m4trace:configure.ac:9561: -1- m4_pattern_allow([^MWAW_LIBS$])
m4trace:configure.ac:9562: -1- libo_PKG_VERSION([MWAW], [libmwaw-0.3], [0.3.21])
m4trace:configure.ac:9562: -1- m4_pattern_allow([^MWAW_VERSION_MAJOR$])
m4trace:configure.ac:9562: -1- m4_pattern_allow([^MWAW_VERSION_MINOR$])
m4trace:configure.ac:9562: -1- m4_pattern_allow([^MWAW_VERSION_MICRO$])
m4trace:configure.ac:9562: -1- m4_pattern_allow([^MWAW_VERSION_MAJOR$])
m4trace:configure.ac:9562: -1- m4_pattern_allow([^MWAW_VERSION_MINOR$])
m4trace:configure.ac:9562: -1- m4_pattern_allow([^MWAW_VERSION_MICRO$])
m4trace:configure.ac:9564: -1- libo_CHECK_SYSTEM_MODULE([libetonyek], [ETONYEK], [libetonyek-0.1])
m4trace:configure.ac:9564: -1- PKG_CHECK_MODULES([ETONYEK], [libetonyek-0.1])
m4trace:configure.ac:9564: -1- m4_pattern_allow([^ETONYEK_CFLAGS$])
m4trace:configure.ac:9564: -1- m4_pattern_allow([^ETONYEK_LIBS$])
m4trace:configure.ac:9564: -1- PKG_CHECK_EXISTS([libetonyek-0.1], [pkg_cv_[]ETONYEK_CFLAGS=`$PKG_CONFIG --[]cflags "libetonyek-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9564: -1- PKG_CHECK_EXISTS([libetonyek-0.1], [pkg_cv_[]ETONYEK_LIBS=`$PKG_CONFIG --[]libs "libetonyek-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9564: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9564: -1- m4_pattern_allow([^ENABLE_ETONYEK$])
m4trace:configure.ac:9564: -1- m4_pattern_allow([^SYSTEM_ETONYEK$])
m4trace:configure.ac:9564: -1- m4_pattern_allow([^ETONYEK_CFLAGS$])
m4trace:configure.ac:9564: -1- m4_pattern_allow([^ETONYEK_LIBS$])
m4trace:configure.ac:9565: -1- libo_PKG_VERSION([ETONYEK], [libetonyek-0.1], [0.1.10])
m4trace:configure.ac:9565: -1- m4_pattern_allow([^ETONYEK_VERSION_MAJOR$])
m4trace:configure.ac:9565: -1- m4_pattern_allow([^ETONYEK_VERSION_MINOR$])
m4trace:configure.ac:9565: -1- m4_pattern_allow([^ETONYEK_VERSION_MICRO$])
m4trace:configure.ac:9565: -1- m4_pattern_allow([^ETONYEK_VERSION_MAJOR$])
m4trace:configure.ac:9565: -1- m4_pattern_allow([^ETONYEK_VERSION_MINOR$])
m4trace:configure.ac:9565: -1- m4_pattern_allow([^ETONYEK_VERSION_MICRO$])
m4trace:configure.ac:9567: -1- libo_CHECK_SYSTEM_MODULE([libfreehand], [FREEHAND], [libfreehand-0.1])
m4trace:configure.ac:9567: -1- PKG_CHECK_MODULES([FREEHAND], [libfreehand-0.1])
m4trace:configure.ac:9567: -1- m4_pattern_allow([^FREEHAND_CFLAGS$])
m4trace:configure.ac:9567: -1- m4_pattern_allow([^FREEHAND_LIBS$])
m4trace:configure.ac:9567: -1- PKG_CHECK_EXISTS([libfreehand-0.1], [pkg_cv_[]FREEHAND_CFLAGS=`$PKG_CONFIG --[]cflags "libfreehand-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9567: -1- PKG_CHECK_EXISTS([libfreehand-0.1], [pkg_cv_[]FREEHAND_LIBS=`$PKG_CONFIG --[]libs "libfreehand-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9567: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9567: -1- m4_pattern_allow([^ENABLE_FREEHAND$])
m4trace:configure.ac:9567: -1- m4_pattern_allow([^SYSTEM_FREEHAND$])
m4trace:configure.ac:9567: -1- m4_pattern_allow([^FREEHAND_CFLAGS$])
m4trace:configure.ac:9567: -1- m4_pattern_allow([^FREEHAND_LIBS$])
m4trace:configure.ac:9569: -1- libo_CHECK_SYSTEM_MODULE([libebook], [EBOOK], [libe-book-0.1])
m4trace:configure.ac:9569: -1- PKG_CHECK_MODULES([EBOOK], [libe-book-0.1])
m4trace:configure.ac:9569: -1- m4_pattern_allow([^EBOOK_CFLAGS$])
m4trace:configure.ac:9569: -1- m4_pattern_allow([^EBOOK_LIBS$])
m4trace:configure.ac:9569: -1- PKG_CHECK_EXISTS([libe-book-0.1], [pkg_cv_[]EBOOK_CFLAGS=`$PKG_CONFIG --[]cflags "libe-book-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9569: -1- PKG_CHECK_EXISTS([libe-book-0.1], [pkg_cv_[]EBOOK_LIBS=`$PKG_CONFIG --[]libs "libe-book-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9569: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9569: -1- m4_pattern_allow([^ENABLE_EBOOK$])
m4trace:configure.ac:9569: -1- m4_pattern_allow([^SYSTEM_EBOOK$])
m4trace:configure.ac:9569: -1- m4_pattern_allow([^EBOOK_CFLAGS$])
m4trace:configure.ac:9569: -1- m4_pattern_allow([^EBOOK_LIBS$])
m4trace:configure.ac:9570: -1- libo_PKG_VERSION([EBOOK], [libe-book-0.1], [0.1.2])
m4trace:configure.ac:9570: -1- m4_pattern_allow([^EBOOK_VERSION_MAJOR$])
m4trace:configure.ac:9570: -1- m4_pattern_allow([^EBOOK_VERSION_MINOR$])
m4trace:configure.ac:9570: -1- m4_pattern_allow([^EBOOK_VERSION_MICRO$])
m4trace:configure.ac:9570: -1- m4_pattern_allow([^EBOOK_VERSION_MAJOR$])
m4trace:configure.ac:9570: -1- m4_pattern_allow([^EBOOK_VERSION_MINOR$])
m4trace:configure.ac:9570: -1- m4_pattern_allow([^EBOOK_VERSION_MICRO$])
m4trace:configure.ac:9572: -1- libo_CHECK_SYSTEM_MODULE([libabw], [ABW], [libabw-0.1])
m4trace:configure.ac:9572: -1- PKG_CHECK_MODULES([ABW], [libabw-0.1])
m4trace:configure.ac:9572: -1- m4_pattern_allow([^ABW_CFLAGS$])
m4trace:configure.ac:9572: -1- m4_pattern_allow([^ABW_LIBS$])
m4trace:configure.ac:9572: -1- PKG_CHECK_EXISTS([libabw-0.1], [pkg_cv_[]ABW_CFLAGS=`$PKG_CONFIG --[]cflags "libabw-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9572: -1- PKG_CHECK_EXISTS([libabw-0.1], [pkg_cv_[]ABW_LIBS=`$PKG_CONFIG --[]libs "libabw-0.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9572: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9572: -1- m4_pattern_allow([^ENABLE_ABW$])
m4trace:configure.ac:9572: -1- m4_pattern_allow([^SYSTEM_ABW$])
m4trace:configure.ac:9572: -1- m4_pattern_allow([^ABW_CFLAGS$])
m4trace:configure.ac:9572: -1- m4_pattern_allow([^ABW_LIBS$])
m4trace:configure.ac:9574: -1- libo_CHECK_SYSTEM_MODULE([libpagemaker], [PAGEMAKER], [libpagemaker-0.0])
m4trace:configure.ac:9574: -1- PKG_CHECK_MODULES([PAGEMAKER], [libpagemaker-0.0])
m4trace:configure.ac:9574: -1- m4_pattern_allow([^PAGEMAKER_CFLAGS$])
m4trace:configure.ac:9574: -1- m4_pattern_allow([^PAGEMAKER_LIBS$])
m4trace:configure.ac:9574: -1- PKG_CHECK_EXISTS([libpagemaker-0.0], [pkg_cv_[]PAGEMAKER_CFLAGS=`$PKG_CONFIG --[]cflags "libpagemaker-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9574: -1- PKG_CHECK_EXISTS([libpagemaker-0.0], [pkg_cv_[]PAGEMAKER_LIBS=`$PKG_CONFIG --[]libs "libpagemaker-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9574: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9574: -1- m4_pattern_allow([^ENABLE_PAGEMAKER$])
m4trace:configure.ac:9574: -1- m4_pattern_allow([^SYSTEM_PAGEMAKER$])
m4trace:configure.ac:9574: -1- m4_pattern_allow([^PAGEMAKER_CFLAGS$])
m4trace:configure.ac:9574: -1- m4_pattern_allow([^PAGEMAKER_LIBS$])
m4trace:configure.ac:9576: -1- libo_CHECK_SYSTEM_MODULE([libqxp], [QXP], [libqxp-0.0])
m4trace:configure.ac:9576: -1- PKG_CHECK_MODULES([QXP], [libqxp-0.0])
m4trace:configure.ac:9576: -1- m4_pattern_allow([^QXP_CFLAGS$])
m4trace:configure.ac:9576: -1- m4_pattern_allow([^QXP_LIBS$])
m4trace:configure.ac:9576: -1- PKG_CHECK_EXISTS([libqxp-0.0], [pkg_cv_[]QXP_CFLAGS=`$PKG_CONFIG --[]cflags "libqxp-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9576: -1- PKG_CHECK_EXISTS([libqxp-0.0], [pkg_cv_[]QXP_LIBS=`$PKG_CONFIG --[]libs "libqxp-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9576: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9576: -1- m4_pattern_allow([^ENABLE_QXP$])
m4trace:configure.ac:9576: -1- m4_pattern_allow([^SYSTEM_QXP$])
m4trace:configure.ac:9576: -1- m4_pattern_allow([^QXP_CFLAGS$])
m4trace:configure.ac:9576: -1- m4_pattern_allow([^QXP_LIBS$])
m4trace:configure.ac:9578: -1- libo_CHECK_SYSTEM_MODULE([libzmf], [ZMF], [libzmf-0.0])
m4trace:configure.ac:9578: -1- PKG_CHECK_MODULES([ZMF], [libzmf-0.0])
m4trace:configure.ac:9578: -1- m4_pattern_allow([^ZMF_CFLAGS$])
m4trace:configure.ac:9578: -1- m4_pattern_allow([^ZMF_LIBS$])
m4trace:configure.ac:9578: -1- PKG_CHECK_EXISTS([libzmf-0.0], [pkg_cv_[]ZMF_CFLAGS=`$PKG_CONFIG --[]cflags "libzmf-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9578: -1- PKG_CHECK_EXISTS([libzmf-0.0], [pkg_cv_[]ZMF_LIBS=`$PKG_CONFIG --[]libs "libzmf-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9578: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9578: -1- m4_pattern_allow([^ENABLE_ZMF$])
m4trace:configure.ac:9578: -1- m4_pattern_allow([^SYSTEM_ZMF$])
m4trace:configure.ac:9578: -1- m4_pattern_allow([^ZMF_CFLAGS$])
m4trace:configure.ac:9578: -1- m4_pattern_allow([^ZMF_LIBS$])
m4trace:configure.ac:9580: -1- libo_CHECK_SYSTEM_MODULE([libstaroffice], [STAROFFICE], [libstaroffice-0.0])
m4trace:configure.ac:9580: -1- PKG_CHECK_MODULES([STAROFFICE], [libstaroffice-0.0])
m4trace:configure.ac:9580: -1- m4_pattern_allow([^STAROFFICE_CFLAGS$])
m4trace:configure.ac:9580: -1- m4_pattern_allow([^STAROFFICE_LIBS$])
m4trace:configure.ac:9580: -1- PKG_CHECK_EXISTS([libstaroffice-0.0], [pkg_cv_[]STAROFFICE_CFLAGS=`$PKG_CONFIG --[]cflags "libstaroffice-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9580: -1- PKG_CHECK_EXISTS([libstaroffice-0.0], [pkg_cv_[]STAROFFICE_LIBS=`$PKG_CONFIG --[]libs "libstaroffice-0.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9580: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9580: -1- m4_pattern_allow([^ENABLE_STAROFFICE$])
m4trace:configure.ac:9580: -1- m4_pattern_allow([^SYSTEM_STAROFFICE$])
m4trace:configure.ac:9580: -1- m4_pattern_allow([^STAROFFICE_CFLAGS$])
m4trace:configure.ac:9580: -1- m4_pattern_allow([^STAROFFICE_LIBS$])
m4trace:configure.ac:9581: -1- libo_PKG_VERSION([STAROFFICE], [libstaroffice-0.0], [0.0.7])
m4trace:configure.ac:9581: -1- m4_pattern_allow([^STAROFFICE_VERSION_MAJOR$])
m4trace:configure.ac:9581: -1- m4_pattern_allow([^STAROFFICE_VERSION_MINOR$])
m4trace:configure.ac:9581: -1- m4_pattern_allow([^STAROFFICE_VERSION_MICRO$])
m4trace:configure.ac:9581: -1- m4_pattern_allow([^STAROFFICE_VERSION_MAJOR$])
m4trace:configure.ac:9581: -1- m4_pattern_allow([^STAROFFICE_VERSION_MINOR$])
m4trace:configure.ac:9581: -1- m4_pattern_allow([^STAROFFICE_VERSION_MICRO$])
m4trace:configure.ac:9591: -1- libo_CHECK_SYSTEM_MODULE([lcms2], [LCMS2], [lcms2])
m4trace:configure.ac:9591: -1- PKG_CHECK_MODULES([LCMS2], [lcms2])
m4trace:configure.ac:9591: -1- m4_pattern_allow([^LCMS2_CFLAGS$])
m4trace:configure.ac:9591: -1- m4_pattern_allow([^LCMS2_LIBS$])
m4trace:configure.ac:9591: -1- PKG_CHECK_EXISTS([lcms2], [pkg_cv_[]LCMS2_CFLAGS=`$PKG_CONFIG --[]cflags "lcms2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9591: -1- PKG_CHECK_EXISTS([lcms2], [pkg_cv_[]LCMS2_LIBS=`$PKG_CONFIG --[]libs "lcms2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9591: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9591: -1- m4_pattern_allow([^ENABLE_LCMS2$])
m4trace:configure.ac:9591: -1- m4_pattern_allow([^SYSTEM_LCMS2$])
m4trace:configure.ac:9591: -1- m4_pattern_allow([^LCMS2_CFLAGS$])
m4trace:configure.ac:9591: -1- m4_pattern_allow([^LCMS2_LIBS$])
m4trace:configure.ac:9603: -1- libo_CHECK_SYSTEM_MODULE([cppunit], [CPPUNIT], [cppunit >= 1.14.0])
m4trace:configure.ac:9603: -1- PKG_CHECK_MODULES([CPPUNIT], [cppunit >= 1.14.0])
m4trace:configure.ac:9603: -1- m4_pattern_allow([^CPPUNIT_CFLAGS$])
m4trace:configure.ac:9603: -1- m4_pattern_allow([^CPPUNIT_LIBS$])
m4trace:configure.ac:9603: -1- PKG_CHECK_EXISTS([cppunit >= 1.14.0], [pkg_cv_[]CPPUNIT_CFLAGS=`$PKG_CONFIG --[]cflags "cppunit >= 1.14.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9603: -1- PKG_CHECK_EXISTS([cppunit >= 1.14.0], [pkg_cv_[]CPPUNIT_LIBS=`$PKG_CONFIG --[]libs "cppunit >= 1.14.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9603: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9603: -1- m4_pattern_allow([^ENABLE_CPPUNIT$])
m4trace:configure.ac:9603: -1- m4_pattern_allow([^SYSTEM_CPPUNIT$])
m4trace:configure.ac:9603: -1- m4_pattern_allow([^CPPUNIT_CFLAGS$])
m4trace:configure.ac:9603: -1- m4_pattern_allow([^CPPUNIT_LIBS$])
m4trace:configure.ac:9624: -1- libo_CHECK_SYSTEM_MODULE([freetype], [FREETYPE], [freetype2 >= 9.9.3], [], [system], [TRUE])
m4trace:configure.ac:9624: -1- PKG_CHECK_MODULES([FREETYPE], [freetype2 >= 9.9.3])
m4trace:configure.ac:9624: -1- m4_pattern_allow([^FREETYPE_CFLAGS$])
m4trace:configure.ac:9624: -1- m4_pattern_allow([^FREETYPE_LIBS$])
m4trace:configure.ac:9624: -1- PKG_CHECK_EXISTS([freetype2 >= 9.9.3], [pkg_cv_[]FREETYPE_CFLAGS=`$PKG_CONFIG --[]cflags "freetype2 >= 9.9.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9624: -1- PKG_CHECK_EXISTS([freetype2 >= 9.9.3], [pkg_cv_[]FREETYPE_LIBS=`$PKG_CONFIG --[]libs "freetype2 >= 9.9.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9624: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9624: -1- m4_pattern_allow([^ENABLE_FREETYPE$])
m4trace:configure.ac:9624: -1- m4_pattern_allow([^SYSTEM_FREETYPE$])
m4trace:configure.ac:9624: -1- m4_pattern_allow([^FREETYPE_CFLAGS$])
m4trace:configure.ac:9624: -1- m4_pattern_allow([^FREETYPE_LIBS$])
m4trace:configure.ac:9661: -1- PKG_CHECK_MODULES([LIBXSLT], [libxslt])
m4trace:configure.ac:9661: -1- m4_pattern_allow([^LIBXSLT_CFLAGS$])
m4trace:configure.ac:9661: -1- m4_pattern_allow([^LIBXSLT_LIBS$])
m4trace:configure.ac:9661: -1- PKG_CHECK_EXISTS([libxslt], [pkg_cv_[]LIBXSLT_CFLAGS=`$PKG_CONFIG --[]cflags "libxslt" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9661: -1- PKG_CHECK_EXISTS([libxslt], [pkg_cv_[]LIBXSLT_LIBS=`$PKG_CONFIG --[]libs "libxslt" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9661: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9665: -1- PKG_CHECK_MODULES([LIBEXSLT], [libexslt])
m4trace:configure.ac:9665: -1- m4_pattern_allow([^LIBEXSLT_CFLAGS$])
m4trace:configure.ac:9665: -1- m4_pattern_allow([^LIBEXSLT_LIBS$])
m4trace:configure.ac:9665: -1- PKG_CHECK_EXISTS([libexslt], [pkg_cv_[]LIBEXSLT_CFLAGS=`$PKG_CONFIG --[]cflags "libexslt" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9665: -1- PKG_CHECK_EXISTS([libexslt], [pkg_cv_[]LIBEXSLT_LIBS=`$PKG_CONFIG --[]libs "libexslt" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9665: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9672: -1- m4_pattern_allow([^XSLTPROC$])
m4trace:configure.ac:9681: -1- m4_pattern_allow([^SYSTEM_LIBXSLT$])
m4trace:configure.ac:9685: -1- m4_pattern_allow([^SYSTEM_LIBXSLT_FOR_BUILD$])
m4trace:configure.ac:9687: -1- m4_pattern_allow([^LIBEXSLT_CFLAGS$])
m4trace:configure.ac:9688: -1- m4_pattern_allow([^LIBEXSLT_LIBS$])
m4trace:configure.ac:9689: -1- m4_pattern_allow([^LIBXSLT_CFLAGS$])
m4trace:configure.ac:9690: -1- m4_pattern_allow([^LIBXSLT_LIBS$])
m4trace:configure.ac:9691: -1- m4_pattern_allow([^XSLTPROC$])
m4trace:configure.ac:9711: -1- PKG_CHECK_MODULES([LIBXML], [libxml-2.0 >= 2.0])
m4trace:configure.ac:9711: -1- m4_pattern_allow([^LIBXML_CFLAGS$])
m4trace:configure.ac:9711: -1- m4_pattern_allow([^LIBXML_LIBS$])
m4trace:configure.ac:9711: -1- PKG_CHECK_EXISTS([libxml-2.0 >= 2.0], [pkg_cv_[]LIBXML_CFLAGS=`$PKG_CONFIG --[]cflags "libxml-2.0 >= 2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9711: -1- PKG_CHECK_EXISTS([libxml-2.0 >= 2.0], [pkg_cv_[]LIBXML_LIBS=`$PKG_CONFIG --[]libs "libxml-2.0 >= 2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:9711: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:9718: -1- m4_pattern_allow([^XMLLINT$])
m4trace:configure.ac:9739: -1- m4_pattern_allow([^SYSTEM_LIBXML$])
m4trace:configure.ac:9743: -1- m4_pattern_allow([^SYSTEM_LIBXML_FOR_BUILD$])
m4trace:configure.ac:9744: -1- m4_pattern_allow([^LIBXML_CFLAGS$])
m4trace:configure.ac:9745: -1- m4_pattern_allow([^LIBXML_LIBS$])
m4trace:configure.ac:9746: -1- m4_pattern_allow([^XMLLINT$])
m4trace:configure.ac:9763: -1- AM_PATH_PYTHON([3.3], [], [:])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:9763: -1- AM_PYTHON_CHECK_VERSION([$PYTHON], [3.3], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no])
			       AC_MSG_ERROR([Python interpreter is too old])])
m4trace:configure.ac:9763: -1- AM_RUN_LOG([$PYTHON -c "$prog"])
m4trace:configure.ac:9763: -1- AM_PYTHON_CHECK_VERSION([$am_cv_pathless_PYTHON], [3.3], [break])
m4trace:configure.ac:9763: -1- AM_RUN_LOG([$am_cv_pathless_PYTHON -c "$prog"])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^PYTHON_VERSION$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^PYTHON_PLATFORM$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^PYTHON_PREFIX$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^PYTHON_EXEC_PREFIX$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^pythondir$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^pkgpythondir$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^pyexecdir$])
m4trace:configure.ac:9763: -1- m4_pattern_allow([^pkgpyexecdir$])
m4trace:configure.ac:9805: -1- AM_PATH_PYTHON([3.3], [], [:])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:9805: -1- AM_PYTHON_CHECK_VERSION([$PYTHON], [3.3], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no])
			       AC_MSG_ERROR([Python interpreter is too old])])
m4trace:configure.ac:9805: -1- AM_RUN_LOG([$PYTHON -c "$prog"])
m4trace:configure.ac:9805: -1- AM_PYTHON_CHECK_VERSION([$am_cv_pathless_PYTHON], [3.3], [break])
m4trace:configure.ac:9805: -1- AM_RUN_LOG([$am_cv_pathless_PYTHON -c "$prog"])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^PYTHON_VERSION$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^PYTHON_PLATFORM$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^PYTHON_PREFIX$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^PYTHON_EXEC_PREFIX$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^pythondir$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^pkgpythondir$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^pyexecdir$])
m4trace:configure.ac:9805: -1- m4_pattern_allow([^pkgpyexecdir$])
m4trace:configure.ac:9852: -1- AM_PATH_PYTHON([3.3])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:9852: -1- AM_PYTHON_CHECK_VERSION([$PYTHON], [3.3], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no])
			       AC_MSG_ERROR([Python interpreter is too old])])
m4trace:configure.ac:9852: -1- AM_RUN_LOG([$PYTHON -c "$prog"])
m4trace:configure.ac:9852: -1- AM_PYTHON_CHECK_VERSION([$am_cv_pathless_PYTHON], [3.3], [break])
m4trace:configure.ac:9852: -1- AM_RUN_LOG([$am_cv_pathless_PYTHON -c "$prog"])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^PYTHON$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^PYTHON_VERSION$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^PYTHON_PLATFORM$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^PYTHON_PREFIX$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^PYTHON_EXEC_PREFIX$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^pythondir$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^pkgpythondir$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^pyexecdir$])
m4trace:configure.ac:9852: -1- m4_pattern_allow([^pkgpyexecdir$])
m4trace:configure.ac:9940: -1- m4_pattern_allow([^PYTHON_VERSION_STRING$])
m4trace:configure.ac:9988: -1- m4_pattern_allow([^DISABLE_PYTHON$])
m4trace:configure.ac:9989: -1- m4_pattern_allow([^SYSTEM_PYTHON$])
m4trace:configure.ac:9990: -1- m4_pattern_allow([^PYTHON_CFLAGS$])
m4trace:configure.ac:9991: -1- m4_pattern_allow([^PYTHON_FOR_BUILD$])
m4trace:configure.ac:9992: -1- m4_pattern_allow([^PYTHON_LIBS$])
m4trace:configure.ac:9993: -1- m4_pattern_allow([^PYTHON_VERSION$])
m4trace:configure.ac:9994: -1- m4_pattern_allow([^PYTHON_VERSION_MAJOR$])
m4trace:configure.ac:9995: -1- m4_pattern_allow([^PYTHON_VERSION_MINOR$])
m4trace:configure.ac:10008: -1- m4_pattern_allow([^ENABLE_LIBRELOGO$])
m4trace:configure.ac:10012: -1- m4_pattern_allow([^ENABLE_LIBRELOGO$])
m4trace:configure.ac:10026: -1- m4_pattern_allow([^ENABLE_MARIADBC$])
m4trace:configure.ac:10027: -1- m4_pattern_allow([^MARIADBC_MAJOR$])
m4trace:configure.ac:10028: -1- m4_pattern_allow([^MARIADBC_MINOR$])
m4trace:configure.ac:10029: -1- m4_pattern_allow([^MARIADBC_MICRO$])
m4trace:configure.ac:10041: -1- m4_pattern_allow([^MARIADBCONFIG$])
m4trace:configure.ac:10109: -1- m4_pattern_allow([^SYSTEM_MARIADB_CONNECTOR_C$])
m4trace:configure.ac:10110: -1- m4_pattern_allow([^MARIADB_CFLAGS$])
m4trace:configure.ac:10111: -1- m4_pattern_allow([^MARIADB_LIBS$])
m4trace:configure.ac:10112: -1- m4_pattern_allow([^LIBMARIADB$])
m4trace:configure.ac:10113: -1- m4_pattern_allow([^LIBMARIADB_PATH$])
m4trace:configure.ac:10114: -1- m4_pattern_allow([^BUNDLE_MARIADB_CONNECTOR_C$])
m4trace:configure.ac:10178: -1- m4_pattern_allow([^SYSTEM_HSQLDB$])
m4trace:configure.ac:10179: -1- m4_pattern_allow([^HSQLDB_JAR$])
m4trace:configure.ac:10206: -1- m4_pattern_allow([^PGCONFIG$])
m4trace:configure.ac:10211: -1- PKG_CHECK_MODULES([POSTGRESQL], [libpq], [
              POSTGRESQL_INC=$POSTGRESQL_CFLAGS
              POSTGRESQL_LIB=$POSTGRESQL_LIBS
            ], [
              AC_MSG_ERROR([pg_config or 'pkg-config libpq' needed; set PGCONFIG if not in PATH])
            ])
m4trace:configure.ac:10211: -1- m4_pattern_allow([^POSTGRESQL_CFLAGS$])
m4trace:configure.ac:10211: -1- m4_pattern_allow([^POSTGRESQL_LIBS$])
m4trace:configure.ac:10211: -1- PKG_CHECK_EXISTS([libpq], [pkg_cv_[]POSTGRESQL_CFLAGS=`$PKG_CONFIG --[]cflags "libpq" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10211: -1- PKG_CHECK_EXISTS([libpq], [pkg_cv_[]POSTGRESQL_LIBS=`$PKG_CONFIG --[]libs "libpq" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10211: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10336: -1- m4_pattern_allow([^WITH_KRB5$])
m4trace:configure.ac:10337: -1- m4_pattern_allow([^WITH_GSSAPI$])
m4trace:configure.ac:10338: -1- m4_pattern_allow([^GSSAPI_LIBS$])
m4trace:configure.ac:10339: -1- m4_pattern_allow([^KRB5_LIBS$])
m4trace:configure.ac:10340: -1- m4_pattern_allow([^BUILD_POSTGRESQL_SDBC$])
m4trace:configure.ac:10341: -1- m4_pattern_allow([^SYSTEM_POSTGRESQL$])
m4trace:configure.ac:10342: -1- m4_pattern_allow([^POSTGRESQL_INC$])
m4trace:configure.ac:10343: -1- m4_pattern_allow([^POSTGRESQL_LIB$])
m4trace:configure.ac:10359: -1- m4_pattern_allow([^FIREBIRDCONFIG$])
m4trace:configure.ac:10362: -1- PKG_CHECK_MODULES([FIREBIRD], [fbclient >= 3], [FIREBIRD_PKGNAME=fbclient], [
                PKG_CHECK_MODULES([FIREBIRD], [fbembed], [FIREBIRD_PKGNAME=fbembed])
            ])
m4trace:configure.ac:10362: -1- m4_pattern_allow([^FIREBIRD_CFLAGS$])
m4trace:configure.ac:10362: -1- m4_pattern_allow([^FIREBIRD_LIBS$])
m4trace:configure.ac:10362: -1- PKG_CHECK_EXISTS([fbclient >= 3], [pkg_cv_[]FIREBIRD_CFLAGS=`$PKG_CONFIG --[]cflags "fbclient >= 3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10362: -1- PKG_CHECK_EXISTS([fbclient >= 3], [pkg_cv_[]FIREBIRD_LIBS=`$PKG_CONFIG --[]libs "fbclient >= 3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10362: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10362: -1- PKG_CHECK_MODULES([FIREBIRD], [fbembed], [FIREBIRD_PKGNAME=fbembed])
m4trace:configure.ac:10362: -1- m4_pattern_allow([^FIREBIRD_CFLAGS$])
m4trace:configure.ac:10362: -1- m4_pattern_allow([^FIREBIRD_LIBS$])
m4trace:configure.ac:10362: -1- PKG_CHECK_EXISTS([fbembed], [pkg_cv_[]FIREBIRD_CFLAGS=`$PKG_CONFIG --[]cflags "fbembed" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10362: -1- PKG_CHECK_EXISTS([fbembed], [pkg_cv_[]FIREBIRD_LIBS=`$PKG_CONFIG --[]libs "fbembed" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10362: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10362: -1- PKG_CHECK_MODULES([FIREBIRD], [fbembed], [FIREBIRD_PKGNAME=fbembed])
m4trace:configure.ac:10362: -1- m4_pattern_allow([^FIREBIRD_CFLAGS$])
m4trace:configure.ac:10362: -1- m4_pattern_allow([^FIREBIRD_LIBS$])
m4trace:configure.ac:10362: -1- PKG_CHECK_EXISTS([fbembed], [pkg_cv_[]FIREBIRD_CFLAGS=`$PKG_CONFIG --[]cflags "fbembed" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10362: -1- PKG_CHECK_EXISTS([fbembed], [pkg_cv_[]FIREBIRD_LIBS=`$PKG_CONFIG --[]libs "fbembed" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10362: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10396: -1- m4_pattern_allow([^ENABLE_FIREBIRD_SDBC$])
m4trace:configure.ac:10408: -1- libo_CHECK_SYSTEM_MODULE([libatomic_ops], [LIBATOMIC_OPS], [atomic_ops >= 0.7.2])
m4trace:configure.ac:10408: -1- PKG_CHECK_MODULES([LIBATOMIC_OPS], [atomic_ops >= 0.7.2])
m4trace:configure.ac:10408: -1- m4_pattern_allow([^LIBATOMIC_OPS_CFLAGS$])
m4trace:configure.ac:10408: -1- m4_pattern_allow([^LIBATOMIC_OPS_LIBS$])
m4trace:configure.ac:10408: -1- PKG_CHECK_EXISTS([atomic_ops >= 0.7.2], [pkg_cv_[]LIBATOMIC_OPS_CFLAGS=`$PKG_CONFIG --[]cflags "atomic_ops >= 0.7.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10408: -1- PKG_CHECK_EXISTS([atomic_ops >= 0.7.2], [pkg_cv_[]LIBATOMIC_OPS_LIBS=`$PKG_CONFIG --[]libs "atomic_ops >= 0.7.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10408: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10408: -1- m4_pattern_allow([^ENABLE_LIBATOMIC_OPS$])
m4trace:configure.ac:10408: -1- m4_pattern_allow([^SYSTEM_LIBATOMIC_OPS$])
m4trace:configure.ac:10408: -1- m4_pattern_allow([^LIBATOMIC_OPS_CFLAGS$])
m4trace:configure.ac:10408: -1- m4_pattern_allow([^LIBATOMIC_OPS_LIBS$])
m4trace:configure.ac:10411: -1- m4_pattern_allow([^HAVE_ATOMIC_OPS_H$])
m4trace:configure.ac:10442: -1- m4_pattern_allow([^ENABLE_FIREBIRD_SDBC$])
m4trace:configure.ac:10445: -1- m4_pattern_allow([^ENABLE_FIREBIRD_SDBC$])
m4trace:configure.ac:10446: -1- m4_pattern_allow([^SYSTEM_LIBATOMIC_OPS$])
m4trace:configure.ac:10447: -1- m4_pattern_allow([^LIBATOMIC_OPS_CFLAGS$])
m4trace:configure.ac:10448: -1- m4_pattern_allow([^LIBATOMIC_OPS_LIBS$])
m4trace:configure.ac:10449: -1- m4_pattern_allow([^SYSTEM_FIREBIRD$])
m4trace:configure.ac:10450: -1- m4_pattern_allow([^FIREBIRD_CFLAGS$])
m4trace:configure.ac:10451: -1- m4_pattern_allow([^FIREBIRD_LIBS$])
m4trace:configure.ac:10452: -1- m4_pattern_allow([^SYSTEM_LIBTOMMATH$])
m4trace:configure.ac:10453: -1- m4_pattern_allow([^LIBTOMMATH_CFLAGS$])
m4trace:configure.ac:10454: -1- m4_pattern_allow([^LIBTOMMATH_LIBS$])
m4trace:configure.ac:10459: -1- libo_CHECK_SYSTEM_MODULE([curl], [CURL], [libcurl >= 7.68.0], [enabled])
m4trace:configure.ac:10459: -1- PKG_CHECK_MODULES([CURL], [libcurl >= 7.68.0])
m4trace:configure.ac:10459: -1- m4_pattern_allow([^CURL_CFLAGS$])
m4trace:configure.ac:10459: -1- m4_pattern_allow([^CURL_LIBS$])
m4trace:configure.ac:10459: -1- PKG_CHECK_EXISTS([libcurl >= 7.68.0], [pkg_cv_[]CURL_CFLAGS=`$PKG_CONFIG --[]cflags "libcurl >= 7.68.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10459: -1- PKG_CHECK_EXISTS([libcurl >= 7.68.0], [pkg_cv_[]CURL_LIBS=`$PKG_CONFIG --[]libs "libcurl >= 7.68.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10459: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10459: -1- m4_pattern_allow([^ENABLE_CURL$])
m4trace:configure.ac:10459: -1- m4_pattern_allow([^SYSTEM_CURL$])
m4trace:configure.ac:10459: -1- m4_pattern_allow([^CURL_CFLAGS$])
m4trace:configure.ac:10459: -1- m4_pattern_allow([^CURL_LIBS$])
m4trace:configure.ac:10468: -1- AX_BOOST_BASE([1.66], [], [AC_MSG_ERROR([no suitable Boost found])])
m4trace:configure.ac:10468: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:10468: -1- m4_pattern_allow([^BOOST_LDFLAGS$])
m4trace:configure.ac:10468: -1- m4_pattern_allow([^HAVE_BOOST$])
m4trace:configure.ac:10469: -1- AX_BOOST_DATE_TIME
m4trace:configure.ac:10469: -1- m4_pattern_allow([^HAVE_BOOST_DATE_TIME$])
m4trace:configure.ac:10469: -1- m4_pattern_allow([^BOOST_DATE_TIME_LIB$])
m4trace:configure.ac:10469: -1- m4_pattern_allow([^BOOST_DATE_TIME_LIB$])
m4trace:configure.ac:10469: -1- m4_pattern_allow([^BOOST_DATE_TIME_LIB$])
m4trace:configure.ac:10470: -1- AX_BOOST_FILESYSTEM
m4trace:configure.ac:10470: -1- m4_pattern_allow([^HAVE_BOOST_FILESYSTEM$])
m4trace:configure.ac:10470: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:10470: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:10470: -1- m4_pattern_allow([^BOOST_FILESYSTEM_LIB$])
m4trace:configure.ac:10471: -1- AX_BOOST_IOSTREAMS
m4trace:configure.ac:10471: -1- m4_pattern_allow([^HAVE_BOOST_IOSTREAMS$])
m4trace:configure.ac:10471: -1- m4_pattern_allow([^BOOST_IOSTREAMS_LIB$])
m4trace:configure.ac:10471: -1- m4_pattern_allow([^BOOST_IOSTREAMS_LIB$])
m4trace:configure.ac:10471: -1- m4_pattern_allow([^BOOST_IOSTREAMS_LIB$])
m4trace:configure.ac:10472: -1- AX_BOOST_LOCALE
m4trace:configure.ac:10472: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:10472: -1- m4_pattern_allow([^HAVE_BOOST_LOCALE$])
m4trace:configure.ac:10472: -1- m4_pattern_allow([^BOOST_LOCALE_LIB$])
m4trace:configure.ac:10472: -1- m4_pattern_allow([^BOOST_LOCALE_LIB$])
m4trace:configure.ac:10472: -1- m4_pattern_allow([^BOOST_LOCALE_LIB$])
m4trace:configure.ac:10496: -1- m4_pattern_allow([^SYSTEM_BOOST$])
m4trace:configure.ac:10502: -1- libo_CHECK_SYSTEM_MODULE([mdds], [MDDS], [mdds-2.1 >= 2.1.0])
m4trace:configure.ac:10502: -1- PKG_CHECK_MODULES([MDDS], [mdds-2.1 >= 2.1.0])
m4trace:configure.ac:10502: -1- m4_pattern_allow([^MDDS_CFLAGS$])
m4trace:configure.ac:10502: -1- m4_pattern_allow([^MDDS_LIBS$])
m4trace:configure.ac:10502: -1- PKG_CHECK_EXISTS([mdds-2.1 >= 2.1.0], [pkg_cv_[]MDDS_CFLAGS=`$PKG_CONFIG --[]cflags "mdds-2.1 >= 2.1.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10502: -1- PKG_CHECK_EXISTS([mdds-2.1 >= 2.1.0], [pkg_cv_[]MDDS_LIBS=`$PKG_CONFIG --[]libs "mdds-2.1 >= 2.1.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10502: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10502: -1- m4_pattern_allow([^ENABLE_MDDS$])
m4trace:configure.ac:10502: -1- m4_pattern_allow([^SYSTEM_MDDS$])
m4trace:configure.ac:10502: -1- m4_pattern_allow([^MDDS_CFLAGS$])
m4trace:configure.ac:10502: -1- m4_pattern_allow([^MDDS_LIBS$])
m4trace:configure.ac:10525: -1- m4_pattern_allow([^SYSTEM_DRAGONBOX$])
m4trace:configure.ac:10526: -1- m4_pattern_allow([^DRAGONBOX_CFLAGS$])
m4trace:configure.ac:10544: -1- m4_pattern_allow([^SYSTEM_LIBFIXMATH$])
m4trace:configure.ac:10563: -1- m4_pattern_allow([^GLM_CFLAGS$])
m4trace:configure.ac:10564: -1- m4_pattern_allow([^SYSTEM_GLM$])
m4trace:configure.ac:10593: -1- m4_pattern_allow([^SYSTEM_ODBC_HEADERS$])
m4trace:configure.ac:10599: -1- libo_CHECK_SYSTEM_MODULE([nss], [NSS], [nss >= 3.9.3 nspr >= 4.8], [], [system-if-linux])
m4trace:configure.ac:10599: -1- PKG_CHECK_MODULES([NSS], [nss >= 3.9.3 nspr >= 4.8])
m4trace:configure.ac:10599: -1- m4_pattern_allow([^NSS_CFLAGS$])
m4trace:configure.ac:10599: -1- m4_pattern_allow([^NSS_LIBS$])
m4trace:configure.ac:10599: -1- PKG_CHECK_EXISTS([nss >= 3.9.3 nspr >= 4.8], [pkg_cv_[]NSS_CFLAGS=`$PKG_CONFIG --[]cflags "nss >= 3.9.3 nspr >= 4.8" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10599: -1- PKG_CHECK_EXISTS([nss >= 3.9.3 nspr >= 4.8], [pkg_cv_[]NSS_LIBS=`$PKG_CONFIG --[]libs "nss >= 3.9.3 nspr >= 4.8" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10599: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10599: -1- m4_pattern_allow([^ENABLE_NSS$])
m4trace:configure.ac:10599: -1- m4_pattern_allow([^SYSTEM_NSS$])
m4trace:configure.ac:10599: -1- m4_pattern_allow([^NSS_CFLAGS$])
m4trace:configure.ac:10599: -1- m4_pattern_allow([^NSS_LIBS$])
m4trace:configure.ac:10600: -1- m4_pattern_allow([^HAVE_FEATURE_NSS$])
m4trace:configure.ac:10605: -1- m4_pattern_allow([^ENABLE_NSS$])
m4trace:configure.ac:10633: -1- m4_pattern_allow([^HAVE_LDAP_H$])
m4trace:configure.ac:10643: -1- m4_pattern_allow([^ENABLE_LDAP$])
m4trace:configure.ac:10644: -1- m4_pattern_allow([^SYSTEM_OPENLDAP$])
m4trace:configure.ac:10653: -1- m4_pattern_allow([^USE_TLS_OPENSSL$])
m4trace:configure.ac:10666: -1- m4_pattern_allow([^USE_TLS_NSS$])
m4trace:configure.ac:10684: -1- m4_pattern_allow([^USE_TLS_NSS$])
m4trace:configure.ac:10688: -1- m4_pattern_allow([^TLS$])
m4trace:configure.ac:10713: -1- libo_CHECK_SYSTEM_MODULE([icu], [ICU], [icu-i18n >= 4.6])
m4trace:configure.ac:10713: -1- PKG_CHECK_MODULES([ICU], [icu-i18n >= 4.6])
m4trace:configure.ac:10713: -1- m4_pattern_allow([^ICU_CFLAGS$])
m4trace:configure.ac:10713: -1- m4_pattern_allow([^ICU_LIBS$])
m4trace:configure.ac:10713: -1- PKG_CHECK_EXISTS([icu-i18n >= 4.6], [pkg_cv_[]ICU_CFLAGS=`$PKG_CONFIG --[]cflags "icu-i18n >= 4.6" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10713: -1- PKG_CHECK_EXISTS([icu-i18n >= 4.6], [pkg_cv_[]ICU_LIBS=`$PKG_CONFIG --[]libs "icu-i18n >= 4.6" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10713: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10713: -1- m4_pattern_allow([^ENABLE_ICU$])
m4trace:configure.ac:10713: -1- m4_pattern_allow([^SYSTEM_ICU$])
m4trace:configure.ac:10713: -1- m4_pattern_allow([^ICU_CFLAGS$])
m4trace:configure.ac:10713: -1- m4_pattern_allow([^ICU_LIBS$])
m4trace:configure.ac:10732: -1- m4_pattern_allow([^SYSTEM_GENBRK$])
m4trace:configure.ac:10736: -1- m4_pattern_allow([^SYSTEM_GENCCODE$])
m4trace:configure.ac:10740: -1- m4_pattern_allow([^SYSTEM_GENCMN$])
m4trace:configure.ac:10760: -1- m4_pattern_allow([^SYSTEM_GENBRK$])
m4trace:configure.ac:10761: -1- m4_pattern_allow([^SYSTEM_GENCCODE$])
m4trace:configure.ac:10762: -1- m4_pattern_allow([^SYSTEM_GENCMN$])
m4trace:configure.ac:10763: -1- m4_pattern_allow([^ICU_MAJOR$])
m4trace:configure.ac:10764: -1- m4_pattern_allow([^ICU_MINOR$])
m4trace:configure.ac:10765: -1- m4_pattern_allow([^ICU_RECLASSIFIED_PREPEND_SET_EMPTY$])
m4trace:configure.ac:10766: -1- m4_pattern_allow([^ICU_RECLASSIFIED_CONDITIONAL_JAPANESE_STARTER$])
m4trace:configure.ac:10767: -1- m4_pattern_allow([^ICU_RECLASSIFIED_HEBREW_LETTER$])
m4trace:configure.ac:10768: -1- m4_pattern_allow([^ICU_UCHAR_TYPE$])
m4trace:configure.ac:10780: -1- m4_pattern_allow([^ENABLE_BREAKPAD$])
m4trace:configure.ac:10781: -1- m4_pattern_allow([^HAVE_FEATURE_BREAKPAD$])
m4trace:configure.ac:10798: -1- m4_pattern_allow([^BREAKPAD_SYMBOL_CONFIG$])
m4trace:configure.ac:10801: -1- m4_pattern_allow([^BREAKPAD_SYMBOL_CONFIG$])
m4trace:configure.ac:10803: -1- m4_pattern_allow([^ENABLE_BREAKPAD$])
m4trace:configure.ac:10804: -1- m4_pattern_allow([^DEFAULT_CRASHDUMP_VALUE$])
m4trace:configure.ac:10809: -1- libo_CHECK_SYSTEM_MODULE([orcus], [ORCUS], [liborcus-0.18 >= 0.18.0])
m4trace:configure.ac:10809: -1- PKG_CHECK_MODULES([ORCUS], [liborcus-0.18 >= 0.18.0])
m4trace:configure.ac:10809: -1- m4_pattern_allow([^ORCUS_CFLAGS$])
m4trace:configure.ac:10809: -1- m4_pattern_allow([^ORCUS_LIBS$])
m4trace:configure.ac:10809: -1- PKG_CHECK_EXISTS([liborcus-0.18 >= 0.18.0], [pkg_cv_[]ORCUS_CFLAGS=`$PKG_CONFIG --[]cflags "liborcus-0.18 >= 0.18.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10809: -1- PKG_CHECK_EXISTS([liborcus-0.18 >= 0.18.0], [pkg_cv_[]ORCUS_LIBS=`$PKG_CONFIG --[]libs "liborcus-0.18 >= 0.18.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10809: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10809: -1- m4_pattern_allow([^ENABLE_ORCUS$])
m4trace:configure.ac:10809: -1- m4_pattern_allow([^SYSTEM_ORCUS$])
m4trace:configure.ac:10809: -1- m4_pattern_allow([^ORCUS_CFLAGS$])
m4trace:configure.ac:10809: -1- m4_pattern_allow([^ORCUS_LIBS$])
m4trace:configure.ac:10816: -1- AX_BOOST_SYSTEM
m4trace:configure.ac:10816: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:10816: -1- m4_pattern_allow([^HAVE_BOOST_SYSTEM$])
m4trace:configure.ac:10816: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:10816: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:10816: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:10821: -1- m4_pattern_allow([^BOOST_SYSTEM_LIB$])
m4trace:configure.ac:10822: -1- m4_pattern_allow([^SYSTEM_LIBORCUS$])
m4trace:configure.ac:10841: -1- libo_CHECK_SYSTEM_MODULE([graphite], [GRAPHITE], [graphite2 >= 0.9.3])
m4trace:configure.ac:10841: -1- PKG_CHECK_MODULES([GRAPHITE], [graphite2 >= 0.9.3])
m4trace:configure.ac:10841: -1- m4_pattern_allow([^GRAPHITE_CFLAGS$])
m4trace:configure.ac:10841: -1- m4_pattern_allow([^GRAPHITE_LIBS$])
m4trace:configure.ac:10841: -1- PKG_CHECK_EXISTS([graphite2 >= 0.9.3], [pkg_cv_[]GRAPHITE_CFLAGS=`$PKG_CONFIG --[]cflags "graphite2 >= 0.9.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10841: -1- PKG_CHECK_EXISTS([graphite2 >= 0.9.3], [pkg_cv_[]GRAPHITE_LIBS=`$PKG_CONFIG --[]libs "graphite2 >= 0.9.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10841: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10841: -1- m4_pattern_allow([^ENABLE_GRAPHITE$])
m4trace:configure.ac:10841: -1- m4_pattern_allow([^SYSTEM_GRAPHITE$])
m4trace:configure.ac:10841: -1- m4_pattern_allow([^GRAPHITE_CFLAGS$])
m4trace:configure.ac:10841: -1- m4_pattern_allow([^GRAPHITE_LIBS$])
m4trace:configure.ac:10842: -1- libo_CHECK_SYSTEM_MODULE([harfbuzz], [HARFBUZZ], [harfbuzz-icu >= $harfbuzz_required_version])
m4trace:configure.ac:10842: -1- PKG_CHECK_MODULES([HARFBUZZ], [harfbuzz-icu >= $harfbuzz_required_version])
m4trace:configure.ac:10842: -1- m4_pattern_allow([^HARFBUZZ_CFLAGS$])
m4trace:configure.ac:10842: -1- m4_pattern_allow([^HARFBUZZ_LIBS$])
m4trace:configure.ac:10842: -1- PKG_CHECK_EXISTS([harfbuzz-icu >= $harfbuzz_required_version], [pkg_cv_[]HARFBUZZ_CFLAGS=`$PKG_CONFIG --[]cflags "harfbuzz-icu >= $harfbuzz_required_version" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10842: -1- PKG_CHECK_EXISTS([harfbuzz-icu >= $harfbuzz_required_version], [pkg_cv_[]HARFBUZZ_LIBS=`$PKG_CONFIG --[]libs "harfbuzz-icu >= $harfbuzz_required_version" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10842: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10842: -1- m4_pattern_allow([^ENABLE_HARFBUZZ$])
m4trace:configure.ac:10842: -1- m4_pattern_allow([^SYSTEM_HARFBUZZ$])
m4trace:configure.ac:10842: -1- m4_pattern_allow([^HARFBUZZ_CFLAGS$])
m4trace:configure.ac:10842: -1- m4_pattern_allow([^HARFBUZZ_LIBS$])
m4trace:configure.ac:10868: -1- m4_pattern_allow([^XMKMF$])
m4trace:configure.ac:10869: -1- m4_pattern_allow([^X_DISPLAY_MISSING$])
m4trace:configure.ac:10869: -1- m4_pattern_allow([^X_CFLAGS$])
m4trace:configure.ac:10869: -1- m4_pattern_allow([^X_PRE_LIBS$])
m4trace:configure.ac:10869: -1- m4_pattern_allow([^X_LIBS$])
m4trace:configure.ac:10869: -1- m4_pattern_allow([^X_EXTRA_LIBS$])
m4trace:configure.ac:10890: -1- m4_pattern_allow([^HAVE_X11_EXTENSIONS_SHAPE_H$])
m4trace:configure.ac:10894: -1- m4_pattern_allow([^HAVE_X11_ICE_ICELIB_H$])
m4trace:configure.ac:10897: -1- m4_pattern_allow([^HAVE_X11_SM_SMLIB_H$])
m4trace:configure.ac:10904: -1- m4_pattern_allow([^HAVE_X11_INTRINSIC_H$])
m4trace:configure.ac:10913: -1- PKG_CHECK_MODULES([XRENDER], [xrender])
m4trace:configure.ac:10913: -1- m4_pattern_allow([^XRENDER_CFLAGS$])
m4trace:configure.ac:10913: -1- m4_pattern_allow([^XRENDER_LIBS$])
m4trace:configure.ac:10913: -1- PKG_CHECK_EXISTS([xrender], [pkg_cv_[]XRENDER_CFLAGS=`$PKG_CONFIG --[]cflags "xrender" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10913: -1- PKG_CHECK_EXISTS([xrender], [pkg_cv_[]XRENDER_LIBS=`$PKG_CONFIG --[]libs "xrender" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10913: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10924: -1- m4_pattern_allow([^XRENDER_CFLAGS$])
m4trace:configure.ac:10925: -1- m4_pattern_allow([^XRENDER_LIBS$])
m4trace:configure.ac:10933: -1- PKG_CHECK_MODULES([XRANDR], [xrandr >= 1.2], [ENABLE_RANDR="TRUE"], [ENABLE_RANDR=""])
m4trace:configure.ac:10933: -1- m4_pattern_allow([^XRANDR_CFLAGS$])
m4trace:configure.ac:10933: -1- m4_pattern_allow([^XRANDR_LIBS$])
m4trace:configure.ac:10933: -1- PKG_CHECK_EXISTS([xrandr >= 1.2], [pkg_cv_[]XRANDR_CFLAGS=`$PKG_CONFIG --[]cflags "xrandr >= 1.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10933: -1- PKG_CHECK_EXISTS([xrandr >= 1.2], [pkg_cv_[]XRANDR_LIBS=`$PKG_CONFIG --[]libs "xrandr >= 1.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:10933: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:10950: -1- m4_pattern_allow([^XRANDR_CFLAGS$])
m4trace:configure.ac:10951: -1- m4_pattern_allow([^XRANDR_LIBS$])
m4trace:configure.ac:10952: -1- m4_pattern_allow([^ENABLE_RANDR$])
m4trace:configure.ac:10973: -1- m4_pattern_allow([^WITH_WEBDAV$])
m4trace:configure.ac:10996: -1- m4_pattern_allow([^DISABLE_CVE_TESTS$])
m4trace:configure.ac:11016: -1- libo_CHECK_SYSTEM_MODULE([openssl], [OPENSSL], [openssl])
m4trace:configure.ac:11016: -1- PKG_CHECK_MODULES([OPENSSL], [openssl])
m4trace:configure.ac:11016: -1- m4_pattern_allow([^OPENSSL_CFLAGS$])
m4trace:configure.ac:11016: -1- m4_pattern_allow([^OPENSSL_LIBS$])
m4trace:configure.ac:11016: -1- PKG_CHECK_EXISTS([openssl], [pkg_cv_[]OPENSSL_CFLAGS=`$PKG_CONFIG --[]cflags "openssl" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11016: -1- PKG_CHECK_EXISTS([openssl], [pkg_cv_[]OPENSSL_LIBS=`$PKG_CONFIG --[]libs "openssl" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11016: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11016: -1- m4_pattern_allow([^ENABLE_OPENSSL$])
m4trace:configure.ac:11016: -1- m4_pattern_allow([^SYSTEM_OPENSSL$])
m4trace:configure.ac:11016: -1- m4_pattern_allow([^OPENSSL_CFLAGS$])
m4trace:configure.ac:11016: -1- m4_pattern_allow([^OPENSSL_LIBS$])
m4trace:configure.ac:11024: -1- libo_CHECK_SYSTEM_MODULE([openssl], [OPENSSL], [openssl])
m4trace:configure.ac:11024: -1- PKG_CHECK_MODULES([OPENSSL], [openssl])
m4trace:configure.ac:11024: -1- m4_pattern_allow([^OPENSSL_CFLAGS$])
m4trace:configure.ac:11024: -1- m4_pattern_allow([^OPENSSL_LIBS$])
m4trace:configure.ac:11024: -1- PKG_CHECK_EXISTS([openssl], [pkg_cv_[]OPENSSL_CFLAGS=`$PKG_CONFIG --[]cflags "openssl" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11024: -1- PKG_CHECK_EXISTS([openssl], [pkg_cv_[]OPENSSL_LIBS=`$PKG_CONFIG --[]libs "openssl" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11024: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11024: -1- m4_pattern_allow([^ENABLE_OPENSSL$])
m4trace:configure.ac:11024: -1- m4_pattern_allow([^SYSTEM_OPENSSL$])
m4trace:configure.ac:11024: -1- m4_pattern_allow([^OPENSSL_CFLAGS$])
m4trace:configure.ac:11024: -1- m4_pattern_allow([^OPENSSL_LIBS$])
m4trace:configure.ac:11042: -1- m4_pattern_allow([^ENABLE_OPENSSL$])
m4trace:configure.ac:11060: -1- m4_pattern_allow([^ENABLE_CIPHER_OPENSSL_BACKEND$])
m4trace:configure.ac:11069: -1- m4_pattern_allow([^USE_CRYPTO_MSCAPI$])
m4trace:configure.ac:11072: -1- m4_pattern_allow([^USE_CRYPTO_NSS$])
m4trace:configure.ac:11081: -1- libo_CHECK_SYSTEM_MODULE([redland], [REDLAND], [redland >= 1.0.8 raptor2 >= 2.0.7])
m4trace:configure.ac:11081: -1- PKG_CHECK_MODULES([REDLAND], [redland >= 1.0.8 raptor2 >= 2.0.7])
m4trace:configure.ac:11081: -1- m4_pattern_allow([^REDLAND_CFLAGS$])
m4trace:configure.ac:11081: -1- m4_pattern_allow([^REDLAND_LIBS$])
m4trace:configure.ac:11081: -1- PKG_CHECK_EXISTS([redland >= 1.0.8 raptor2 >= 2.0.7], [pkg_cv_[]REDLAND_CFLAGS=`$PKG_CONFIG --[]cflags "redland >= 1.0.8 raptor2 >= 2.0.7" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11081: -1- PKG_CHECK_EXISTS([redland >= 1.0.8 raptor2 >= 2.0.7], [pkg_cv_[]REDLAND_LIBS=`$PKG_CONFIG --[]libs "redland >= 1.0.8 raptor2 >= 2.0.7" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11081: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11081: -1- m4_pattern_allow([^ENABLE_REDLAND$])
m4trace:configure.ac:11081: -1- m4_pattern_allow([^SYSTEM_REDLAND$])
m4trace:configure.ac:11081: -1- m4_pattern_allow([^REDLAND_CFLAGS$])
m4trace:configure.ac:11081: -1- m4_pattern_allow([^REDLAND_LIBS$])
m4trace:configure.ac:11090: -1- m4_pattern_allow([^RAPTOR_MAJOR$])
m4trace:configure.ac:11091: -1- m4_pattern_allow([^RASQAL_MAJOR$])
m4trace:configure.ac:11092: -1- m4_pattern_allow([^REDLAND_MAJOR$])
m4trace:configure.ac:11102: -1- PKG_CHECK_MODULES([HUNSPELL], [hunspell], [HUNSPELL_PC="TRUE"], [HUNSPELL_PC="" ])
m4trace:configure.ac:11102: -1- m4_pattern_allow([^HUNSPELL_CFLAGS$])
m4trace:configure.ac:11102: -1- m4_pattern_allow([^HUNSPELL_LIBS$])
m4trace:configure.ac:11102: -1- PKG_CHECK_EXISTS([hunspell], [pkg_cv_[]HUNSPELL_CFLAGS=`$PKG_CONFIG --[]cflags "hunspell" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11102: -1- PKG_CHECK_EXISTS([hunspell], [pkg_cv_[]HUNSPELL_LIBS=`$PKG_CONFIG --[]libs "hunspell" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11102: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11128: -1- m4_pattern_allow([^SYSTEM_HUNSPELL$])
m4trace:configure.ac:11129: -1- m4_pattern_allow([^HUNSPELL_CFLAGS$])
m4trace:configure.ac:11130: -1- m4_pattern_allow([^HUNSPELL_LIBS$])
m4trace:configure.ac:11186: -1- m4_pattern_allow([^ENABLE_ZXING$])
m4trace:configure.ac:11189: -1- m4_pattern_allow([^SYSTEM_ZXING$])
m4trace:configure.ac:11190: -1- m4_pattern_allow([^ENABLE_ZXING$])
m4trace:configure.ac:11191: -1- m4_pattern_allow([^ZXING_CFLAGS$])
m4trace:configure.ac:11192: -1- m4_pattern_allow([^ZXING_LIBS$])
m4trace:configure.ac:11206: -1- m4_pattern_allow([^BOX2D_HEADER$])
m4trace:configure.ac:11212: -1- m4_pattern_allow([^BOX2D_HEADER$])
m4trace:configure.ac:11226: -1- m4_pattern_allow([^SYSTEM_BOX2D$])
m4trace:configure.ac:11227: -1- m4_pattern_allow([^BOX2D_CFLAGS$])
m4trace:configure.ac:11228: -1- m4_pattern_allow([^BOX2D_LIBS$])
m4trace:configure.ac:11262: -1- m4_pattern_allow([^SYSTEM_HYPH$])
m4trace:configure.ac:11263: -1- m4_pattern_allow([^HYPHEN_LIB$])
m4trace:configure.ac:11273: -1- PKG_CHECK_MODULES([MYTHES], [mythes], [MYTHES_PKGCONFIG=yes], [MYTHES_PKGCONFIG=no])
m4trace:configure.ac:11273: -1- m4_pattern_allow([^MYTHES_CFLAGS$])
m4trace:configure.ac:11273: -1- m4_pattern_allow([^MYTHES_LIBS$])
m4trace:configure.ac:11273: -1- PKG_CHECK_EXISTS([mythes], [pkg_cv_[]MYTHES_CFLAGS=`$PKG_CONFIG --[]cflags "mythes" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11273: -1- PKG_CHECK_EXISTS([mythes], [pkg_cv_[]MYTHES_LIBS=`$PKG_CONFIG --[]libs "mythes" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11273: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11301: -1- m4_pattern_allow([^SYSTEM_MYTHES$])
m4trace:configure.ac:11302: -1- m4_pattern_allow([^MYTHES_CFLAGS$])
m4trace:configure.ac:11303: -1- m4_pattern_allow([^MYTHES_LIBS$])
m4trace:configure.ac:11316: -1- PKG_CHECK_MODULES([COINMP], [coinmp coinutils])
m4trace:configure.ac:11316: -1- m4_pattern_allow([^COINMP_CFLAGS$])
m4trace:configure.ac:11316: -1- m4_pattern_allow([^COINMP_LIBS$])
m4trace:configure.ac:11316: -1- PKG_CHECK_EXISTS([coinmp coinutils], [pkg_cv_[]COINMP_CFLAGS=`$PKG_CONFIG --[]cflags "coinmp coinutils" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11316: -1- PKG_CHECK_EXISTS([coinmp coinutils], [pkg_cv_[]COINMP_LIBS=`$PKG_CONFIG --[]libs "coinmp coinutils" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11316: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11325: -1- m4_pattern_allow([^ENABLE_COINMP$])
m4trace:configure.ac:11326: -1- m4_pattern_allow([^SYSTEM_COINMP$])
m4trace:configure.ac:11327: -1- m4_pattern_allow([^COINMP_CFLAGS$])
m4trace:configure.ac:11328: -1- m4_pattern_allow([^COINMP_LIBS$])
m4trace:configure.ac:11338: -1- m4_pattern_allow([^ENABLE_LPSOLVE$])
m4trace:configure.ac:11349: -1- m4_pattern_allow([^HAVE_LIBM$])
m4trace:configure.ac:11350: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:11360: -1- m4_pattern_allow([^SYSTEM_LPSOLVE$])
m4trace:configure.ac:11365: -1- libo_CHECK_SYSTEM_MODULE([libexttextcat], [LIBEXTTEXTCAT], [libexttextcat >= 3.4.1])
m4trace:configure.ac:11365: -1- PKG_CHECK_MODULES([LIBEXTTEXTCAT], [libexttextcat >= 3.4.1])
m4trace:configure.ac:11365: -1- m4_pattern_allow([^LIBEXTTEXTCAT_CFLAGS$])
m4trace:configure.ac:11365: -1- m4_pattern_allow([^LIBEXTTEXTCAT_LIBS$])
m4trace:configure.ac:11365: -1- PKG_CHECK_EXISTS([libexttextcat >= 3.4.1], [pkg_cv_[]LIBEXTTEXTCAT_CFLAGS=`$PKG_CONFIG --[]cflags "libexttextcat >= 3.4.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11365: -1- PKG_CHECK_EXISTS([libexttextcat >= 3.4.1], [pkg_cv_[]LIBEXTTEXTCAT_LIBS=`$PKG_CONFIG --[]libs "libexttextcat >= 3.4.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11365: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11365: -1- m4_pattern_allow([^ENABLE_LIBEXTTEXTCAT$])
m4trace:configure.ac:11365: -1- m4_pattern_allow([^SYSTEM_LIBEXTTEXTCAT$])
m4trace:configure.ac:11365: -1- m4_pattern_allow([^LIBEXTTEXTCAT_CFLAGS$])
m4trace:configure.ac:11365: -1- m4_pattern_allow([^LIBEXTTEXTCAT_LIBS$])
m4trace:configure.ac:11369: -1- m4_pattern_allow([^SYSTEM_LIBEXTTEXTCAT_DATA$])
m4trace:configure.ac:11374: -1- libo_CHECK_SYSTEM_MODULE([libnumbertext], [LIBNUMBERTEXT], [libnumbertext >= 1.0.6])
m4trace:configure.ac:11374: -1- PKG_CHECK_MODULES([LIBNUMBERTEXT], [libnumbertext >= 1.0.6])
m4trace:configure.ac:11374: -1- m4_pattern_allow([^LIBNUMBERTEXT_CFLAGS$])
m4trace:configure.ac:11374: -1- m4_pattern_allow([^LIBNUMBERTEXT_LIBS$])
m4trace:configure.ac:11374: -1- PKG_CHECK_EXISTS([libnumbertext >= 1.0.6], [pkg_cv_[]LIBNUMBERTEXT_CFLAGS=`$PKG_CONFIG --[]cflags "libnumbertext >= 1.0.6" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11374: -1- PKG_CHECK_EXISTS([libnumbertext >= 1.0.6], [pkg_cv_[]LIBNUMBERTEXT_LIBS=`$PKG_CONFIG --[]libs "libnumbertext >= 1.0.6" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11374: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11374: -1- m4_pattern_allow([^ENABLE_LIBNUMBERTEXT$])
m4trace:configure.ac:11374: -1- m4_pattern_allow([^SYSTEM_LIBNUMBERTEXT$])
m4trace:configure.ac:11374: -1- m4_pattern_allow([^LIBNUMBERTEXT_CFLAGS$])
m4trace:configure.ac:11374: -1- m4_pattern_allow([^LIBNUMBERTEXT_LIBS$])
m4trace:configure.ac:11381: -1- m4_pattern_allow([^SYSTEM_LIBNUMBERTEXT$])
m4trace:configure.ac:11382: -1- m4_pattern_allow([^SYSTEM_LIBNUMBERTEXT_DATA$])
m4trace:configure.ac:11404: -1- m4_pattern_allow([^UUIDGEN$])
m4trace:configure.ac:11406: -1- m4_pattern_allow([^UUIDGEN$])
m4trace:configure.ac:11415: -1- m4_pattern_allow([^BISON$])
m4trace:configure.ac:11440: -1- m4_pattern_allow([^BISON$])
m4trace:configure.ac:11442: -1- m4_pattern_allow([^FLEX$])
m4trace:configure.ac:11455: -1- m4_pattern_allow([^FLEX$])
m4trace:configure.ac:11457: -1- m4_pattern_allow([^DIFF$])
m4trace:configure.ac:11461: -1- m4_pattern_allow([^DIFF$])
m4trace:configure.ac:11463: -1- m4_pattern_allow([^UNIQ$])
m4trace:configure.ac:11467: -1- m4_pattern_allow([^UNIQ$])
m4trace:configure.ac:11472: -1- m4_pattern_allow([^PATCH$])
m4trace:configure.ac:11515: -1- m4_pattern_allow([^GNUCP$])
m4trace:configure.ac:11550: -1- m4_pattern_allow([^GNUPATCH$])
m4trace:configure.ac:11551: -1- m4_pattern_allow([^GNUCP$])
m4trace:configure.ac:11552: -1- m4_pattern_allow([^x_GNUCP$])
m4trace:configure.ac:11574: -1- m4_pattern_allow([^ML_EXE$])
m4trace:configure.ac:11579: -1- m4_pattern_allow([^ZIP$])
m4trace:configure.ac:11585: -1- m4_pattern_allow([^UNZIP$])
m4trace:configure.ac:11600: -1- m4_pattern_allow([^TOUCH$])
m4trace:configure.ac:11611: -1- libo_CHECK_SYSTEM_MODULE([epoxy], [EPOXY], [epoxy >= 1.2])
m4trace:configure.ac:11611: -1- PKG_CHECK_MODULES([EPOXY], [epoxy >= 1.2])
m4trace:configure.ac:11611: -1- m4_pattern_allow([^EPOXY_CFLAGS$])
m4trace:configure.ac:11611: -1- m4_pattern_allow([^EPOXY_LIBS$])
m4trace:configure.ac:11611: -1- PKG_CHECK_EXISTS([epoxy >= 1.2], [pkg_cv_[]EPOXY_CFLAGS=`$PKG_CONFIG --[]cflags "epoxy >= 1.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11611: -1- PKG_CHECK_EXISTS([epoxy >= 1.2], [pkg_cv_[]EPOXY_LIBS=`$PKG_CONFIG --[]libs "epoxy >= 1.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11611: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11611: -1- m4_pattern_allow([^ENABLE_EPOXY$])
m4trace:configure.ac:11611: -1- m4_pattern_allow([^SYSTEM_EPOXY$])
m4trace:configure.ac:11611: -1- m4_pattern_allow([^EPOXY_CFLAGS$])
m4trace:configure.ac:11611: -1- m4_pattern_allow([^EPOXY_LIBS$])
m4trace:configure.ac:11619: -1- m4_pattern_allow([^VCL_FLOAT_DEVICE_PIXEL$])
m4trace:configure.ac:11630: -1- libo_ENABLE_VCLPLUG([gen])
m4trace:configure.ac:11630: -1- m4_pattern_allow([^ENABLE_GEN$])
m4trace:configure.ac:11630: -1- m4_pattern_allow([^ENABLE_GEN$])
m4trace:configure.ac:11631: -1- libo_ENABLE_VCLPLUG([gtk3])
m4trace:configure.ac:11631: -1- m4_pattern_allow([^ENABLE_GTK3$])
m4trace:configure.ac:11631: -1- m4_pattern_allow([^ENABLE_GTK3$])
m4trace:configure.ac:11632: -1- libo_ENABLE_VCLPLUG([gtk3_kde5])
m4trace:configure.ac:11632: -1- m4_pattern_allow([^ENABLE_GTK3_KDE5$])
m4trace:configure.ac:11632: -1- m4_pattern_allow([^ENABLE_GTK3_KDE5$])
m4trace:configure.ac:11633: -1- libo_ENABLE_VCLPLUG([gtk4])
m4trace:configure.ac:11633: -1- m4_pattern_allow([^ENABLE_GTK4$])
m4trace:configure.ac:11633: -1- m4_pattern_allow([^ENABLE_GTK4$])
m4trace:configure.ac:11634: -1- libo_ENABLE_VCLPLUG([kf5])
m4trace:configure.ac:11634: -1- m4_pattern_allow([^ENABLE_KF5$])
m4trace:configure.ac:11634: -1- m4_pattern_allow([^ENABLE_KF5$])
m4trace:configure.ac:11635: -1- libo_ENABLE_VCLPLUG([qt5])
m4trace:configure.ac:11635: -1- m4_pattern_allow([^ENABLE_QT5$])
m4trace:configure.ac:11635: -1- m4_pattern_allow([^ENABLE_QT5$])
m4trace:configure.ac:11636: -1- libo_ENABLE_VCLPLUG([qt6])
m4trace:configure.ac:11636: -1- m4_pattern_allow([^ENABLE_QT6$])
m4trace:configure.ac:11636: -1- m4_pattern_allow([^ENABLE_QT6$])
m4trace:configure.ac:11654: -1- m4_pattern_allow([^VCL_PLUGIN_INFO$])
m4trace:configure.ac:11672: -1- PKG_CHECK_MODULES([GTK3], [gtk+-3.0 >= 3.20 gtk+-unix-print-3.0 gmodule-no-export-2.0 glib-2.0 >= 2.38 atk >= 2.28.1 cairo])
m4trace:configure.ac:11672: -1- m4_pattern_allow([^GTK3_CFLAGS$])
m4trace:configure.ac:11672: -1- m4_pattern_allow([^GTK3_LIBS$])
m4trace:configure.ac:11672: -1- PKG_CHECK_EXISTS([gtk+-3.0 >= 3.20 gtk+-unix-print-3.0 gmodule-no-export-2.0 glib-2.0 >= 2.38 atk >= 2.28.1 cairo], [pkg_cv_[]GTK3_CFLAGS=`$PKG_CONFIG --[]cflags "gtk+-3.0 >= 3.20 gtk+-unix-print-3.0 gmodule-no-export-2.0 glib-2.0 >= 2.38 atk >= 2.28.1 cairo" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11672: -1- PKG_CHECK_EXISTS([gtk+-3.0 >= 3.20 gtk+-unix-print-3.0 gmodule-no-export-2.0 glib-2.0 >= 2.38 atk >= 2.28.1 cairo], [pkg_cv_[]GTK3_LIBS=`$PKG_CONFIG --[]libs "gtk+-3.0 >= 3.20 gtk+-unix-print-3.0 gmodule-no-export-2.0 glib-2.0 >= 2.38 atk >= 2.28.1 cairo" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11672: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11692: -1- PKG_CHECK_MODULES([GTK3], [cairo gdk-3.0 gio-2.0 glib-2.0 gobject-2.0 gtk+-3.0])
m4trace:configure.ac:11692: -1- m4_pattern_allow([^GTK3_CFLAGS$])
m4trace:configure.ac:11692: -1- m4_pattern_allow([^GTK3_LIBS$])
m4trace:configure.ac:11692: -1- PKG_CHECK_EXISTS([cairo gdk-3.0 gio-2.0 glib-2.0 gobject-2.0 gtk+-3.0], [pkg_cv_[]GTK3_CFLAGS=`$PKG_CONFIG --[]cflags "cairo gdk-3.0 gio-2.0 glib-2.0 gobject-2.0 gtk+-3.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11692: -1- PKG_CHECK_EXISTS([cairo gdk-3.0 gio-2.0 glib-2.0 gobject-2.0 gtk+-3.0], [pkg_cv_[]GTK3_LIBS=`$PKG_CONFIG --[]libs "cairo gdk-3.0 gio-2.0 glib-2.0 gobject-2.0 gtk+-3.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11692: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11698: -1- m4_pattern_allow([^GTK3_LIBS$])
m4trace:configure.ac:11699: -1- m4_pattern_allow([^GTK3_CFLAGS$])
m4trace:configure.ac:11700: -1- m4_pattern_allow([^ENABLE_GTKTILEDVIEWER$])
m4trace:configure.ac:11709: -1- PKG_CHECK_MODULES([GTK4], [gtk4 gmodule-no-export-2.0 glib-2.0 >= 2.38 cairo atk])
m4trace:configure.ac:11709: -1- m4_pattern_allow([^GTK4_CFLAGS$])
m4trace:configure.ac:11709: -1- m4_pattern_allow([^GTK4_LIBS$])
m4trace:configure.ac:11709: -1- PKG_CHECK_EXISTS([gtk4 gmodule-no-export-2.0 glib-2.0 >= 2.38 cairo atk], [pkg_cv_[]GTK4_CFLAGS=`$PKG_CONFIG --[]cflags "gtk4 gmodule-no-export-2.0 glib-2.0 >= 2.38 cairo atk" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11709: -1- PKG_CHECK_EXISTS([gtk4 gmodule-no-export-2.0 glib-2.0 >= 2.38 cairo atk], [pkg_cv_[]GTK4_LIBS=`$PKG_CONFIG --[]libs "gtk4 gmodule-no-export-2.0 glib-2.0 >= 2.38 cairo atk" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11709: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11722: -1- m4_pattern_allow([^GTK4_LIBS$])
m4trace:configure.ac:11723: -1- m4_pattern_allow([^GTK4_CFLAGS$])
m4trace:configure.ac:11727: -1- GOBJECT_INTROSPECTION_REQUIRE([INTROSPECTION_REQUIRED_VERSION])
m4trace:configure.ac:11727: -1- PKG_CHECK_EXISTS([gobject-introspection-1.0], [], [as_fn_error $? "gobject-introspection-1.0 is not installed" "$LINENO" 5])
m4trace:configure.ac:11727: -1- PKG_CHECK_EXISTS([gobject-introspection-1.0 >= INTROSPECTION_REQUIRED_VERSION], [found_introspection=yes], [as_fn_error $? "You need to have gobject-introspection >= INTROSPECTION_REQUIRED_VERSION installed to build LibreOffice" "$LINENO" 5])
m4trace:configure.ac:11727: -1- PKG_CHECK_EXISTS([gobject-introspection-1.0 >= INTROSPECTION_REQUIRED_VERSION], [found_introspection=yes], [found_introspection=no])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_SCANNER$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_COMPILER$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_GENERATE$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_GIRDIR$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_TYPELIBDIR$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_CFLAGS$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_LIBS$])
m4trace:configure.ac:11727: -1- m4_pattern_allow([^INTROSPECTION_MAKEFILE$])
m4trace:configure.ac:11751: -1- PKG_CHECK_MODULES([DBUS], [dbus-1 >= 0.60])
m4trace:configure.ac:11751: -1- m4_pattern_allow([^DBUS_CFLAGS$])
m4trace:configure.ac:11751: -1- m4_pattern_allow([^DBUS_LIBS$])
m4trace:configure.ac:11751: -1- PKG_CHECK_EXISTS([dbus-1 >= 0.60], [pkg_cv_[]DBUS_CFLAGS=`$PKG_CONFIG --[]cflags "dbus-1 >= 0.60" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11751: -1- PKG_CHECK_EXISTS([dbus-1 >= 0.60], [pkg_cv_[]DBUS_LIBS=`$PKG_CONFIG --[]libs "dbus-1 >= 0.60" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11751: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11752: -1- m4_pattern_allow([^ENABLE_DBUS$])
m4trace:configure.ac:11759: -1- PKG_CHECK_MODULES([DBUS_GLIB], [glib-2.0 >= 2.4], [
            DBUS_HAVE_GLIB="TRUE"
            AC_DEFINE(DBUS_HAVE_GLIB,1)
        ], [{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: No Glib found, Bluetooth support will be disabled" >&5
printf "%s\n" "$as_me: WARNING: No Glib found, Bluetooth support will be disabled" >&2;}
    ])
m4trace:configure.ac:11759: -1- m4_pattern_allow([^DBUS_GLIB_CFLAGS$])
m4trace:configure.ac:11759: -1- m4_pattern_allow([^DBUS_GLIB_LIBS$])
m4trace:configure.ac:11759: -1- PKG_CHECK_EXISTS([glib-2.0 >= 2.4], [pkg_cv_[]DBUS_GLIB_CFLAGS=`$PKG_CONFIG --[]cflags "glib-2.0 >= 2.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11759: -1- PKG_CHECK_EXISTS([glib-2.0 >= 2.4], [pkg_cv_[]DBUS_GLIB_LIBS=`$PKG_CONFIG --[]libs "glib-2.0 >= 2.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11759: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11759: -1- m4_pattern_allow([^DBUS_HAVE_GLIB$])
m4trace:configure.ac:11770: -1- m4_pattern_allow([^ENABLE_DBUS$])
m4trace:configure.ac:11771: -1- m4_pattern_allow([^DBUS_CFLAGS$])
m4trace:configure.ac:11772: -1- m4_pattern_allow([^DBUS_LIBS$])
m4trace:configure.ac:11773: -1- m4_pattern_allow([^DBUS_GLIB_CFLAGS$])
m4trace:configure.ac:11774: -1- m4_pattern_allow([^DBUS_GLIB_LIBS$])
m4trace:configure.ac:11775: -1- m4_pattern_allow([^DBUS_HAVE_GLIB$])
m4trace:configure.ac:11849: -1- m4_pattern_allow([^ENABLE_SDREMOTE$])
m4trace:configure.ac:11850: -1- m4_pattern_allow([^ENABLE_SDREMOTE_BLUETOOTH$])
m4trace:configure.ac:11851: -1- m4_pattern_allow([^SDREMOTE_ENTITLEMENT$])
m4trace:configure.ac:11852: -1- m4_pattern_allow([^SYSTEM_BLUEZ$])
m4trace:configure.ac:11861: -1- PKG_CHECK_MODULES([GIO], [gio-2.0 >= 2.26], [ENABLE_GIO="TRUE"], [ENABLE_GIO=""])
m4trace:configure.ac:11861: -1- m4_pattern_allow([^GIO_CFLAGS$])
m4trace:configure.ac:11861: -1- m4_pattern_allow([^GIO_LIBS$])
m4trace:configure.ac:11861: -1- PKG_CHECK_EXISTS([gio-2.0 >= 2.26], [pkg_cv_[]GIO_CFLAGS=`$PKG_CONFIG --[]cflags "gio-2.0 >= 2.26" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11861: -1- PKG_CHECK_EXISTS([gio-2.0 >= 2.26], [pkg_cv_[]GIO_LIBS=`$PKG_CONFIG --[]libs "gio-2.0 >= 2.26" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11861: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11864: -1- m4_pattern_allow([^ENABLE_GIO$])
m4trace:configure.ac:11873: -1- m4_pattern_allow([^ENABLE_GIO$])
m4trace:configure.ac:11874: -1- m4_pattern_allow([^GIO_CFLAGS$])
m4trace:configure.ac:11875: -1- m4_pattern_allow([^GIO_LIBS$])
m4trace:configure.ac:11884: -1- m4_pattern_allow([^SPLIT_APP_MODULES$])
m4trace:configure.ac:11890: -1- m4_pattern_allow([^SPLIT_OPT_FEATURES$])
m4trace:configure.ac:11904: -1- PKG_CHECK_MODULES([GSTREAMER_1_0], [gstreamer-1.0 gstreamer-plugins-base-1.0 gstreamer-pbutils-1.0 gstreamer-video-1.0 ])
m4trace:configure.ac:11904: -1- m4_pattern_allow([^GSTREAMER_1_0_CFLAGS$])
m4trace:configure.ac:11904: -1- m4_pattern_allow([^GSTREAMER_1_0_LIBS$])
m4trace:configure.ac:11904: -1- PKG_CHECK_EXISTS([gstreamer-1.0 gstreamer-plugins-base-1.0 gstreamer-pbutils-1.0 gstreamer-video-1.0 ], [pkg_cv_[]GSTREAMER_1_0_CFLAGS=`$PKG_CONFIG --[]cflags "gstreamer-1.0 gstreamer-plugins-base-1.0 gstreamer-pbutils-1.0 gstreamer-video-1.0 " 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11904: -1- PKG_CHECK_EXISTS([gstreamer-1.0 gstreamer-plugins-base-1.0 gstreamer-pbutils-1.0 gstreamer-video-1.0 ], [pkg_cv_[]GSTREAMER_1_0_LIBS=`$PKG_CONFIG --[]libs "gstreamer-1.0 gstreamer-plugins-base-1.0 gstreamer-pbutils-1.0 gstreamer-video-1.0 " 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11904: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11908: -1- m4_pattern_allow([^ENABLE_GSTREAMER_1_0$])
m4trace:configure.ac:11913: -1- m4_pattern_allow([^GSTREAMER_1_0_CFLAGS$])
m4trace:configure.ac:11914: -1- m4_pattern_allow([^GSTREAMER_1_0_LIBS$])
m4trace:configure.ac:11915: -1- m4_pattern_allow([^ENABLE_GSTREAMER_1_0$])
m4trace:configure.ac:11924: -1- m4_pattern_allow([^HAVE_FEATURE_OPENGL$])
m4trace:configure.ac:11928: -1- m4_pattern_allow([^HAVE_FEATURE_OPENGL$])
m4trace:configure.ac:11934: -1- m4_pattern_allow([^HAVE_FEATURE_OPENGL$])
m4trace:configure.ac:11939: -1- m4_pattern_allow([^ENABLE_OPENGL_TRANSITIONS$])
m4trace:configure.ac:11940: -1- m4_pattern_allow([^ENABLE_OPENGL_CANVAS$])
m4trace:configure.ac:11950: -1- m4_pattern_allow([^HAVE_FEATURE_OPENCL$])
m4trace:configure.ac:11958: -1- PKG_CHECK_MODULES([DCONF], [dconf >= 0.15.2], [], [
        if test "$enable_dconf" = yes; then
            AC_MSG_ERROR([dconf not found])
        else
            enable_dconf=no
        fi])
m4trace:configure.ac:11958: -1- m4_pattern_allow([^DCONF_CFLAGS$])
m4trace:configure.ac:11958: -1- m4_pattern_allow([^DCONF_LIBS$])
m4trace:configure.ac:11958: -1- PKG_CHECK_EXISTS([dconf >= 0.15.2], [pkg_cv_[]DCONF_CFLAGS=`$PKG_CONFIG --[]cflags "dconf >= 0.15.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11958: -1- PKG_CHECK_EXISTS([dconf >= 0.15.2], [pkg_cv_[]DCONF_LIBS=`$PKG_CONFIG --[]libs "dconf >= 0.15.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:11958: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:11973: -1- m4_pattern_allow([^ENABLE_DCONF$])
m4trace:configure.ac:11976: -1- m4_pattern_allow([^DCONF_CFLAGS$])
m4trace:configure.ac:11977: -1- m4_pattern_allow([^DCONF_LIBS$])
m4trace:configure.ac:11978: -1- m4_pattern_allow([^ENABLE_DCONF$])
m4trace:configure.ac:11986: -1- m4_pattern_allow([^HAVE_FEATURE_PDFIMPORT$])
m4trace:configure.ac:12001: -1- m4_pattern_allow([^ENABLE_PDFIUM$])
m4trace:configure.ac:12008: -1- PKG_CHECK_MODULES([OPENJPEG2], [libopenjp2 ])
m4trace:configure.ac:12008: -1- m4_pattern_allow([^OPENJPEG2_CFLAGS$])
m4trace:configure.ac:12008: -1- m4_pattern_allow([^OPENJPEG2_LIBS$])
m4trace:configure.ac:12008: -1- PKG_CHECK_EXISTS([libopenjp2 ], [pkg_cv_[]OPENJPEG2_CFLAGS=`$PKG_CONFIG --[]cflags "libopenjp2 " 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12008: -1- PKG_CHECK_EXISTS([libopenjp2 ], [pkg_cv_[]OPENJPEG2_LIBS=`$PKG_CONFIG --[]libs "libopenjp2 " 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12008: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:12026: -1- m4_pattern_allow([^HAVE_LIBABSL_BAD_OPTIONAL_ACCESS$])
m4trace:configure.ac:12028: -1- m4_pattern_allow([^HAVE_LIBABSL_BAD_VARIANT_ACCESS$])
m4trace:configure.ac:12039: -1- m4_pattern_allow([^SYSTEM_OPENJPEG2$])
m4trace:configure.ac:12040: -1- m4_pattern_allow([^SYSTEM_ABSEIL$])
m4trace:configure.ac:12041: -1- m4_pattern_allow([^ABSEIL_CFLAGS$])
m4trace:configure.ac:12042: -1- m4_pattern_allow([^ABSEIL_LIBS$])
m4trace:configure.ac:12052: -1- m4_pattern_allow([^HAVE_FEATURE_POPPLER$])
m4trace:configure.ac:12056: -1- m4_pattern_allow([^ENABLE_POPPLER$])
m4trace:configure.ac:12074: -1- PKG_CHECK_MODULES([POPPLER], [poppler >= 0.14 poppler-cpp])
m4trace:configure.ac:12074: -1- m4_pattern_allow([^POPPLER_CFLAGS$])
m4trace:configure.ac:12074: -1- m4_pattern_allow([^POPPLER_LIBS$])
m4trace:configure.ac:12074: -1- PKG_CHECK_EXISTS([poppler >= 0.14 poppler-cpp], [pkg_cv_[]POPPLER_CFLAGS=`$PKG_CONFIG --[]cflags "poppler >= 0.14 poppler-cpp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12074: -1- PKG_CHECK_EXISTS([poppler >= 0.14 poppler-cpp], [pkg_cv_[]POPPLER_LIBS=`$PKG_CONFIG --[]libs "poppler >= 0.14 poppler-cpp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12074: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:12083: -1- m4_pattern_allow([^ENABLE_PDFIMPORT$])
m4trace:configure.ac:12085: -1- m4_pattern_allow([^ENABLE_PDFIMPORT$])
m4trace:configure.ac:12086: -1- m4_pattern_allow([^SYSTEM_POPPLER$])
m4trace:configure.ac:12087: -1- m4_pattern_allow([^POPPLER_CFLAGS$])
m4trace:configure.ac:12088: -1- m4_pattern_allow([^POPPLER_LIBS$])
m4trace:configure.ac:12095: -1- PKG_CHECK_EXISTS([freetype2 >= 21.0.15], [# 21.0.15 = 2.8.1
            skia_freetype_ok=yes], [skia_freetype_ok=no])
m4trace:configure.ac:12115: -1- m4_pattern_allow([^HAVE_FEATURE_SKIA$])
m4trace:configure.ac:12119: -1- m4_pattern_allow([^SK_SUPPORT_GPU$])
m4trace:configure.ac:12120: -1- m4_pattern_allow([^SK_METAL$])
m4trace:configure.ac:12122: -1- m4_pattern_allow([^SKIA_GPU$])
m4trace:configure.ac:12124: -1- m4_pattern_allow([^SK_SUPPORT_GPU$])
m4trace:configure.ac:12125: -1- m4_pattern_allow([^SK_VULKAN$])
m4trace:configure.ac:12127: -1- m4_pattern_allow([^SKIA_GPU$])
m4trace:configure.ac:12138: -1- m4_pattern_allow([^ENABLE_SKIA$])
m4trace:configure.ac:12139: -1- m4_pattern_allow([^ENABLE_SKIA_DEBUG$])
m4trace:configure.ac:12187: -1- m4_pattern_allow([^LO_CLANG_CC$])
m4trace:configure.ac:12188: -1- m4_pattern_allow([^LO_CLANG_CXX$])
m4trace:configure.ac:12481: -1- m4_pattern_allow([^LO_CLANG_CC$])
m4trace:configure.ac:12482: -1- m4_pattern_allow([^LO_CLANG_CXX$])
m4trace:configure.ac:12483: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_SSE2$])
m4trace:configure.ac:12484: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_SSSE3$])
m4trace:configure.ac:12485: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_SSE41$])
m4trace:configure.ac:12486: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_SSE42$])
m4trace:configure.ac:12487: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_AVX$])
m4trace:configure.ac:12488: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_AVX2$])
m4trace:configure.ac:12489: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_AVX512$])
m4trace:configure.ac:12490: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_AVX512F$])
m4trace:configure.ac:12491: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_F16C$])
m4trace:configure.ac:12492: -1- m4_pattern_allow([^LO_CLANG_CXXFLAGS_INTRINSICS_FMA$])
m4trace:configure.ac:12493: -1- m4_pattern_allow([^LO_CLANG_SHOWINCLUDES_PREFIX$])
m4trace:configure.ac:12494: -1- m4_pattern_allow([^CLANG_USE_LD$])
m4trace:configure.ac:12495: -1- m4_pattern_allow([^HAVE_LO_CLANG_DLLEXPORTINLINES$])
m4trace:configure.ac:12521: -1- m4_pattern_allow([^HAVE_LIBGPGMEPP$])
m4trace:configure.ac:12536: -1- m4_pattern_allow([^HAVE_FEATURE_GPGME$])
m4trace:configure.ac:12537: -1- m4_pattern_allow([^GPG$])
m4trace:configure.ac:12543: -1- m4_pattern_allow([^HAVE_FEATURE_GPGVERIFY$])
m4trace:configure.ac:12550: -1- m4_pattern_allow([^GPGCONF$])
m4trace:configure.ac:12565: -1- m4_pattern_allow([^HAVE_GPGCONF_SOCKETDIR$])
m4trace:configure.ac:12566: -1- m4_pattern_allow([^GPGME_GPGCONF$])
m4trace:configure.ac:12583: -1- m4_pattern_allow([^ENABLE_GPGMEPP$])
m4trace:configure.ac:12584: -1- m4_pattern_allow([^SYSTEM_GPGMEPP$])
m4trace:configure.ac:12585: -1- m4_pattern_allow([^GPG_ERROR_CFLAGS$])
m4trace:configure.ac:12586: -1- m4_pattern_allow([^GPG_ERROR_LIBS$])
m4trace:configure.ac:12587: -1- m4_pattern_allow([^LIBASSUAN_CFLAGS$])
m4trace:configure.ac:12588: -1- m4_pattern_allow([^LIBASSUAN_LIBS$])
m4trace:configure.ac:12589: -1- m4_pattern_allow([^GPGMEPP_CFLAGS$])
m4trace:configure.ac:12590: -1- m4_pattern_allow([^GPGMEPP_LIBS$])
m4trace:configure.ac:12605: -1- m4_pattern_allow([^ENABLE_MEDIAWIKI$])
m4trace:configure.ac:12753: -1- m4_pattern_allow([^ENABLE_REPORTBUILDER$])
m4trace:configure.ac:12754: -1- m4_pattern_allow([^SYSTEM_JFREEREPORT$])
m4trace:configure.ac:12755: -1- m4_pattern_allow([^SAC_JAR$])
m4trace:configure.ac:12756: -1- m4_pattern_allow([^LIBXML_JAR$])
m4trace:configure.ac:12757: -1- m4_pattern_allow([^FLUTE_JAR$])
m4trace:configure.ac:12758: -1- m4_pattern_allow([^JFREEREPORT_JAR$])
m4trace:configure.ac:12759: -1- m4_pattern_allow([^LIBBASE_JAR$])
m4trace:configure.ac:12760: -1- m4_pattern_allow([^LIBLAYOUT_JAR$])
m4trace:configure.ac:12761: -1- m4_pattern_allow([^LIBLOADER_JAR$])
m4trace:configure.ac:12762: -1- m4_pattern_allow([^LIBFORMULA_JAR$])
m4trace:configure.ac:12763: -1- m4_pattern_allow([^LIBREPOSITORY_JAR$])
m4trace:configure.ac:12764: -1- m4_pattern_allow([^LIBFONTS_JAR$])
m4trace:configure.ac:12765: -1- m4_pattern_allow([^LIBSERIALIZER_JAR$])
m4trace:configure.ac:12796: -1- m4_pattern_allow([^ENABLE_SCRIPTING_BEANSHELL$])
m4trace:configure.ac:12797: -1- m4_pattern_allow([^SYSTEM_BSH$])
m4trace:configure.ac:12798: -1- m4_pattern_allow([^BSH_JAR$])
m4trace:configure.ac:12830: -1- m4_pattern_allow([^ENABLE_SCRIPTING_JAVASCRIPT$])
m4trace:configure.ac:12831: -1- m4_pattern_allow([^SYSTEM_RHINO$])
m4trace:configure.ac:12832: -1- m4_pattern_allow([^RHINO_JAR$])
m4trace:configure.ac:12880: -1- m4_pattern_allow([^QMAKE5$])
m4trace:configure.ac:12882: -1- m4_pattern_allow([^QMAKE5$])
m4trace:configure.ac:12971: -1- PKG_CHECK_MODULES([QT5_XCB], [xcb], [], [AC_MSG_ERROR([XCB not found, which is needed for correct app grouping in X11.])])
m4trace:configure.ac:12971: -1- m4_pattern_allow([^QT5_XCB_CFLAGS$])
m4trace:configure.ac:12971: -1- m4_pattern_allow([^QT5_XCB_LIBS$])
m4trace:configure.ac:12971: -1- PKG_CHECK_EXISTS([xcb], [pkg_cv_[]QT5_XCB_CFLAGS=`$PKG_CONFIG --[]cflags "xcb" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12971: -1- PKG_CHECK_EXISTS([xcb], [pkg_cv_[]QT5_XCB_LIBS=`$PKG_CONFIG --[]libs "xcb" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12971: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:12972: -1- PKG_CHECK_MODULES([QT5_XCB_ICCCM], [xcb-icccm], [
            QT5_HAVE_XCB_ICCCM=1
            AC_DEFINE(QT5_HAVE_XCB_ICCCM)
        ], [
            AC_MSG_WARN([XCB ICCCM not found, which is needed for old Qt versions (< 5.12) on some WMs to correctly group dialogs (like QTBUG-46626)])
            add_warning "XCB ICCCM not found, which is needed for Qt versions (< 5.12) on some WMs to correctly group dialogs (like QTBUG-46626)"
        ])
m4trace:configure.ac:12972: -1- m4_pattern_allow([^QT5_XCB_ICCCM_CFLAGS$])
m4trace:configure.ac:12972: -1- m4_pattern_allow([^QT5_XCB_ICCCM_LIBS$])
m4trace:configure.ac:12972: -1- PKG_CHECK_EXISTS([xcb-icccm], [pkg_cv_[]QT5_XCB_ICCCM_CFLAGS=`$PKG_CONFIG --[]cflags "xcb-icccm" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12972: -1- PKG_CHECK_EXISTS([xcb-icccm], [pkg_cv_[]QT5_XCB_ICCCM_LIBS=`$PKG_CONFIG --[]libs "xcb-icccm" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12972: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:12972: -1- m4_pattern_allow([^QT5_HAVE_XCB_ICCCM$])
m4trace:configure.ac:12982: -1- m4_pattern_allow([^QT5_USING_X11$])
m4trace:configure.ac:12987: -1- m4_pattern_allow([^MOC5$])
m4trace:configure.ac:12994: -1- PKG_CHECK_MODULES([QT5_GOBJECT], [gobject-2.0], [
                QT5_HAVE_GOBJECT=1
                AC_DEFINE(QT5_HAVE_GOBJECT)
            ], [{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: No GObject found, can't use QWidget GStreamer sink on wayland!" >&5
printf "%s\n" "$as_me: WARNING: No GObject found, can't use QWidget GStreamer sink on wayland!" >&2;}
        ])
m4trace:configure.ac:12994: -1- m4_pattern_allow([^QT5_GOBJECT_CFLAGS$])
m4trace:configure.ac:12994: -1- m4_pattern_allow([^QT5_GOBJECT_LIBS$])
m4trace:configure.ac:12994: -1- PKG_CHECK_EXISTS([gobject-2.0], [pkg_cv_[]QT5_GOBJECT_CFLAGS=`$PKG_CONFIG --[]cflags "gobject-2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12994: -1- PKG_CHECK_EXISTS([gobject-2.0], [pkg_cv_[]QT5_GOBJECT_LIBS=`$PKG_CONFIG --[]libs "gobject-2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:12994: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:12994: -1- m4_pattern_allow([^QT5_HAVE_GOBJECT$])
m4trace:configure.ac:13002: -1- m4_pattern_allow([^QT5_CFLAGS$])
m4trace:configure.ac:13003: -1- m4_pattern_allow([^QT5_LIBS$])
m4trace:configure.ac:13004: -1- m4_pattern_allow([^MOC5$])
m4trace:configure.ac:13005: -1- m4_pattern_allow([^QT5_GOBJECT_CFLAGS$])
m4trace:configure.ac:13006: -1- m4_pattern_allow([^QT5_GOBJECT_LIBS$])
m4trace:configure.ac:13007: -1- m4_pattern_allow([^QT5_HAVE_GOBJECT$])
m4trace:configure.ac:13008: -1- m4_pattern_allow([^QT5_PLATFORMS_SRCDIR$])
m4trace:configure.ac:13037: -1- m4_pattern_allow([^QMAKE6$])
m4trace:configure.ac:13039: -1- m4_pattern_allow([^QMAKE6$])
m4trace:configure.ac:13107: -1- PKG_CHECK_MODULES([QT6_XCB], [xcb], [], [AC_MSG_ERROR([XCB not found, which is needed for key modifier handling in X11.])])
m4trace:configure.ac:13107: -1- m4_pattern_allow([^QT6_XCB_CFLAGS$])
m4trace:configure.ac:13107: -1- m4_pattern_allow([^QT6_XCB_LIBS$])
m4trace:configure.ac:13107: -1- PKG_CHECK_EXISTS([xcb], [pkg_cv_[]QT6_XCB_CFLAGS=`$PKG_CONFIG --[]cflags "xcb" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13107: -1- PKG_CHECK_EXISTS([xcb], [pkg_cv_[]QT6_XCB_LIBS=`$PKG_CONFIG --[]libs "xcb" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13107: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13111: -1- m4_pattern_allow([^QT6_USING_X11$])
m4trace:configure.ac:13123: -1- m4_pattern_allow([^MOC6$])
m4trace:configure.ac:13135: -1- m4_pattern_allow([^QT6_CFLAGS$])
m4trace:configure.ac:13136: -1- m4_pattern_allow([^QT6_LIBS$])
m4trace:configure.ac:13137: -1- m4_pattern_allow([^MOC6$])
m4trace:configure.ac:13138: -1- m4_pattern_allow([^QT6_PLATFORMS_SRCDIR$])
m4trace:configure.ac:13167: -1- m4_pattern_allow([^KF5_CONFIG$])
m4trace:configure.ac:13214: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2981: AC_RUN_IFELSE is expanded from...
configure.ac:13214: the top level])
m4trace:configure.ac:13225: -1- m4_pattern_allow([^KF5_CFLAGS$])
m4trace:configure.ac:13226: -1- m4_pattern_allow([^KF5_LIBS$])
m4trace:configure.ac:13234: -1- PKG_CHECK_MODULES([GOBJECT], [gobject-2.0])
m4trace:configure.ac:13234: -1- m4_pattern_allow([^GOBJECT_CFLAGS$])
m4trace:configure.ac:13234: -1- m4_pattern_allow([^GOBJECT_LIBS$])
m4trace:configure.ac:13234: -1- PKG_CHECK_EXISTS([gobject-2.0], [pkg_cv_[]GOBJECT_CFLAGS=`$PKG_CONFIG --[]cflags "gobject-2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13234: -1- PKG_CHECK_EXISTS([gobject-2.0], [pkg_cv_[]GOBJECT_LIBS=`$PKG_CONFIG --[]libs "gobject-2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13234: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13242: -1- m4_pattern_allow([^ENABLE_EVOAB2$])
m4trace:configure.ac:13243: -1- m4_pattern_allow([^GOBJECT_CFLAGS$])
m4trace:configure.ac:13244: -1- m4_pattern_allow([^GOBJECT_LIBS$])
m4trace:configure.ac:13267: -1- m4_pattern_allow([^WITH_THEMES$])
m4trace:configure.ac:13288: -1- m4_pattern_allow([^WITH_EXTENSION_INTEGRATION$])
m4trace:configure.ac:13293: -1- m4_pattern_allow([^WITH_EXTRA_EXTENSIONS$])
m4trace:configure.ac:13295: -1- libo_CHECK_EXTENSION([Numbertext], [NUMBERTEXT], [numbertext], [numbertext], [b7cae45ad2c23551fd6ccb8ae2c1f59e-numbertext_0.9.5.oxt])
m4trace:configure.ac:13295: -1- m4_pattern_allow([^NUMBERTEXT_EXTENSION_PACK$])
m4trace:configure.ac:13297: -1- libo_CHECK_EXTENSION([NLPSolver], [NLPSOLVER], [nlpsolver], [nlpsolver], [])
m4trace:configure.ac:13297: -1- m4_pattern_allow([^NLPSOLVER_EXTENSION_PACK$])
m4trace:configure.ac:13303: -1- m4_pattern_allow([^FONTFORGE$])
m4trace:configure.ac:13311: -1- m4_pattern_allow([^FONTFORGE$])
m4trace:configure.ac:13321: -1- m4_pattern_allow([^HAVE_MORE_FONTS$])
m4trace:configure.ac:13327: -1- m4_pattern_allow([^WITH_FONTS$])
m4trace:configure.ac:13347: -1- m4_pattern_allow([^HAVE_FEATURE_UPDATE_MAR$])
m4trace:configure.ac:13355: -1- m4_pattern_allow([^ENABLE_ONLINE_UPDATE$])
m4trace:configure.ac:13356: -1- m4_pattern_allow([^ENABLE_ONLINE_UPDATE_MAR$])
m4trace:configure.ac:13357: -1- m4_pattern_allow([^UPDATE_CONFIG$])
m4trace:configure.ac:13366: -1- m4_pattern_allow([^PRIVACY_POLICY_URL$])
m4trace:configure.ac:13376: -1- PKG_CHECK_MODULES([BZIP2], [bzip2])
m4trace:configure.ac:13376: -1- m4_pattern_allow([^BZIP2_CFLAGS$])
m4trace:configure.ac:13376: -1- m4_pattern_allow([^BZIP2_LIBS$])
m4trace:configure.ac:13376: -1- PKG_CHECK_EXISTS([bzip2], [pkg_cv_[]BZIP2_CFLAGS=`$PKG_CONFIG --[]cflags "bzip2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13376: -1- PKG_CHECK_EXISTS([bzip2], [pkg_cv_[]BZIP2_LIBS=`$PKG_CONFIG --[]libs "bzip2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13376: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13384: -1- m4_pattern_allow([^SYSTEM_BZIP2$])
m4trace:configure.ac:13385: -1- m4_pattern_allow([^BZIP2_CFLAGS$])
m4trace:configure.ac:13386: -1- m4_pattern_allow([^BZIP2_LIBS$])
m4trace:configure.ac:13398: -1- m4_pattern_allow([^ENABLE_EXTENSION_UPDATE$])
m4trace:configure.ac:13401: -1- m4_pattern_allow([^ENABLE_EXTENSION_UPDATE$])
m4trace:configure.ac:13416: -1- m4_pattern_allow([^ENABLE_SILENT_MSI$])
m4trace:configure.ac:13480: -1- m4_pattern_allow([^USE_XINERAMA$])
m4trace:configure.ac:13481: -1- m4_pattern_allow([^XINERAMA_LINK$])
m4trace:configure.ac:13495: -1- PKG_CHECK_MODULES([CAIRO], [cairo >= 1.12.0 ])
m4trace:configure.ac:13495: -1- m4_pattern_allow([^CAIRO_CFLAGS$])
m4trace:configure.ac:13495: -1- m4_pattern_allow([^CAIRO_LIBS$])
m4trace:configure.ac:13495: -1- PKG_CHECK_EXISTS([cairo >= 1.12.0 ], [pkg_cv_[]CAIRO_CFLAGS=`$PKG_CONFIG --[]cflags "cairo >= 1.12.0 " 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13495: -1- PKG_CHECK_EXISTS([cairo >= 1.12.0 ], [pkg_cv_[]CAIRO_LIBS=`$PKG_CONFIG --[]libs "cairo >= 1.12.0 " 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13495: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13518: -1- m4_pattern_allow([^ENABLE_CAIRO_CANVAS$])
m4trace:configure.ac:13523: -1- m4_pattern_allow([^CAIRO_CFLAGS$])
m4trace:configure.ac:13524: -1- m4_pattern_allow([^CAIRO_LIBS$])
m4trace:configure.ac:13525: -1- m4_pattern_allow([^ENABLE_CAIRO_CANVAS$])
m4trace:configure.ac:13526: -1- m4_pattern_allow([^SYSTEM_CAIRO$])
m4trace:configure.ac:13535: -1- PKG_CHECK_MODULES([AVAHI], [avahi-client >= 0.6.10], [ENABLE_AVAHI="TRUE"])
m4trace:configure.ac:13535: -1- m4_pattern_allow([^AVAHI_CFLAGS$])
m4trace:configure.ac:13535: -1- m4_pattern_allow([^AVAHI_LIBS$])
m4trace:configure.ac:13535: -1- PKG_CHECK_EXISTS([avahi-client >= 0.6.10], [pkg_cv_[]AVAHI_CFLAGS=`$PKG_CONFIG --[]cflags "avahi-client >= 0.6.10" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13535: -1- PKG_CHECK_EXISTS([avahi-client >= 0.6.10], [pkg_cv_[]AVAHI_LIBS=`$PKG_CONFIG --[]libs "avahi-client >= 0.6.10" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13535: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13537: -1- m4_pattern_allow([^HAVE_FEATURE_AVAHI$])
m4trace:configure.ac:13543: -1- m4_pattern_allow([^ENABLE_AVAHI$])
m4trace:configure.ac:13544: -1- m4_pattern_allow([^AVAHI_CFLAGS$])
m4trace:configure.ac:13545: -1- m4_pattern_allow([^AVAHI_LIBS$])
m4trace:configure.ac:13555: -1- PKG_CHECK_MODULES([LIBLANGTAG], [liblangtag >= 0.4.0])
m4trace:configure.ac:13555: -1- m4_pattern_allow([^LIBLANGTAG_CFLAGS$])
m4trace:configure.ac:13555: -1- m4_pattern_allow([^LIBLANGTAG_LIBS$])
m4trace:configure.ac:13555: -1- PKG_CHECK_EXISTS([liblangtag >= 0.4.0], [pkg_cv_[]LIBLANGTAG_CFLAGS=`$PKG_CONFIG --[]cflags "liblangtag >= 0.4.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13555: -1- PKG_CHECK_EXISTS([liblangtag >= 0.4.0], [pkg_cv_[]LIBLANGTAG_LIBS=`$PKG_CONFIG --[]libs "liblangtag >= 0.4.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13555: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13557: -1- PKG_CHECK_EXISTS([liblangtag >= 0.5.5], [], [AC_DEFINE([LIBLANGTAG_INLINE_FIX])])
m4trace:configure.ac:13557: -1- m4_pattern_allow([^LIBLANGTAG_INLINE_FIX$])
m4trace:configure.ac:13572: -1- m4_pattern_allow([^SYSTEM_LIBLANGTAG$])
m4trace:configure.ac:13573: -1- m4_pattern_allow([^LIBLANGTAG_CFLAGS$])
m4trace:configure.ac:13574: -1- m4_pattern_allow([^LIBLANGTAG_LIBS$])
m4trace:configure.ac:13582: -1- libo_CHECK_SYSTEM_MODULE([libpng], [LIBPNG], [libpng])
m4trace:configure.ac:13582: -1- PKG_CHECK_MODULES([LIBPNG], [libpng])
m4trace:configure.ac:13582: -1- m4_pattern_allow([^LIBPNG_CFLAGS$])
m4trace:configure.ac:13582: -1- m4_pattern_allow([^LIBPNG_LIBS$])
m4trace:configure.ac:13582: -1- PKG_CHECK_EXISTS([libpng], [pkg_cv_[]LIBPNG_CFLAGS=`$PKG_CONFIG --[]cflags "libpng" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13582: -1- PKG_CHECK_EXISTS([libpng], [pkg_cv_[]LIBPNG_LIBS=`$PKG_CONFIG --[]libs "libpng" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13582: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13582: -1- m4_pattern_allow([^ENABLE_LIBPNG$])
m4trace:configure.ac:13582: -1- m4_pattern_allow([^SYSTEM_LIBPNG$])
m4trace:configure.ac:13582: -1- m4_pattern_allow([^LIBPNG_CFLAGS$])
m4trace:configure.ac:13582: -1- m4_pattern_allow([^LIBPNG_LIBS$])
m4trace:configure.ac:13588: -1- libo_CHECK_SYSTEM_MODULE([libtiff], [LIBTIFF], [libtiff-4])
m4trace:configure.ac:13588: -1- PKG_CHECK_MODULES([LIBTIFF], [libtiff-4])
m4trace:configure.ac:13588: -1- m4_pattern_allow([^LIBTIFF_CFLAGS$])
m4trace:configure.ac:13588: -1- m4_pattern_allow([^LIBTIFF_LIBS$])
m4trace:configure.ac:13588: -1- PKG_CHECK_EXISTS([libtiff-4], [pkg_cv_[]LIBTIFF_CFLAGS=`$PKG_CONFIG --[]cflags "libtiff-4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13588: -1- PKG_CHECK_EXISTS([libtiff-4], [pkg_cv_[]LIBTIFF_LIBS=`$PKG_CONFIG --[]libs "libtiff-4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13588: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13588: -1- m4_pattern_allow([^ENABLE_LIBTIFF$])
m4trace:configure.ac:13588: -1- m4_pattern_allow([^SYSTEM_LIBTIFF$])
m4trace:configure.ac:13588: -1- m4_pattern_allow([^LIBTIFF_CFLAGS$])
m4trace:configure.ac:13588: -1- m4_pattern_allow([^LIBTIFF_LIBS$])
m4trace:configure.ac:13594: -1- libo_CHECK_SYSTEM_MODULE([libwebp], [LIBWEBP], [libwebp])
m4trace:configure.ac:13594: -1- PKG_CHECK_MODULES([LIBWEBP], [libwebp])
m4trace:configure.ac:13594: -1- m4_pattern_allow([^LIBWEBP_CFLAGS$])
m4trace:configure.ac:13594: -1- m4_pattern_allow([^LIBWEBP_LIBS$])
m4trace:configure.ac:13594: -1- PKG_CHECK_EXISTS([libwebp], [pkg_cv_[]LIBWEBP_CFLAGS=`$PKG_CONFIG --[]cflags "libwebp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13594: -1- PKG_CHECK_EXISTS([libwebp], [pkg_cv_[]LIBWEBP_LIBS=`$PKG_CONFIG --[]libs "libwebp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:13594: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:13594: -1- m4_pattern_allow([^ENABLE_LIBWEBP$])
m4trace:configure.ac:13594: -1- m4_pattern_allow([^SYSTEM_LIBWEBP$])
m4trace:configure.ac:13594: -1- m4_pattern_allow([^LIBWEBP_CFLAGS$])
m4trace:configure.ac:13594: -1- m4_pattern_allow([^LIBWEBP_LIBS$])
m4trace:configure.ac:13610: -1- m4_pattern_allow([^JVM_ONE_PATH_CHECK$])
m4trace:configure.ac:13635: -1- m4_pattern_allow([^ANT$])
m4trace:configure.ac:13643: -1- m4_pattern_allow([^ANT$])
m4trace:configure.ac:13765: -1- m4_pattern_allow([^ANT$])
m4trace:configure.ac:13766: -1- m4_pattern_allow([^ANT_HOME$])
m4trace:configure.ac:13767: -1- m4_pattern_allow([^ANT_LIB$])
m4trace:configure.ac:13836: -1- m4_pattern_allow([^OOO_JUNIT_JAR$])
m4trace:configure.ac:13837: -1- m4_pattern_allow([^HAMCREST_JAR$])
m4trace:configure.ac:13840: -1- m4_pattern_allow([^SCPDEFS$])
m4trace:configure.ac:13867: -1- m4_pattern_allow([^WGET$])
m4trace:configure.ac:13868: -1- m4_pattern_allow([^CURL$])
m4trace:configure.ac:13899: -1- m4_pattern_allow([^SHA256SUM$])
m4trace:configure.ac:13935: -1- m4_pattern_allow([^MSGFMT$])
m4trace:configure.ac:13947: -1- m4_pattern_allow([^MSGUNIQ$])
m4trace:configure.ac:13954: -1- m4_pattern_allow([^MSGFMT$])
m4trace:configure.ac:13955: -1- m4_pattern_allow([^MSGUNIQ$])
m4trace:configure.ac:13982: -1- m4_pattern_allow([^ALL_LANGS$])
m4trace:configure.ac:13983: -1- m4_pattern_allow([^WITH_LANG$])
m4trace:configure.ac:13984: -1- m4_pattern_allow([^WITH_LANG$])
m4trace:configure.ac:13985: -1- m4_pattern_allow([^WITH_LANG_LIST$])
m4trace:configure.ac:13986: -1- m4_pattern_allow([^GIT_NEEDED_SUBMODULES$])
m4trace:configure.ac:13996: -1- m4_pattern_allow([^WITH_POOR_HELP_LOCALIZATIONS$])
m4trace:configure.ac:14011: -1- m4_pattern_allow([^WITH_LOCALE_FOR_SCRIPT_Deva$])
m4trace:configure.ac:14014: -1- m4_pattern_allow([^WITH_LOCALE_FOR_SCRIPT_Cyrl$])
m4trace:configure.ac:14019: -1- m4_pattern_allow([^WITH_LOCALE_ALL$])
m4trace:configure.ac:14021: -1- m4_pattern_allow([^WITH_LOCALES$])
m4trace:configure.ac:14032: -1- m4_pattern_allow([^GIT_REFERENCE_SRC$])
m4trace:configure.ac:14043: -1- m4_pattern_allow([^GIT_LINK_SRC$])
m4trace:configure.ac:14073: -1- m4_pattern_allow([^BRAND_INTRO_IMAGES$])
m4trace:configure.ac:14074: -1- m4_pattern_allow([^CUSTOM_BRAND_DIR$])
m4trace:configure.ac:14075: -1- m4_pattern_allow([^CUSTOM_BRAND_IMAGES$])
m4trace:configure.ac:14076: -1- m4_pattern_allow([^DEFAULT_BRAND_IMAGES$])
m4trace:configure.ac:14094: -1- m4_pattern_allow([^PROGRESSBARCOLOR$])
m4trace:configure.ac:14095: -1- m4_pattern_allow([^PROGRESSSIZE$])
m4trace:configure.ac:14096: -1- m4_pattern_allow([^PROGRESSPOSITION$])
m4trace:configure.ac:14097: -1- m4_pattern_allow([^PROGRESSFRAMECOLOR$])
m4trace:configure.ac:14098: -1- m4_pattern_allow([^PROGRESSTEXTCOLOR$])
m4trace:configure.ac:14099: -1- m4_pattern_allow([^PROGRESSTEXTBASELINE$])
m4trace:configure.ac:14115: -1- m4_pattern_allow([^EXTRA_BUILDID$])
m4trace:configure.ac:14135: -1- m4_pattern_allow([^OOO_VENDOR$])
m4trace:configure.ac:14136: -1- m4_pattern_allow([^OOO_VENDOR$])
m4trace:configure.ac:14154: -1- m4_pattern_allow([^ANDROID_PACKAGE_NAME$])
m4trace:configure.ac:14165: -1- m4_pattern_allow([^WITH_COMPAT_OOWRAPPERS$])
m4trace:configure.ac:14173: -1- m4_pattern_allow([^INSTALLDIRNAME$])
m4trace:configure.ac:14180: -1- m4_pattern_allow([^PREFIXDIR$])
m4trace:configure.ac:14183: -1- m4_pattern_allow([^LIBDIR$])
m4trace:configure.ac:14186: -1- m4_pattern_allow([^DATADIR$])
m4trace:configure.ac:14189: -1- m4_pattern_allow([^MANDIR$])
m4trace:configure.ac:14192: -1- m4_pattern_allow([^DOCDIR$])
m4trace:configure.ac:14195: -1- m4_pattern_allow([^BINDIR$])
m4trace:configure.ac:14198: -1- m4_pattern_allow([^INSTALLDIR$])
m4trace:configure.ac:14201: -1- m4_pattern_allow([^TESTINSTALLDIR$])
m4trace:configure.ac:14218: -1- m4_pattern_allow([^GDRIVE_CLIENT_ID$])
m4trace:configure.ac:14219: -1- m4_pattern_allow([^GDRIVE_CLIENT_SECRET$])
m4trace:configure.ac:14231: -1- m4_pattern_allow([^ALFRESCO_CLOUD_CLIENT_ID$])
m4trace:configure.ac:14232: -1- m4_pattern_allow([^ALFRESCO_CLOUD_CLIENT_SECRET$])
m4trace:configure.ac:14244: -1- m4_pattern_allow([^ONEDRIVE_CLIENT_ID$])
m4trace:configure.ac:14245: -1- m4_pattern_allow([^ONEDRIVE_CLIENT_SECRET$])
m4trace:configure.ac:14259: -1- m4_pattern_allow([^nodep$])
m4trace:configure.ac:14301: -1- m4_pattern_allow([^PARALLELISM$])
m4trace:configure.ac:14338: -1- m4_pattern_allow([^ILIB$])
m4trace:configure.ac:14339: -1- m4_pattern_allow([^ILIB_FOR_BUILD$])
m4trace:configure.ac:14361: -1- m4_pattern_allow([^HAVE_CPP_CONSTEVAL$])
m4trace:configure.ac:14423: -1- m4_pattern_allow([^ENABLE_MERGELIBS$])
m4trace:configure.ac:14427: -1- m4_pattern_allow([^MERGELIBS$])
m4trace:configure.ac:14442: -1- m4_pattern_allow([^ICECREAM_RUN$])
m4trace:configure.ac:14452: -1- m4_pattern_allow([^x_ICECC_VERSION$])
m4trace:configure.ac:14453: -1- m4_pattern_allow([^ICECC_VERSION$])
m4trace:configure.ac:14500: -1- m4_pattern_allow([^MPL_HAVE_SUBSET$])
m4trace:configure.ac:14505: -1- m4_pattern_allow([^MPL_SUBSET$])
m4trace:configure.ac:14514: -1- m4_pattern_allow([^ENABLE_FORMULA_LOGGER$])
m4trace:configure.ac:14518: -1- m4_pattern_allow([^ENABLE_FORMULA_LOGGER$])
m4trace:configure.ac:14524: -1- m4_pattern_allow([^ENABLE_FORMULA_LOGGER$])
m4trace:configure.ac:14564: -1- m4_pattern_allow([^COMPATH$])
m4trace:configure.ac:14599: -1- m4_pattern_allow([^ATL_INCLUDE$])
m4trace:configure.ac:14600: -1- m4_pattern_allow([^ATL_LIB$])
m4trace:configure.ac:14601: -1- m4_pattern_allow([^FIND$])
m4trace:configure.ac:14602: -1- m4_pattern_allow([^SORT$])
m4trace:configure.ac:14603: -1- m4_pattern_allow([^WIN_GREP$])
m4trace:configure.ac:14604: -1- m4_pattern_allow([^WIN_LS$])
m4trace:configure.ac:14605: -1- m4_pattern_allow([^WIN_TOUCH$])
m4trace:configure.ac:14607: -1- m4_pattern_allow([^BUILD_TYPE$])
m4trace:configure.ac:14609: -1- m4_pattern_allow([^SOLARINC$])
m4trace:configure.ac:14613: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:14623: -1- m4_pattern_allow([^TEMP_DIRECTORY$])
m4trace:configure.ac:14688: -1- m4_pattern_allow([^LO_PATH$])
m4trace:configure.ac:14696: -1- m4_pattern_allow([^x_LO_ELFCHECK_ALLOWLIST$])
m4trace:configure.ac:14697: -1- m4_pattern_allow([^LO_ELFCHECK_ALLOWLIST$])
m4trace:configure.ac:14699: -1- libo_FUZZ_SUMMARY
m4trace:configure.ac:14774: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:14774: -1- m4_pattern_allow([^LTLIBOBJS$])
